#! /usr/bin/env python
# -*- coding: utf-8 -*-
# Copyright (C) 2002-2011 The LyX Team
# Copyright (C) 2002-2007 José Matos <jamatos@lyx.org>
# Copyright (C) 2002-2004 Dekel Tsur <dekel@lyx.org>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

" Program used to convert between different versions of the lyx file format."
import optparse
import sys
import LyX

def main():
    args = {}
    args["usage"] = "usage: %prog [options] [file]"

    args["version"] = """lyx2lyx, version %s
Copyright (C) 2011 The LyX Team, José Matos and Dekel Tsur""" % LyX.version__

    args["description"] = """Convert old lyx file <file> to newer format,
    files can be compressed with gzip.  If there no file is specified then
    the standard input is assumed, in this case gziped files are not
    handled."""

    parser = optparse.OptionParser(**args)

    parser.set_defaults(debug=LyX.default_debug__, cjk_encoding = '')
    parser.add_option("-d", "--debug", type="int",
                      help="level=0..2 (O_ quiet, 10_verbose) default: 2")
    parser.add_option("-q", "--quiet",
                      action="store_const", const=0, dest="debug")
    parser.add_option("-v", "--verbose",
                      action="store_const", const=1, dest="debug")
    parser.add_option("--noisy",
                      action="store_const", const=10, dest="debug")
    parser.add_option("-c", "--encoding", dest="cjk_encoding",
                      help="files in format 413 and lower are read and"
                           " written in the format of CJK-LyX."
                           "If encoding is not given or 'auto' the encoding"
                           "is determined from the locale.")
    parser.add_option("-e", "--err", dest="error",
                      help= "file name of the error file else goes to stderr")
    parser.add_option("-o", "--output",
                      help= "name of the output file else goes to stdout")
    parser.add_option("-t", "--to", dest= "end_format",
                      help= "destination file format, default (latest)")
    parser.add_option("-V", "--final_version", dest= "final_version",
                      help= "destination version, default (latest)")
    parser.add_option("-l", "--list", action="store_true",
                      help = "list all available formats and supported versions")
    parser.add_option("-n", "--try-hard", action="store_true",
                      help = "try hard (ignore any convertion errors)")
    parser.add_option("-s", "--systemlyxdir", dest= "systemlyxdir",
                      help= "LyX system directory for conversion from version 489 or older")

    (options, args) = parser.parse_args()
    if args:
        options.input = args[0]
    else:
        options.input = None

    if options.list:
        sys.stderr.write(LyX.format_info())
        sys.exit()
    else:
        del options.list

    doc = LyX.File(**options.__dict__)
    doc.convert()
    doc.write()

    sys.exit(doc.status)

if __name__ == "__main__":
    main()

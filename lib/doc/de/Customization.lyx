#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin /systemlyxdir/doc/de/
\textclass scrbook
\begin_preamble
% Präambel nicht verändern!!!
%
% Die Präambel stellt sicher, dass das Benutzerhandbuch korrekt
% in die Formate pdf, ps und dvi exportiert werden kann.
% Wenn Probleme beim Exportieren auftreten, können Sie sich
% an das LyX-Dokumentationsteam wenden.
% EMail: lyx-docs@lists.lyx.org

% Setzt den Link für Spruenge zu Gleitabbildungen
% auf den Anfang des Gelitobjekts und nicht aufs Ende
\usepackage[figure]{hypcap}

% Die Seiten des Inhaltsverzeichnisses werden römisch numeriert,
% ein PDF-Lesezeichen für das Inhaltsverzeichnis wird hinzugefügt
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \frontmatter
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
  \mainmatter }

\@ifpackageloaded{babel}{
 % Linkfläche für Querverweise vergrößern und automatisch benennen,
 \AtBeginDocument{\renewcommand{\ref}[1]{\mbox{\autoref{#1}}}}
 \addto\extrasngerman{%
  \renewcommand*{\equationautorefname}[1]{}%
  \renewcommand{\sectionautorefname}{Kap.\negthinspace}%
  \renewcommand{\subsectionautorefname}{Kap.\negthinspace}%
  \renewcommand{\subsubsectionautorefname}{Kap.\negthinspace}%
 }
}{}
\end_preamble
\options fleqn,bibliography=totoc,index=totoc,BCOR7.5mm,titlepage,captions=tableheading
\use_default_options false
\begin_modules
logicalmkup
\end_modules
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf2
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "LyX-Anpassung: Möglichkeiten für fortgeschrittene Benutzer"
\pdf_author "LyX Team, deutsche Übersetzung: Peter Sütterlin, Leif Albers und Hartmut Haase"
\pdf_subject "LyX-Dokumentation, Anpassung"
\pdf_keywords "LyX, Dokumentation"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "linkcolor=black, citecolor=black, urlcolor=blue, filecolor=blue,  pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize default
\use_geometry false
\use_package amsmath 0
\use_package amssymb 0
\use_package cancel 0
\use_package esint 0
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\notefontcolor #0000ff
\branch OutDated
\selected 0
\filename_suffix 0
\color #faf0e6
\end_branch
\index Stichwortverzeichnis
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language german
\papercolumns 1
\papersides 2
\paperpagestyle headings
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
\SpecialChar LyX
-Anpassung:
\begin_inset Newline newline
\end_inset

Möglichkeiten für fortgeschrittene Benutzer
\end_layout

\begin_layout Author
vom \SpecialChar LyX
-Team
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Übersetzung: 
\noun on
Peter Sütterlin
\noun default
, 
\noun on
Leif Albers
\noun default
 und 
\noun on
Hartmut
\noun default
 
\noun on
Haase
\noun default
 (
\noun on
HHa
\noun default
, bis März 2010).
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Version 2.2.x
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Einleitung
\end_layout

\begin_layout Standard
In diesem Teil der Dokumentation wird beschrieben, welche Möglichkeiten
 \SpecialChar LyX
 bietet, um es den eigenen Wünschen anzupassen.
 Es werden Dinge wie Tastaturkürzel, Vorschau am Bildschirm, Optionen zum
 Drucken, das Senden von Befehlen an \SpecialChar LyX
 durch den \SpecialChar LyX
-Server, Internationalisierung,
 Installation neuer \SpecialChar LaTeX
-Klassen und \SpecialChar LyX
-Layouts usw.
\begin_inset space \space{}
\end_inset

behandelt.
 Es kann hier nicht alles beschrieben werden, das an \SpecialChar LyX
 individuell eingestellt
 und verändert werden kann — die Entwickler fügen Neuerungen schneller ein,
 als wir sie dokumentieren können — doch werden die grundlegenden Fähigkeiten
 von \SpecialChar LyX
 dokumentiert sowie für einige der etwas obskuren Hinweise gegeben.
\end_layout

\begin_layout Standard
Mit der Version 1.1.6 von \SpecialChar LyX
 wurde eine neue Schnittstelle zu den konfigurierbaren
 Eigenschaften eingeführt, die Sie über den Menüpunkt 
\family sans
Werkzeuge\SpecialChar menuseparator
Einstellungen
\family default
\SpecialChar ldots
 aufrufen können.
 Diese macht die weiter unten aufgeführten Erläuterungen zu den Konfigurationsda
teien von \SpecialChar LyX
 nicht überflüssig, aber es vereinfacht doch den Prozess, \SpecialChar LyX
 an
 
\emph on
Ihre
\emph default
 Bedürfnisse anzupassen.
\end_layout

\begin_layout Chapter
Die Konfigurationsdateien von \SpecialChar LyX

\end_layout

\begin_layout Standard
Dieses Kapitel soll Ihnen dabei helfen, sich mit den Konfigurationsdateien
 von \SpecialChar LyX
 vertraut zu machen.
 Bevor Sie jedoch weiterlesen, sollten Sie herausfinden, wo sich das Systemverze
ichnis von \SpecialChar LyX
 auf Ihrem Rechner befindet.
 Sie erfahren dies über den Menüpunkt 
\family sans
Hilfe\SpecialChar menuseparator
Über
\begin_inset space ~
\end_inset

LyX
\family default
.
 In diesem Verzeichnis speichert \SpecialChar LyX
 alle systemweiten Konfigurationsdateien,
 wir werden es im weiteren 
\family sans
LyX
\family typewriter
Dir
\family default
 nennen.
\end_layout

\begin_layout Section
Was befindet sich in 
\family sans
LyX
\family typewriter
Dir
\family default
?
\end_layout

\begin_layout Standard
Das Verzeichnis 
\family sans
LyX
\family typewriter
Dir
\family default
 sowie seine Unterverzeichnisse enthalten eine Anzahl Dateien, mit denen
 das Verhalten von \SpecialChar LyX
 beeinflusst werden kann.
 Diese Dateien können direkt von \SpecialChar LyX
 aus über den Dialog 
\family sans
Werkzeuge\SpecialChar menuseparator
Einstellungen
\family default
\SpecialChar ldots
 gelesen und geändert werden.
 Fast alles, was Sie möglicherweise an \SpecialChar LyX
 ändern wollen, können Sie hier einstelle
n.
 Jedoch können auch viele interne Dinge in \SpecialChar LyX
 angepasst werden, indem man
 diverse andere Dateien in 
\family sans
LyX
\family typewriter
Dir
\family default
 verändert.
 Sie sind in verschiedene Kategorien unterteilt, die in den folgenden Unterabsch
nitten behandelt werden.
\end_layout

\begin_layout Subsection
Automatisch erzeugte Dateien
\end_layout

\begin_layout Standard
Diese Dateien werden automatisch bei der Konfiguration von \SpecialChar LyX
 erzeugt.
 Sie enthalten verschiedene Standardwerte, die durch Untersuchung des Systems
 ermittelt werden.
 Normalerweise sollte man sie nicht verändern, da sie jederzeit von \SpecialChar LyX
 überschrieb
en werden können.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
lyxrc.defaults
\family default
\series default
 enthält Standardwerte für diverse Befehle.
 Einstellungen, die Ihnen nicht zusagen, können einfach über 
\family sans
Werkzeuge\SpecialChar menuseparator
Einstellungen
\family default
\SpecialChar ldots
 verändert werden.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
packages.lst
\family default
\series default
 enthält eine Auf\SpecialChar ligaturebreak
listung aller \SpecialChar LaTeX
-Pakete, die von \SpecialChar LyX
 erkannt wurden.
 Derzeit wird diese Liste von \SpecialChar LyX
 selber nicht benutzt, jedoch ist die Information,
 zusammen mit einigem anderen, über den Menüpunkt 
\family sans
Hilfe\SpecialChar menuseparator
LaTeX
\begin_inset space \space{}
\end_inset

Konfiguration
\family default
 zugänglich.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
textclass.lst
\family default
\series default
 ist eine Liste mit den im Verzeichnis 
\family typewriter
layout
\family default
 gefundenen Textklassen, zusammen mit den entsprechenden \SpecialChar LaTeX
-Dokumentenklassen
 und einer kurzen Beschreibung.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
doc/La
\family sans
TeX
\family typewriter
Config.lyx
\family default
 wird bei der Konfiguration aus der Datei 
\family typewriter
La
\family sans
TeX
\family typewriter
Config.
\begin_inset Newline linebreak
\end_inset

lyx.in
\family default
 erzeugt.
 Jeder Eintrag der Form 
\family typewriter
@chk_bla@
\family default
 wird dabei durch 
\emph on
yes
\emph default
 oder 
\emph on
no
\emph default
 ersetzt, je nachdem, ob das Paket 
\family typewriter
bla
\family default
 gefunden wurde.
\end_layout

\begin_layout Subsection
Verzeichnisse
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
bind/
\family default
\series default
 Dieses Verzeichnis enthält Dateien mit der Endung 
\family typewriter
.bind
\family default
.
 In ihnen werden die Tastenkombinationen festgelegt, mit denen Sie Menüs
 öffnen und Bearbeitungsoperationen direkt starten können.
 Falls eine Datei 
\family typewriter
$LANG_xxx.bind
\family default
 mit einer an die internationalisierte Version von \SpecialChar LyX
 angepassten Tastenbelegung
 existiert, wird diese bevorzugt geladen.
 Näheres dazu finden Sie in 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Internationales-LyX"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
clipart/
\family default
\series default
 Hier sind einige PostScript-Bilder gespeichert, die Sie in Ihre Dokumente
 einbinden können.
 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
doc/
\family default
\series default
 Enthält die Dateien der \SpecialChar LyX
-Dokumentation (einschließlich der, die Sie gerade
 lesen).
 Eine kleine Ausnahmestellung hat die bereits beschriebene Datei 
\family typewriter
La
\family sans
TeX
\family typewriter
Config.lyx
\family default
.
 Auch hier wird eine übersetzte Version mit dem Vorsatz 
\family typewriter
$LANG_
\family default
 vor dem Dateinamen zuerst gesucht und, falls vorhanden, geladen.
 Siehe dazu 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Internationales-LyX"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
examples/
\family default
\series default
 Enthält Beispieldateien, die erläutern, wie Sie die unterschiedlichen Möglichke
iten von \SpecialChar LyX
 nutzen können.
 Verwenden Sie die Schaltfläche 
\family sans
Beispiele
\family default
 im Dateiauswahlmenü, um in dieses Verzeichnis zu gelangen.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
images/[math/]
\family default
 Enthält Bilddateien, die von der Dialogbox 
\family sans
Aufzählungszeichen
\family default
 im Menü 
\family sans
Do\SpecialChar softhyphen
ku\SpecialChar softhyphen
ment
\family default
\SpecialChar menuseparator

\family sans
Einstellungen
\family default
 benötigt werden.
 Außerdem finden Sie hier die unterschiedlichen Icons für die Werkzeugleiste
 und das Bild für den Startbildschirm.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
kbd/
\family default
\series default
 Hier sind die Definitionsdateien für die Tastaturbelegung gespeichert.
 Näheres dazu finden Sie im 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Internationale-Tastaturtabellen"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
layouts/
\family default
\series default
 Hier werden die in 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Installieren-neuer-Textklassen"

\end_inset

 beschriebenen Layoutdateien für die unterschiedlichen Dokumentenklassen
 gespeichert.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
lyx2lyx
\family default
/ Enthält Dateien, die für die Konvertierung zwischen verschiedenen \SpecialChar LyX

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"=
\end_layout

\end_inset

Versionen benötigt werden.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
scripts
\family default
/ Hier sind einige Python-Skripte abgelegt, die \SpecialChar LyX
 für bestimmte interne Operation
en benötigt.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
templates
\family default
/ Enthält die Vorlagendateien, die Ihnen bei 
\family sans
Datei\SpecialChar menuseparator
Neu
\begin_inset space \space{}
\end_inset

von
\begin_inset space \space{}
\end_inset

Vorlage
\family default
 präsentiert werden, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Vorlagen-erstellen"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
tex/
\family default
 Einige \SpecialChar LyX
-spezifische \SpecialChar LaTeX
-Textklassen- (
\family typewriter
.cls
\family default
) und -Stildateien
\begin_inset Newline linebreak
\end_inset

 (.
\family typewriter
sty
\family default
).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
ui/
\family default
 Hier finden Sie Dateien mit der Endung 
\family typewriter
.ui
\family default
, die die Benutzerschnitt\SpecialChar softhyphen
stel\SpecialChar softhyphen
le von \SpecialChar LyX
 festlegen, also welche Einträge in
 welchen Menüs sind, und wie die Werkzeugleiste zusammengesetzt ist.
\end_layout

\begin_layout Subsection
Dateien, die Sie nicht verändern sollten
\end_layout

\begin_layout Standard
Die folgenden Dateien werden intern von \SpecialChar LyX
 verwendet.
 Sie sollten im Normalfall nur von den Entwicklern editiert werden.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
CREDITS
\family default
\series default
 Diese Datei enthält eine Liste der Entwickler.
 Ihr Inhalt wird über die Menüauswahl 
\family sans
Hilfe\SpecialChar menuseparator
Über
\begin_inset space \space{}
\end_inset

LyX
\family default
 angezeigt.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
chkconfig.ltx
\family default
\series default
 ist ein \SpecialChar LaTeX
-Skript, das bei der Konfiguration verwendet wird.
 Starten Sie es nie direkt.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
configure
\family default
\series default
 ist das eigentliche Skript, das zur Neukonfiguration von \SpecialChar LyX
 verwendet wird.
 Es erzeugt die Konfigurationsdateien in dem Verzeichnis, von dem aus es
 aufgerufen wurde.
\end_layout

\begin_layout Subsection
Andere Dateien
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
encodings
\family default
 Die hier enthaltene Tabelle beschreibt, wie die unterschiedlichen Zeichenkodier
ungen in Unicode dargestellt werden.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
external_templates
\family default
 Diese Datei enthält die Vorlagen für das Feature 
\family sans
Externes
\begin_inset space \space{}
\end_inset

Material
\family default
-Modul.
 Siehe dazu 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Externes-Material-einfügen"

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
languages
\family default
 Eine Liste mit allen derzeit von \SpecialChar LyX
 unterstützten Sprachen.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
latexfonts
\end_layout

\end_inset

 Diese Datei enthält Informationen über die unterstützen \SpecialChar LaTeX
-Schriften.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
layouttranslations
\end_layout

\end_inset

 Diese Datei enthält Übersetzungen für lokalisierbare Absatzstile (siehe
 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:I18n"

\end_inset

).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
unicodesymbols
\end_layout

\end_inset

 Diese Datei enthält Informationen über Unicode-kodierte Glyphen (Zeichen)
 und die Art und Weise, wie diese in \SpecialChar LyX
 mit Hilfe von \SpecialChar LaTeX
 unterstützt werden.
\end_layout

\begin_layout Section
Das lokale Konfigurationsverzeichnis
\end_layout

\begin_layout Standard
Eventuell benutzen Sie \SpecialChar LyX
 als normaler Benutzer und wollen dennoch einige
 Einstellungen der Konfiguration ändern.
 Zu diesem Zweck gibt es ein benutzereigenes Verzeichnis 
\family typewriter
UserDir
\family default
, in dem Ihre gesamte persönliche Konfiguration gespeichert wird.
 Der Name dieses Verzeichnisses wird als 
\emph on
Benutzerverzeichnis
\emph default
 in 
\family sans
Hilfe\SpecialChar menuseparator
Über
\begin_inset space ~
\end_inset

LyX
\family default
 angezeigt.
 Dieses Verzeichnis wird als Spiegelung des systemweiten Verzeichnisses
 verwendet.
 Das bedeutet, dass jede Datei, die Sie dort speichern, die entsprechende
 Datei im Systemverzeichnis ersetzt.
 Jede der im vorigen Abschnitt beschriebenen Konfigurationsdateien kann
 sich entweder im Systemverzeichnis 
\family sans
LyX
\family typewriter
Dir
\family default
 oder aber in Ihrem privaten Verzeichnis befinden.
 Im ersten Fall gelten die Einstellungen für alle Benutzer, im zweiten Fall
 nur für Sie.
\end_layout

\begin_layout Standard
Dies lässt sich an einigen Beispielen leichter erklären:
\end_layout

\begin_layout Itemize
Um eine \SpecialChar LyX
 Version älter als 1.1.6 umzukonfigurieren, musste der Benutzer zunächst
 die Datei 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

LyXDir/lyxrc.example
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
HHa: wie bereits im Benutzerhandbuch erwähnt, ist URL eine einfache Möglichkeit,
 um Schreibmaschinenformat umzubrechen.
\end_layout

\end_inset

 nach 
\family typewriter
UserDir/lyxrc
\family default
 kopieren und diese dann manuell editieren.
 Neuere Versionen von \SpecialChar LyX
 lesen diese Datei zwar noch, wenn sie in 
\family typewriter
UserDir
\family default
 gefunden wird, aber alle Änderungen, die über den neuen Dialog 
\family sans
Werkzeuge\SpecialChar menuseparator
Einstellungen
\family default
 gemacht werden, werden in der Datei 
\family typewriter
preferences
\family default
 gespeichert.
 Danach (das heißt wenn 
\family typewriter
preferences
\family default
 gefunden wird) wird die alte 
\family typewriter
lyxrc
\family default
 nicht mehr eingelesen und kann gelöscht werden.
 
\end_layout

\begin_layout Itemize
Wenn Sie mit dem Menüpunkt 
\family sans
Werkzeuge\SpecialChar menuseparator
Neu
\begin_inset space \space{}
\end_inset

konfigurieren
\family default
 eine Neukonfiguration von \SpecialChar LyX
 durchführen, werden die dabei erzeugten Dateien
 in Ihrem privaten Konfigurationsverzeichnis 
\family typewriter
UserDir
\family default
 gespeichert.
 Das bedeutet, dass ab sofort etwaige neue Dokumentenklassen, die Sie in
 Ihrem Verzeichnis 
\family typewriter
UserDir/layouts
\family default
 gespeichert haben, im Feld 
\family sans
Dokumentklasse
\family default
 des Dialoges 
\family sans
Dokument
\family default
\SpecialChar menuseparator

\family sans
Einstellungen
\family default
\SpecialChar ldots
 erscheinen.
\end_layout

\begin_layout Itemize
Falls Sie irgendwelche Dateien für neue \SpecialChar LaTeX
-Dokumentenklassen in einem Verzeichnis
 installiert haben, das \SpecialChar LaTeX
 über die Umgebungsvariable 
\family typewriter
TEX\SpecialChar softhyphen
IN\SpecialChar softhyphen
PUTS
\family default
 findet, können auch diese in \SpecialChar LyX
 verwendet werden.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
vorausgesetzt, es gibt auch eine 
\family typewriter
.layout
\family default
-Datei dafür.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Wenn Sie sich von einem \SpecialChar LyX
-FTP-Server eine aktuellere Version (oder zum Beispiel
 diese deutsche Version) der Dokumentation besorgt haben, sie aber nicht
 
\emph on
offiziell
\emph default
 installieren können, da Sie keine Systemadministratorrechte haben, können
 Sie diese Dateien einfach nach 
\family typewriter
UserDir/doc
\family default
 kopieren, und sie werden automatisch über das 
\family sans
Hilfe
\family default
-Menü geöffnet.
\end_layout

\begin_layout Section
\SpecialChar LyX
 mit mehreren Konfigurationen
\end_layout

\begin_layout Standard
Die hochgradige Konfigurierbarkeit von \SpecialChar LyX
 durch das lokale Verzeichnis wird
 für diejenigen nicht ausreichend sein, die parallel mehrere unterschiedliche
 Konfigurationen verwenden wollen, zum Beispiel unterschiedliche Tastaturkürzel
 und/oder Druckerkonfigurationen.
 Sie können dies durch das Anlegen von mehreren Konfigurationsverzeichnissen
 erreichen und \SpecialChar LyX
 jeweils beim Start mitteilen, welches davon verwendet werden
 soll.
\end_layout

\begin_layout Standard
Indem Sie \SpecialChar LyX
 mit der Option 
\family typewriter
-userdir
\family default
 
\family typewriter
\emph on
<verzeichnis>
\family default
\emph default
 starten, erreichen Sie, dass die Konfiguration aus diesem Verzeichnis anstelle
 des Standardverzeichnisses gelesen wird (das Standardverzeichnis ermitteln
 Sie, indem Sie \SpecialChar LyX
 ohne diese Option starten).
 Falls das so angegebene Verzeichnis noch nicht existiert, fragt \SpecialChar LyX
 genau
 wie beim ersten Start nach, ob es angelegt werden soll.
 Die Konfiguration in diesem Verzeichnis können Sie dann wie im Normalfall
 in \SpecialChar LyX
 verändern, die Einstellungen im Standardverzeichnis werden aber nicht
 verändert – beide Verzeichnisse sind völlig unabhängig.
 Anstelle der Kommandozeilenoption können Sie übrigens auch die Umgebungsvariabl
e 
\family typewriter
LYX_USERDIR_20x
\family default
 auf das zu verwendende Verzeichnis setzen.
\end_layout

\begin_layout Standard
Unterschiedliche Konfigurationsverzeichnisse bedeuten aber auch zusätzlichen
 Aufwand: Wenn Sie etwa eine neue Layoutdatei in 
\family typewriter
UserDir/layouts
\family default
 hinzufügen und diese für alle Konfigurationen sichtbar sein soll, müssen
 Sie sie in 
\emph on
allen
\emph default
 Verzeichnissen separat hinzufügen.
 Sie können das jedoch mit einem Trick umgehen: Nachdem \SpecialChar LyX
 das neue UserDir
 angelegt hat, sind praktisch alle Unterverzeichnisse (siehe oben) leer.
 Sie können also all diese Verzeichnis durch einen symbolischen Link auf
 das entsprechende Verzeichnis im originalen 
\family typewriter
UserDir
\family default
 ersetzen.
 Lediglich mit dem Verzeichnis 
\family typewriter
doc
\family default
 müssen Sie vorsichtig sein, denn dort wird eine Datei durch das Konfigurationss
kript (
\family sans
Werkzeuge\SpecialChar menuseparator
Neu
\begin_inset space \space{}
\end_inset

konfigurieren
\family default
) abgelegt, die konfigurationsabhängig ist.
\end_layout

\begin_layout Chapter
Der Dialog Werkzeuge
\family sans
\SpecialChar menuseparator

\family default
Ei
\family sans
nstellungen
\end_layout

\begin_layout Section
Formate
\begin_inset CommandInset label
LatexCommand label
name "sec:Formate"

\end_inset


\end_layout

\begin_layout Standard
Als ersten Schritt müssen Sie Ihre Dateiformate definieren, wenn das nicht
 bereits passiert ist.
 Dazu öffnen Sie 
\family sans
Werkzeuge\SpecialChar menuseparator
Einstellungen\SpecialChar menuseparator
Datei-Handhabung\SpecialChar menuseparator
Dateiformate
\family default
 und klicken auf 
\family sans
Neu
\family default
.
 Das 
\family sans
Format
\family default
-Feld enthält den Namen, unter dem das Format im GUI identifiziert wird.
 Im Feld 
\family sans
Einsortieren
\begin_inset space \space{}
\end_inset

als
\family default
 steht der Name, mit dem das Format intern identifiziert wird.
 Außerdem muss eine 
\family sans
Dateiendung
\family default
 festgelegt werden.
 Diese drei Felder sind erforderlich.
 Zusätzlich kann ein 
\family sans
Tastenkürzel
\family default
 definiert werden.
 Zum Beispiel ruft 
\family sans
Strg+D
\family default
 das Menü 
\family sans
Dokument\SpecialChar menuseparator
Ansicht\SpecialChar menuseparator
DVI
\family default
 auf.
\end_layout

\begin_layout Standard
Ein Format kann ein 
\family sans
Bearbeitungsprogramm
\family default
 und ein 
\family sans
Anzeigeprogramm
\family default
 haben.
 Am Beispiel von JPEG-Dateien steht bei mir in beiden Feldern 
\family sans
gimp
\family default
.
 Was bei Ihnen steht, hängt von der Software-Ausstattung Ihres PCs ab.
 Zum Definieren des Befehls können auch die vier Variablen aus dem nächsten
 Abschnitt benutzt werden.
 Das 
\family sans
Bearbeitungsprogramm
\family default
 wird aufgerufen, wenn Sie nach einem Rechtsklick auf ein Bild 
\family sans
Datei
\begin_inset space \space{}
\end_inset

extern
\begin_inset space \space{}
\end_inset

bearbeiten
\family default
 auswählen.
\end_layout

\begin_layout Standard
Der MIME-Typ
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
MIME (
\emph on
\lang english
Multipurpose Internet Mail Extensions
\emph default
\lang ngerman
) ist ein Kodierstandard, der ursprünglich entwickelt wurde, um die Struktur
 und den Aufbau von E-Mails festzulegen.
 Er wird mittlerweile aber auch zur generellen Bestimmung von Dateiformaten
 eingesetzt.
\end_layout

\end_inset

 eines Formats muss nicht zwingend angegeben werden, wenn er aber angegeben
 wird, dann sollte dies einheitlich über alle Formatvarianten hinweg geschehen.
 Der MIME-Typ wird verwendet, um ein Dateiformat über den Dateiinhalt zu
 erkennen.
 Für einige wichtige Dateiformate wurde von der zuständigen Organisation
 (
\begin_inset CommandInset href
LatexCommand href
name "IANA"
target "http://www.iana.org/assignments/media-types/"

\end_inset

) noch kein offizielles MIME-Typ festgelegt.
 \SpecialChar LyX
 verwendet daher die erweiterte inoffizielle Liste, die von 
\begin_inset CommandInset href
LatexCommand href
name "freedesktop.org"
target "http://www.freedesktop.org/wiki/Specifications/shared-mime-info-spec"

\end_inset

 festgelegt wurde.
\end_layout

\begin_layout Standard
Wenn 
\family sans
Dokumentformat
\family default
 angekreuzt ist, weiß \SpecialChar LyX
, dass das Format für den Dokumentexport geeignet
 ist.
 Wenn dann auch noch ein geeigneter Konverter existiert (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Konverter"

\end_inset

), wird das Format unter 
\family sans
Datei\SpecialChar menuseparator
Exportieren
\family default
 erscheinen.
 Außerdem wird es im Menü 
\family sans
Dokument\SpecialChar menuseparator
Ansicht
\family default
 erscheinen, wenn ein 
\family sans
Anzeigeprogramm
\family default
 angegeben wurde.
 Reine Grafikformate wie 
\family typewriter
png
\family default
 sollten diese Option nicht benutzen, dagegen aber Formate, die sowohl Vektorgra
fiken als auch Dokumente repräsentieren wie 
\family typewriter
pdf
\family default
.
\end_layout

\begin_layout Standard
Die Option 
\family sans
Vektorgrafik-Format
\family default
 sagt \SpecialChar LyX
, dass ein Format Vektorgrafiken ent\SpecialChar softhyphen
halten kann.
 Diese Information wird dazu benutzt, um ein Zielformat für eingefügte Grafiken
 für den 
\family typewriter
pdflatex
\family default
-Export zu bestimmen.
 Eingefügte Grafiken müs\SpecialChar softhyphen
sen nach 
\family typewriter
pdf
\family default
, 
\family typewriter
png
\family default
 oder 
\family typewriter
jpg
\family default
 konvertiert werden, weil 
\family typewriter
pdflatex
\family default
 keine anderen Grafikformate handhaben kann.
 Hat eine eingefügte Grafik bereits eines der Formate, wird sie nach pdf
 konvertiert, wenn 
\family sans
Vektorgrafik-Format
\family default
 angekreuzt ist, sonst nach 
\family typewriter
png
\family default
.
\end_layout

\begin_layout Section
Kopierer
\end_layout

\begin_layout Standard
Weil alle Konvertierungen im temporären Verzeichnis von \SpecialChar LyX
 stattfinden, muss
 eine Datei manchmal geändert werden bevor sie ins temporäre Verzeichnis
 kopiert wird, damit die Konvertierung durchgeführt werden kann.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Wenn die Datei beispielsweise auf andere Dateien mit relativen Pfaden verweist
 – vielleicht Bilder – und diese Pfade beim Kopieren ungültig werden.
\end_layout

\end_inset

 Das macht ein Kopierer: er kopiert eine Datei ins (oder vom) temporären
 Verzeichnis und ändert sie dabei.
\end_layout

\begin_layout Standard
Die Definitionen der Kopierer können acht Variablen benutzen:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$s
\end_layout

\end_inset

 ist das Systemverzeichnis von \SpecialChar LyX
 (zum Beispiel 
\family typewriter
/usr/local/bin/
\begin_inset Newline linebreak
\end_inset

lyx
\family default
).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$i
\end_layout

\end_inset

 ist die Eingabedatei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$o
\end_layout

\end_inset

 ist die Ausgabedatei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$b
\end_layout

\end_inset

 Der Basisname (ohne Dateinamenerweiterung), wie er im temporären \SpecialChar LyX
-Verzeichnis
 verwendet wird.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$p
\end_layout

\end_inset

 ist der vollständige Dateipfad des temporären \SpecialChar LyX
-Verzeichnisses.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$r
\end_layout

\end_inset

 ist der vollständige Dateipfad der \SpecialChar LyX
-Datei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$f
\end_layout

\end_inset

 ist der Dateiname der \SpecialChar LyX
-Datei (ohne Verzeichnispfad).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$l
\end_layout

\end_inset

 ist der 
\emph on
\SpecialChar LaTeX
-Name
\emph default
.
 Dies sollte der Dateiname sein, den \SpecialChar LaTeX
 im 
\family typewriter

\backslash
include
\family default
-Befehl benutzt.
 Er ist nur dann relevant, wenn die expor\SpecialChar softhyphen
tier\SpecialChar softhyphen
ten Dateien für den Befehl
 geeignet sind.
\end_layout

\begin_layout Standard
Kopierer können benutzt werden, um 
\emph on
fast
\emph default
 alles mit Ausgabedateien zu machen.
 Wenn Sie zum Beispiel 
\family typewriter
pdf
\family default
-Dateien in ein spezielles Verzeichnis kopieren wollen, können Sie ein Shell-Skr
ipt wie folgt schreiben:
\end_layout

\begin_layout LyX-Code
#!/bin/bash
\end_layout

\begin_layout LyX-Code
FROMFILE=$1
\end_layout

\begin_layout LyX-Code
TOFILE=`basename $2`
\end_layout

\begin_layout LyX-Code
cp $FROMFILE /home/you/pdf/$TOFILE
\end_layout

\begin_layout Standard
Speichern Sie das Skript ausführbar in Ihrem lokalen \SpecialChar LyX
-Verzeichnis – etwa
 
\family typewriter
/home/you/lyx/scripts/pdfkopierer.sh
\family default
.
 Dann wählen Sie in 
\family sans
Werkzeuge\SpecialChar menuseparator
Ein\SpecialChar softhyphen
stel\SpecialChar softhyphen
lun\SpecialChar softhyphen
gen\SpecialChar menuseparator
Datei-Handhabung\SpecialChar menuseparator
Dateiformate
\family default
 das Format 
\family sans
PDF
\begin_inset space \space{}
\end_inset

(pdflatex)
\family default
 und tragen im Kopierer-Feld 
\family typewriter
pdfkopierer.sh $$i $$o
\family default
 ein.
\end_layout

\begin_layout Standard
Kopierer werden von \SpecialChar LyX
 in vielen eigenen Konvertierungen benutzt.
 Wenn auf dem PC geeignete Programme installiert sind, wird \SpecialChar LyX
 automatisch
 Kopierer für 
\family sans
HTML
\family default
 und 
\family sans
HTML
\begin_inset space \space{}
\end_inset

(MS
\begin_inset space \space{}
\end_inset

Word)
\family default
 installieren.
 Wenn diese Formate exportiert werden, 
\emph on
sieht
\emph default
 der Kopierer, dass nicht nur die Haupt-HTML-Datei, sondern auch verschiedene
 zugehörige Dateien (Stildateien, Bilder usw.) kopiert werden müssen.
 All diese Dateien werden in ein Unterverzeichnis des Verzeichnisses geschrieben
, in dem die \SpecialChar LyX
-Datei steht.
\begin_inset Foot
status open

\begin_layout Plain Layout
Kopierer können angepasst werden.
 Der optionale Parameter 
\family typewriter
-e
\family default
 kann eine durch Kommata getrennte Liste von Erweiterungen enthalten, die
 mitkopiert werden sollen.
 Wenn es fehlt, werden alle Dateien kopiert.
 Der Parameter 
\family typewriter
-t
\family default
 bestimmt die Namenserweiterung, die an den erzeugten Verzeichnisnamen angehängt
 werden soll.
 Standardmäßig ist es 
\family sans
LyXconv
\family default
, so dass die aus 
\family typewriter
Datei.lyx
\family default
 erzeugte HTML-Datei im Unterverzeichnis 
\family typewriter
Datei.html.
\family sans
LyX
\family typewriter
conv
\family default
 landet.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Konverter
\begin_inset CommandInset label
LatexCommand label
name "sec:Konverter"

\end_inset


\end_layout

\begin_layout Standard
Sie können eigene Konverter in 
\family sans
Werkzeuge\SpecialChar menuseparator
Ein\SpecialChar softhyphen
stel\SpecialChar softhyphen
lun\SpecialChar softhyphen
gen\SpecialChar menuseparator
Datei-Handhabung\SpecialChar menuseparator
Kon\SpecialChar softhyphen
verter
\family default
 definieren.
 Dazu wählen aus 
\family sans
Von
\begin_inset space \space{}
\end_inset

Format
\family default
 und 
\family sans
In
\begin_inset space \space{}
\end_inset

Format
\family default
 jeweils eins aus, schreiben den benötigten Befehl ins Feld 
\family sans
Konverter
\family default
 und klicken auf 
\family sans
Hinzufügen
\family default
 rechts oben.
 Sie können im Befehl mehrere Variablen benutzen:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$s
\family default
 ist das Systemverzeichnis von \SpecialChar LyX
 (zum Beispiel 
\family typewriter
/usr/local/bin/
\begin_inset Newline linebreak
\end_inset

lyx
\family default
).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$i
\family default
 ist die Eingabedatei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$o
\family default
 ist die Ausgabedatei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$b
\family default
 ist der Dateiname ohne Erweiterung (siehe Linux-Befehl 
\family typewriter
basename
\family default
).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$p
\family default
 ist der Pfad zur Eingabedatei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$r
\family default
 ist der Pfad zur ursprünglichen Eingabedatei.
 Wenn eine Kette von Konvertern aufgerufen wird, weicht er von 
\family typewriter
$$p
\family default
 ab.
\end_layout

\begin_layout Standard
Ins Feld Zusatz-Flag können Sie folgende, durch Kommata getrennte, Flags
 schrei\SpecialChar softhyphen
ben:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
latex
\family default
 Damit ein besonderer \SpecialChar LaTeX
-Lauf gestartet, der die \SpecialChar LaTeX
-Fehlermel\SpecialChar softhyphen
dun\SpecialChar softhyphen
gen von \SpecialChar LyX
 verfügbar
 macht.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
needaux
\family default
 benötigt die \SpecialChar LaTeX
-Datei 
\family typewriter
xyz.aux
\family default
 zur Konvertierung.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
nice
\end_layout

\end_inset

 benötigt eine 
\begin_inset Quotes gld
\end_inset

schöne
\begin_inset Quotes grd
\end_inset

 Datei, also eine, die so aussieht, wie die, die man über das Menü exportiert
 (ohne interne Hilfsbefehle wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
input@path
\end_layout

\end_inset

).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
xml
\family default
 Damit wird die Ausgabe im XML-Format gespeichert.
\end_layout

\begin_layout Standard
Die folgenden Flags sind keine richtigen, weil sie ein Argument der Form
 
\family typewriter
key=value
\family default
 benutzen:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
parselog
\family default
 Wenn das gesetzt ist, wird der Standardfehler des Konverters in die Datei
 
\family typewriter
infile.out
\family default
 umgeleitet, und das Skript wird so ausgeführt: 
\family typewriter
script
\begin_inset space \space{}
\end_inset

<
\begin_inset space \space{}
\end_inset

infile.out
\begin_inset space \space{}
\end_inset

>
\begin_inset space \space{}
\end_inset

infile.log
\family default
.
 Das Argument kann 
\family typewriter
$$s
\family default
 ent\SpecialChar softhyphen
halten.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
resultdir
\family default
 ist der Name des Verzeichnisses, in dem der Konverter die erzeugten Dateien
 ablegen soll.
 \SpecialChar LyX
 wird das Verzeichnis nicht anlegen und auch nichts hineinkopieren, aber
 dieses Verzeichnis an seinen Bestimmungs\SpecialChar softhyphen
ort kopieren.
 Das Argument darf 
\family typewriter
$$b
\family default
 enthalten, was durch die Basisnamen von Ein- oder Ausgabedatei ersetzt
 wird, wenn das Verzeichnis kopiert wird.
\begin_inset Newline newline
\end_inset

Beachten Sie, das 
\family typewriter
resultdir
\family default
 und 
\family typewriter
usetempdir
\family default
 zusammen keinen Sinn machen.
 Wenn das erste definiert wurde, wird das zweite ignoriert.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
resultfile
\family default
 ist der Name der Ausgabedatei und darf 
\family typewriter
$$b
\family default
 enthalten.
 Er wird nur zusammen mit 
\family typewriter
resultdir
\family default
 benutzt und ist auch da nur optional.
 Wenn er nicht angegeben wird, wird 
\family typewriter
index
\family default
 benutzt.
\end_layout

\begin_layout Standard
Keines dieser Flags wird zur Zeit in einem Konverter benutzt, der zusammen
 mit \SpecialChar LyX
 installiert wird.
\end_layout

\begin_layout Standard
Sie müssen nicht für alle Formate, zwischen denen Sie konvertieren wollen,
 Konverter definieren.
 Zum Beispiel gibt es keinen Konverter von \SpecialChar LyX
 nach PostScript, aber \SpecialChar LyX
 wird
 PostScript exportieren.
 Dies geschieht, indem zunächst eine \SpecialChar LaTeX
-Datei erzeugt wird – dafür wird auch
 kein Konverter benötigt –, die dann mit dem Konverter von \SpecialChar LyX
 nach DVI in
 eine DVI-Datei konvertiert wird, die schließlich nach PostScript konvertiert
 wird.
 \SpecialChar LyX
 findet solche Konverter-Ketten automatisch und wird immer die kürzeste
 finden.
\end_layout

\begin_layout Standard
Trotzdem können Sie Mehrfachkonversionen zwischen Dateiformaten definieren.
 Zum Beispiel liefert die Standardkonfiguration von \SpecialChar LyX
 fünf Möglichkeiten,
 um von \SpecialChar LaTeX
 nach PDF zu konvertieren:
\end_layout

\begin_layout Enumerate
direkt mit 
\family typewriter
pdflatex
\end_layout

\begin_layout Enumerate
mit 
\family typewriter
ps2pdf
\family default
 über DVI und PostScript
\end_layout

\begin_layout Enumerate
mit 
\family typewriter
dvipdfm
\family default
 über DVI
\end_layout

\begin_layout Enumerate
direkt mit 
\family typewriter
Xe\SpecialChar TeX

\end_layout

\begin_layout Enumerate
direkt mit 
\family typewriter
Lua\SpecialChar TeX

\end_layout

\begin_layout Standard
Um andere Ketten zu definieren, müssen Sie andere Ziel-
\emph on
Dateiformate
\emph default
 definieren, wie in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Formate"

\end_inset

 beschrieben.
 Zum Beispiel enthält die Standardkonfiguration verschiedene Formate für
 pdf-Dateien, die 
\family sans
pdf
\family default
 (für 
\family typewriter
ps2pdf
\family default
), 
\family sans
pdf2
\family default
 (für 
\family typewriter
pdflatex
\family default
), 
\family sans
pdf3
\family default
 (für 
\family typewriter
dvipdfm
\family default
), 
\family sans
pdf4
\family default
 (für 
\family typewriter
Xe\SpecialChar TeX

\family default
) und 
\family sans
pdf5
\family default
 (für 
\family typewriter
Lua\SpecialChar TeX

\family default
) heißen.
\end_layout

\begin_layout Chapter
Internationales \SpecialChar LyX

\begin_inset CommandInset label
LatexCommand label
name "cha:Internationales-LyX"

\end_inset


\end_layout

\begin_layout Standard

\emph on
Anmerkung des Übersetzers: Dieses Kapitel behandelt zwei Themenbereiche.
 Einmal wird in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Eine-andere-Sprache"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tastaturkürzel-für-andere"

\end_inset

 erklärt, wie man \SpecialChar LyX
 mitteilt, dass man in einer fremdsprachlichen Umgebung
 arbeitet.
 Der überwiegende Rest des Kapitels erläutert, wie man \SpecialChar LyX
 an eine neue Sprache
 anpasst, das heißt wie man es übersetzt.
 Da diese Arbeiten für eine deutsche Umgebung bereits erledigt wurden, dürfte
 dieser Teil des Kapitels für die Leser dieser Übersetzung weitgehend uninteress
ant sein.
 Die letzten beiden Abschnitte, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Internationale-Tastaturbelegung"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Internationale-Tastaturtabellen"

\end_inset

, waren bei der Übersetzung noch nicht ganz up to date.
 (Leif Albers)
\end_layout

\begin_layout Standard
\SpecialChar LyX
 kann mit übersetzten Versionen seiner Benutzerschnittstelle arbeiten.
 Als dieser Text erstellt wurde, waren über den normalen englischen Text
 Anpassungen für 23 Sprachen Bestandteil der \SpecialChar LyX
-Distribution.
 Die von Ihnen benutze Sprache zeigt Ihnen der Befehl 
\family typewriter
locale
\family default
.
 (Für weitere Informationen über 
\emph on
locale
\emph default
-Definitionen ist die Manpage 
\emph on
locale(5)
\emph default
 ein guter Startpunkt.)
\end_layout

\begin_layout Standard
Bitte beachten Sie, dass diese Übersetzungen zwar funktionieren, aber oft
 ein paar Einschränkungen unterliegen.
 Insbesondere wurde das Design der Popup-Menüs auf den englischen Text zugeschni
tten.
 Das bedeutet, dass der übersetzte Text an einigen Stellen mehr Platz benötigt
 als dort zur Verfügung steht.
 Dies ist natürlich nur ein Darstellungsproblem und schränkt nicht die Funktions
weise von \SpecialChar LyX
 ein.
 Sie werden auch feststellen, dass einige Übersetzungen nicht für alle Menüpunkt
e Tastenkürzel definieren.
 Manchmal stehen einfach nicht genügend freie Buchstaben zur Verfügung,
 manchmal hatte der Übersetzer einfach bisher keine Zeit, sich darum zu
 kümmern.
\end_layout

\begin_layout Standard
Wir werden versuchen, diese Dinge in einer späteren Version zu korrigieren.
\end_layout

\begin_layout Section
\SpecialChar LyX
 übersetzen
\end_layout

\begin_layout Subsection
Die Benutzerschnittstelle übersetzen (Textmeldungen)
\end_layout

\begin_layout Standard
\SpecialChar LyX
 verwendet die GNU-gettext-Bibliothek, um die Internationalisierung der
 Benutzerschnittstelle zu verwalten.
 Um \SpecialChar LyX
 dazu zu bringen, in allen Menüs und Dialog-Boxen Ihre Lieblingssprache
 zu verwenden, müssen Sie eine 
\family typewriter
po
\family default
-Datei für diese Sprache erstellen.
 Anschließend müssen Sie daraus eine 
\family typewriter
mo
\family default
-Datei erzeugen und diese installieren.
 Eine umfassende Anleitung dazu finden Sie in der Dokumentation für GNU
 gettext.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Natürlich nur auf englisch.
 Die Veränderungen, die an der 
\family typewriter
po
\family default
-Datei durchgeführt werden müssen, sind allerdings recht intuitiv.
\end_layout

\end_inset

 Kurz gesagt müssen folgende Veränderungen durchgeführt werden (
\family typewriter
\series bold
xx
\family default
\series default
 bezeichnet den Sprachencode der neuen Sprache):
\end_layout

\begin_layout Itemize
Laden Sie den \SpecialChar LyX
-Quellcode herunter.
 (Siehe die 
\begin_inset CommandInset href
LatexCommand href
name "Informationen im Netz"
target "http://www.lyx.org/HowToUseGIT"

\end_inset

.)
\end_layout

\begin_layout Itemize
Kopieren Sie die Datei 
\family typewriter
lyx.pot
\family default
 in das Verzeichnis der .po-Dateien.
 Benennen Sie anschließend die Datei in 
\family typewriter
\series bold
xx
\series default
.po
\family default
 um.
 (Falls 
\family typewriter
lyx.pot
\family default
 nicht existiert, kann sie mit dem Befehl 
\family typewriter
make
\begin_inset space \space{}
\end_inset

lyx.pot
\family default
 neu erzeugt werden.)
\end_layout

\begin_layout Itemize
Editieren Sie 
\family typewriter
xx.po
\family default
.
\family typewriter

\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Für diese Aufgabe gibt es spezielle Programme, wie 
\family typewriter
Poedit
\family default
 (für alle Plattformen) oder 
\family typewriter
KBabel
\family default
 (für KDE).
 
\family typewriter
Emacs
\family default
 hat ebenfalls einen Modus, der Sie bei dieser Arbeit unterstützt, siehe
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.gnu.org/software/gettext/manual/html_node/PO-Mode.html
\backslash
#PO-Mode
\end_layout

\end_inset

.
\end_layout

\end_inset


\family default
 Für einige Menü- und Widgetfunktionen gibt es Tastenkürzel, die ebenfalls
 übersetzt werden sollten.
 Diese Tasten werden mit '
\family typewriter
|
\family default
' markiert und sollten passend mitübersetzt werden.
 Sie sollten auch das Informationsfeld am Anfang der neuen po-Datei ausfüllen
 (mit Ihrer EMail-Adresse, usw.), damit Sie für andere Leute erreichbar sind,
 die Ihnen Vorschläge oder unterhaltsame Flames schicken möchten.
\end_layout

\begin_layout Itemize
Erzeugen Sie in 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

LYX-SOURCE-DIR/po/lyx.pot
\end_layout

\end_inset

 mit dem Befehl 
\family typewriter
make up\SpecialChar softhyphen
date-gmo
\family default
 die Datei 
\family typewriter
\series bold
xx
\series default
.gmo
\family default
.
\end_layout

\begin_layout Itemize
Installieren Sie die 
\family typewriter
gmo
\family default
-Datei mit dem Befehl 
\family typewriter
su -c 'make install'
\family default
.
\end_layout

\begin_layout Standard
Um eine neue 
\family typewriter
po
\family default
-Datei zu der \SpecialChar LyX
-
\emph on
Distribution
\emph default
 hinzuzufügen, müssen eine Reihe von Dateien (Konfigurations-Skripts und
 mehr) verändert werden.
 Aber dank der gettext-Bibliothek ist ein Einbinden in den \SpecialChar LyX
-Quellcode für
 den Anwender unnötig.
\end_layout

\begin_layout Standard
Wenn Sie eine Übersetzung für eine Sprache erstellt haben, die \SpecialChar LyX
 zur Zeit
 noch nicht unterstützt, sollten Sie uns ruhig ein Patch mit Ihrer Datei
 zusenden.
 Wie man ein Patch erstellt, erfahren Sie in der README-Datei im Verzeichnis
 
\family typewriter
LYX-SOURCE-DIR/po/
\family default
.
\end_layout

\begin_layout Subsection
Die Dokumentation übersetzen
\end_layout

\begin_layout Standard

\emph on
[Anmerkung des Übersetzers:
\emph default
 wenn 
\emph on
Sie die Dokumentation übersetzen wollen, benutzen Sie als Vorlage auf jeden
 Fall das englische Original.
 Übersetzungen – diese eingeschlossen – sind oft nicht ganz auf dem neuesten
 Stand.
 -LA]
\end_layout

\begin_layout Standard
Auch die Online-Dokumentation (im 
\family sans
Hilfe
\family default
-Menü) kann (und sollte!) übersetzt werden.
 Wenn übersetzte Versionen verfügbar sind und die 
\emph on
locale
\emph default
 entsprechend gesetzt wurde, werden diese automatisch von \SpecialChar LyX
 benutzt.
 Zur Zeit sind Übersetzungen in etwa 20 Sprachen vorhanden.
 \SpecialChar LyX
 sucht nach übersetzten Versionen in 
\family sans
LyX
\family typewriter
Dir/doc/
\series bold
xx
\series default
_DocName.lyx
\family default
, wobei wie immer 
\family typewriter
\series bold
xx
\family default
\series default
 für das entsprechende Sprach\SpecialChar softhyphen
kür\SpecialChar softhyphen
zel steht, das in der Umgebungsvariablen
 
\family typewriter
LANG
\family default
 gesetzt wird.
\end_layout

\begin_layout Standard
Falls solche Dateien nicht existieren, wird die englische Version verwendet.
 Auch die übersetzten Versionen müssen (bis auf das 
\family typewriter
\series bold
xx
\series default
_
\family default
) den gleichen (englischen) Dateinamen (im Beispiel oben 
\family typewriter
DocName
\family default
) tragen wie die englischen Originale.
 Wenn Sie gerne die Dokumentation übersetzen möchten (übrigens ein guter
 Weg, um die Originale Korrektur zu lesen!), hier ein paar Tipps, die Ihnen
 möglicherweise etwas Arbeit ersparen:
\end_layout

\begin_layout Itemize
Werfen Sie einen Blick auf die Seiten des Übersetzungsteams auf der Homepage
 des \SpecialChar LyX
-Entwickler-Teams: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.lyx.org/Translation
\end_layout

\end_inset

.
 Dort erfahren Sie, welche Texte bereits in Ihre Sprache übersetzt sind,
 auch sehen Sie, ob jemand (und wenn ja, wer) die Übersetzungsaktivitäten
 koordiniert.
\end_layout

\begin_layout Standard
Wenn Sie dann mit der eigentlichen Übersetzungsarbeit beginnen, sind hier
 einige Tipps, die Ihnen vielleicht helfen, einige Schwierigkeiten zu überwinden
:
\end_layout

\begin_layout Itemize
Machen Sie im Dokumentationsteam mit! Informationen dazu gibt es in 
\family sans
Hilfe\SpecialChar menuseparator
Einführung
\family default
.
 Dies ist übrigens das erste Dokument, das Sie übersetzen sollten.
\end_layout

\begin_layout Itemize
Machen Sie sich mit den typographischen Konventionen der Sprache vertraut,
 in die Sie übersetzen möchten.
 Typographie ist eine alte Kunst, und in vielen Teilen der Welt wurden verschied
ene Konventionen eingeführt.
 Auch sollten Sie die typographische Terminologie in Ihrem Land lernen.
 Eine eigene Terminologie würde nur die Leser verwirren.
 
\emph on
(Warnung: Typographie macht süchtig!)
\end_layout

\begin_layout Itemize
Legen Sie eine Kopie des Originaldokumentes an.
 Dies wird Ihre Arbeitskopie.
 Sie können diese als selbst-übersetzten Hilfe-Datei in \SpecialChar LyX
 verwenden, indem
 Sie sie in den Ordner 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UserDir/doc/xx/
\end_layout

\end_inset

 kopieren.
\begin_inset Newline newline
\end_inset


\begin_inset Note Greyedout
status open

\begin_layout Plain Layout

\series bold
Achtung:
\series default
 Für komplexe Dokumente mit externem Material (Bilder usw.) werden die Dateipfade
 von relativ auf absolut geändert, wenn man das Dokument verschiebt.
 Daher ist es das Beste, \SpecialChar LyX
 mittels Git zu beziehen (siehe 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.lyx.org/HowToUseGIT
\end_layout

\end_inset

) und das Dokument im Verzeichnis zu belassen.
 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Wann immer Sie einen Fehler im Originaltext entdecken, korrigieren Sie ihn
 und teilen dem Rest des Dokumentationsteams Ihre Veränderungen mit.
 (Sie haben nicht vergessen, dem Dokumentationsteam beizutreten, oder?)
 
\emph on
Auch die Originaldokumentation ist nicht komplett.
\end_layout

\begin_layout Section
Internationale Tastaturbelegung
\begin_inset CommandInset label
LatexCommand label
name "sec:Internationale-Tastaturbelegung"

\end_inset


\end_layout

\begin_layout Subsection
Eigene Tastaturtabellen definieren: das 
\emph on
Keymap
\emph default
-Dateiformat
\end_layout

\begin_layout Standard
Sehen wir uns einmal die 
\emph on
Keymap
\emph default
-Datei ein wenig näher an.
 Es handelt sich um eine ASCII-Datei, in der folgendes definiert wird:
\end_layout

\begin_layout Itemize
Taste-Taste- oder Taste-String-Transformationen
\end_layout

\begin_layout Itemize

\emph on
Tote
\emph default
 Tasten – sogenannte 
\emph on
dead keys
\end_layout

\begin_layout Itemize
Ausnahmen für tote Tasten.
\end_layout

\begin_layout Standard
Zur Definition einer Taste-Taste- oder Taste-String-Transformation dient
 folgender Befehl:
\end_layout

\begin_layout Quotation

\family typewriter

\backslash
kmap Taste Ausgabe
\end_layout

\begin_layout Standard
wobei 
\family typewriter
Taste
\family default
 die zu übersetzende Taste bezeichnet und 
\family typewriter
Ausgabe
\family default
 die Taste oder den String, der dafür in das Dokument eingefügt werden soll.
 Eine tote Taste definiert man mit:
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Quotation

\family typewriter

\backslash
kmod
\family default
 
\family typewriter
Taste Tote-Taste
\end_layout

\begin_layout Standard
wobei 
\family typewriter
Taste
\family default
 wieder eine Taste auf der Tastatur bezeichnet und 
\family typewriter
Tote-Taste
\family default
 der Name einer toten Taste ist.
 \SpecialChar LyX
 unterstützt folgende toten Tasten (Abkürzungen in Klammern):
\end_layout

\begin_layout Quotation

\emph on
Name
\begin_inset space \hfill{}
\end_inset

Beispiel
\end_layout

\begin_layout Quotation
acute (acu)
\begin_inset space \hfill{}
\end_inset

áéíóú
\end_layout

\begin_layout Quotation
grave (gra)
\begin_inset space \hfill{}
\end_inset

àèìòù
\end_layout

\begin_layout Quotation
macron (mac)
\begin_inset space \hfill{}
\end_inset

 ō
\end_layout

\begin_layout Quotation
tilde (til)
\begin_inset space \hfill{}
\end_inset

ñÑ
\end_layout

\begin_layout Quotation
underbar (underb)
\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
b o
\end_layout

\end_inset


\end_layout

\begin_layout Quotation
cedilla (ced)
\begin_inset space \hfill{}
\end_inset

çÇ
\end_layout

\begin_layout Quotation
underdot (underd)
\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
d o
\end_layout

\end_inset


\end_layout

\begin_layout Quotation
circumflex (circu)
\begin_inset space \hfill{}
\end_inset

âêîôû
\end_layout

\begin_layout Quotation
circle (circl)
\begin_inset space \hfill{}
\end_inset

ÅůŮ
\end_layout

\begin_layout Quotation
tie (tie)
\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
t oo
\end_layout

\end_inset


\end_layout

\begin_layout Quotation
breve (bre)
\begin_inset space \hfill{}
\end_inset

ă
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
u o
\end_layout

\end_inset


\end_layout

\begin_layout Quotation
caron (car)
\begin_inset space \hfill{}
\end_inset

čšž
\end_layout

\begin_layout Quotation
hungarian umlaut (hug)
\begin_inset space \hfill{}
\end_inset

őű
\end_layout

\begin_layout Quotation
umlaut (uml)
\begin_inset space \hfill{}
\end_inset

äöü
\end_layout

\begin_layout Quotation
dot (dot)
\begin_inset space \hfill{}
\end_inset

ż
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
.s
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Da es auf vielen internationalen Tastaturen Ausnahmen dafür gibt, wie eine
 bestimmte tote Taste das folgende Zeichen verändern soll, können diese
 definiert werden, und zwar mit:
\end_layout

\begin_layout Quotation

\family typewriter

\backslash
kxmod
\family default
 
\family typewriter
Tote-Taste Taste Ausgabe
\end_layout

\begin_layout Standard
Zum Beispiel soll caron-o auf einer slowakischen Tastatur ein circumflex-o
 erzeugen.
 Dies erreicht man mit:
\end_layout

\begin_layout Quotation

\family typewriter

\backslash
kxmod
\family default
 
\family typewriter
caron o "
\backslash
^o"
\end_layout

\begin_layout Standard
Auch müssen für die Buchstaben i und j Ausnahmen definiert werden, um den
 Punkt zu löschen, bevor ein Akzent eingefügt wird.
 Ich werde dies beizeiten ändern, hatte aber bisher noch keine Zeit dazu.
\end_layout

\begin_layout Standard
Ach so, zur Definition der Ausgabe: Der Backslash 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash

\family default

\begin_inset Quotes grd
\end_inset

 ist ein Sonderzeichen.
 Um ihn einzugeben, muss man einen doppelten Backslash 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash

\backslash

\family default

\begin_inset Quotes grd
\end_inset

 eingeben.
 Auch das Anführungszeichen 
\begin_inset Quotes gld
\end_inset

"
\begin_inset Quotes grd
\end_inset

 und das Doppelkreuz 
\begin_inset Quotes gld
\end_inset


\family typewriter
#
\family default

\begin_inset Quotes grd
\end_inset

 haben eine andere Bedeutung.
 
\family typewriter
#
\family default
 bezeichnet einen Kommentar, Anführungszeichen markieren den Anfang und
 das Ende eines Strings (das heißt einer \SpecialChar LaTeX
-Befehlssequenz).
 Um diese Zeichen einzugeben, muss ein Backslash vorangestellt werden (also:
 
\family typewriter

\backslash
"
\family default
 und 
\family typewriter

\backslash
#
\family default
).
 Wenn Sie eine funktionierende Keymap-Datei für eine neue Sprache angefertigt
 haben, mailen Sie diese bitte an das Entwickler-Team, damit sie in die
 nächste Distribution integriert werden kann.
\end_layout

\begin_layout Standard
In Zukunft werden auch noch folgende Befehle unterstützt:
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
kinclude Dateiname
\family default
\emph on

\begin_inset space \hfill{}
\end_inset


\emph default
bindet eine andere Datei ein 
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
kprog
\family default
 
\family typewriter
Programm
\family default
\emph on

\begin_inset space \hfill{}
\end_inset


\emph default
 definiert ein externes Keymap-Programm 
\end_layout

\begin_layout Standard
Auch sollte es die 
\family typewriter
lyxrc-D
\family default
atei nach Voreinstellungen durchsuchen (zum Beispiel nach einer Option 
\family typewriter

\backslash
kinclude
\family default
, um eine Standardtastatur zu verwenden).
\end_layout

\begin_layout Section
Internationale Tastaturtabellen: 
\emph on
Keymaps
\emph default

\begin_inset CommandInset label
LatexCommand label
name "sec:Internationale-Tastaturtabellen"

\end_inset


\end_layout

\begin_layout Standard
Die nächsten beiden Abschnitte beschreiben detailliert die Syntax der 
\family typewriter
.kmap
\family default
- und 
\family typewriter
.cdef
\family default
-Dateien.
 Diese Abschnitte sollten Ihnen dabei helfen, Ihre eigene Tastaturtabelle
 zu entwerfen, wenn die vorhandenen nicht ganz Ihren Bedürfnissen entsprechen.
\end_layout

\begin_layout Subsection
Die 
\family typewriter
.kmap
\family default
-Datei
\begin_inset CommandInset label
LatexCommand label
name "subsec:Die-.kmap-Datei"

\end_inset


\end_layout

\begin_layout Standard
Eine 
\family sans
\shape up
.
\family typewriter
kmap
\family default
\shape default
-Datei transformiert gedrückte Tasten zu Buchstaben oder Strings (Zeichenketten)
 – es definiert ein 
\emph on
keyboard mapping
\emph default
.
 Im Folgenden werden die Schlüsselwörter 
\family typewriter
kmap
\family default
, 
\family typewriter
kmod
\family default
, 
\family typewriter
kxmod
\family default
 und 
\family typewriter
kcomb
\family default
 beschrieben.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\shape up
kmap
\family default
\shape default
 Transformiere einen Buchstaben zu einem String
\end_layout

\begin_layout LyX-Code

\backslash
kmap 
\family roman
\emph on
Zeichen Ausgabe
\end_layout

\begin_layout Standard
Dieser Ausdruck definiert, dass 
\emph on
Zeichen
\emph default
 zu 
\emph on
Ausgabe
\emph default
 transformiert werden soll.
 Dabei müssen in 
\emph on
Ausgabe
\emph default
 die Zeichen Backslash 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash

\family default

\begin_inset Quotes grd
\end_inset

 und Anführungszeichen 
\begin_inset Quotes gld
\end_inset


\family typewriter
"
\family default

\begin_inset Quotes grd
\end_inset

 mit einem vorangehenden Backslash versehen werden.
 
\end_layout

\begin_layout Standard
Als Beispiel ein Ausdruck, der das Zeichen 
\begin_inset Quotes gld
\end_inset


\family typewriter
/
\family default

\begin_inset Quotes grd
\end_inset

 ausgibt, wenn die Taste 
\begin_inset Quotes gld
\end_inset


\family typewriter
&
\family default

\begin_inset Quotes grd
\end_inset

 gedrückt wurde:
\end_layout

\begin_layout LyX-Code

\backslash
kmap & /
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\shape up
kmod
\family default
\shape default
 Spezifiziere ein Akzentzeichen 
\end_layout

\begin_layout LyX-Code

\backslash
kmod 
\family roman
\emph on
Zeichen Akzent erlaubt
\end_layout

\begin_layout Standard
Dieser Ausdruck wird dafür sorgen, dass 
\emph on
Zeichen
\emph default
 als ein bestimmter 
\emph on
Akzent
\emph default
 interpretiert wird, und zwar bei allen Zeichen, die in 
\emph on
erlaubt
\emph default
 aufgeführt sind.
 Dies ist der Mechanismus toter Tasten 
\emph on
(dead keys).
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Der Ausdruck 
\emph on
tote
\emph default
 
\emph on
Taste
\emph default
 kommt daher, dass diese Taste allein kein Zeichen erzeugt, aber, gefolgt
 von einer anderen Taste, akzentuierte Zeichen erzeugt.
 Zum Beispiel kann auf diese Weise é
\begin_inset Quotes grd
\end_inset

 erzeugt werden.
\end_layout

\end_inset


\emph default
 Wenn Sie die Taste 
\emph on
Zeichen
\emph default
 drücken, gefolgt von einem Zeichen, das 
\emph on
nicht
\emph default
 in 
\emph on
erlaubt
\emph default
 aufgeführt wurde, werden einfach beide Zeichen einzeln ausgegeben.
\end_layout

\begin_layout Standard
Der folgende Ausdruck definiert, dass die Taste 
\begin_inset Quotes gld
\end_inset


\family typewriter
^
\family default

\begin_inset Quotes grd
\end_inset

 der circumflex-Akzent wird, wenn er von einem der Buchstaben a, e, i, o,
 u, A, E, I ,O oder U gefolgt wird:
\end_layout

\begin_layout LyX-Code

\backslash
kmod ^ circumflex aeiouAEIOU
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
kxmod
\family default
 Definiere eine Ausnahme zu einem Akzentzeichen
\end_layout

\begin_layout LyX-Code

\backslash
kxmod  
\family roman
\emph on
Akzent Zeichen Ausgabe
\end_layout

\begin_layout Standard
Dieser Ausdruck definiert eine Ausnahme für die Wirkung, die 
\emph on
Akzent
\emph default
 in Verbin\SpecialChar softhyphen
dung mit 
\emph on
Zeichen
\emph default
 haben soll.
 Dabei muss 
\emph on
Akzent
\emph default
 vorher mit Hilfe einer 
\family typewriter

\backslash
kmod
\family default
-Zeile einer Taste zugewiesen worden sein.
 Wenn Sie die Sequenz 
\emph on
Akzent, Zeichen
\emph default
 drücken, wird 
\emph on
Ausgabe
\emph default
 produziert.
 Falls solch eine Definition 
\emph on
nicht
\emph default
 existiert, und Sie 
\emph on
Akzent, Zeichen
\emph default
 eingeben, erhalten Sie das 
\emph on
Zeichen
\emph default
 – akzentuiert.
\end_layout

\begin_layout Standard
Der folgende Ausdruck sorgt dafür, dass \SpecialChar LaTeX
 bei einem 
\begin_inset Quotes gld
\end_inset

i
\begin_inset Quotes grd
\end_inset

 mit circumflex den I-Punkt entfernt, bevor das Akzentsymbol eingefügt wird:
\end_layout

\begin_layout LyX-Code

\backslash
kxmod circumflex i "
\backslash

\backslash
^{
\backslash

\backslash
i}"
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
kcomb
\family default
 Kombiniere zwei Akzentsymbole
\end_layout

\begin_layout LyX-Code

\backslash
kcomb 
\family roman
\emph on
Akzent1 Akzent2 erlaubt
\end_layout

\begin_layout Standard
Hier wird es ziemlich esoterisch.
 Dieser Ausdruck erlaubt die Kombination der Effekte von 
\emph on
Akzent1
\emph default
 und 
\emph on
Akzent2
\emph default
 (in dieser Reihenfolge!) bei allen 
\emph on
erlaubten
\emph default
 Zei\SpecialChar softhyphen
chen.
 Die Bedeutungen von 
\emph on
Akzent1
\emph default
 und 
\emph on
Akzent2
\emph default
 müssen zuvor mit Hilfe von 
\family typewriter

\backslash
kmod
\family default
 definiert worden sein.
\end_layout

\begin_layout Standard
Folgendes Beispiel aus der Datei 
\family typewriter
greek.kmap
\family default
:
\end_layout

\begin_layout LyX-Code

\backslash
kmod ; acute aeioyvhAEIOYVH 
\end_layout

\begin_layout LyX-Code

\backslash
kmod : umlaut iyIY 
\end_layout

\begin_layout LyX-Code

\backslash
kcomb acute umlaut iyIY
\end_layout

\begin_layout Standard
Diese Zeilen erlauben es, 
\begin_inset Quotes gld
\end_inset


\family typewriter
;:i
\family default

\begin_inset Quotes grd
\end_inset

 einzugeben und auf diese Weise 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash
'{
\backslash
"{i}}
\family default

\begin_inset Quotes grd
\end_inset

 zu erzeugen (
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
'{
\backslash
"{i}}
\end_layout

\end_inset

).
 In diesem Fall löscht die Backspace-Taste das letzte gedrückte Zei\SpecialChar softhyphen
chen.
 Wenn Sie also 
\family typewriter
;:
\family default
 
\family sans
Backspace
\family default
 
\family typewriter
i
\family default
 eingeben, erhalten Sie 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash
'(i)
\family default

\begin_inset Quotes grd
\end_inset

 (
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
'i
\end_layout

\end_inset

).
 
\end_layout

\begin_layout Subsection
Die 
\family typewriter
.cdef
\family default
-Datei
\end_layout

\begin_layout Standard
Nachdem \SpecialChar LyX
 die 
\family typewriter
.kmap
\family default
-Datei verarbeitet hat, erklärt eine 
\family typewriter
.cdef
\family default
-Datei, wie die einzelnen Symbole im gegenwärtigen Zeichensatz dargestellt
 werden sollen.
 Die \SpecialChar LyX
-Dis\SpecialChar softhyphen
tri\SpecialChar softhyphen
bu\SpecialChar softhyphen
tion enthält wenigstens die Dateien 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

iso8859-1.cdef
\end_layout

\end_inset

 und 
\family typewriter
\shape up
iso8859-
\begin_inset Newline linebreak
\end_inset

2.cdef
\family default
\shape default
.
\end_layout

\begin_layout Standard
Generell besteht eine 
\family typewriter
.
\shape up
cdef
\family default
\shape default
-Datei aus einer Reihe von Deklarationen der folgenden Form:
\end_layout

\begin_layout LyX-Code

\family roman
\emph on
Position_im_Zeichensatz String
\end_layout

\begin_layout Standard
Um beispielsweise dem String (
\emph on
Ausgabe
\emph default
 im vorigen Abschnitt) 
\begin_inset Quotes gld
\end_inset


\family typewriter
'{e}
\family default

\begin_inset Quotes grd
\end_inset

 das ent\SpecialChar softhyphen
spre\SpecialChar softhyphen
chen\SpecialChar softhyphen
de Zeichen im ISO-8859-1 Zeichensatz (233) zuzuweisen, benutzt
 man folgenden Ausdruck:
\end_layout

\begin_layout LyX-Code
233 "
\backslash

\backslash
'{e}"
\end_layout

\begin_layout Standard
Wieder müssen den Zeichen 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash

\family default

\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset


\family typewriter
"
\family default

\begin_inset Quotes grd
\end_inset

 ein Backslash vorangestellt werden.
 Beachten Sie, dass es durchaus möglich ist, dass dasselbe Zeichen (sinnvoll)
 zwei verschiedene Strings repräsentieren kann.
 Zum Beispiel in 
\family typewriter
i
\shape up
so-8859-7.cdef
\family default
\shape default
 gibt es die Zeilen:
\end_layout

\begin_layout LyX-Code
192 "
\backslash

\backslash
'{
\backslash

\backslash

\backslash
"{i}}"
\begin_inset Newline newline
\end_inset

192 "
\backslash

\backslash

\backslash
"{
\backslash

\backslash
'{i}}"
\end_layout

\begin_layout Standard
Wenn \SpecialChar LyX
 kein passendes Zeichen für einen String finden kann, der durch eine
 Tastensequenz erzeugt wurde, wird es versuchen, falls der String wie ein
 akzentuierter Buchstabe aussieht, auf dem Bildschirm den Buchstaben mit
 Akzent selbst zu zeichnen.
\end_layout

\begin_layout Subsection
Tote Tasten definieren
\end_layout

\begin_layout Standard

\emph on
Anmerkung des Übersetzers: An dieser Stelle weiche ich krass vom Original
 ab.
 Der englische Text ist hier viel zu weitschweifig und ein bisschen konfus.
 -LA
\end_layout

\begin_layout Standard
Es gibt noch eine zweite Möglichkeit, internationale Buchstaben mit Hilfe
 von 
\emph on
toten
\emph default
 
\emph on
Tasten (dead keys)
\emph default
 zu erzeugen – nämlich direkt in der 
\family typewriter
.bind
\family default
-Datei.
 Dazu ein einfaches Beispiel:
\end_layout

\begin_layout Standard
Nehmen wir an, Sie benötigen eine Zirkumflex-Taste.
 Diese können Sie definieren, indem Sie in der 
\family typewriter
lyxrc-D
\family default
atei folgende Zeile einfügen:
\end_layout

\begin_layout Standard

\family typewriter

\backslash
bind "asciicircum" "accent-circumflex"
\end_layout

\begin_layout Standard
Dabei ist 
\family typewriter
asciicircum
\family default
 die Bezeichnung, die das X11-System für die 
\begin_inset Quotes gld
\end_inset


\family typewriter
^
\family default

\begin_inset Quotes grd
\end_inset

-Taste verwendet.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Die Bezeichnungen anderer Symbole lassen sich ganz gut aus einer c-Include-Datei
 namens 
\family typewriter
keysymdef.h
\family default
 ablesen.
 Meist findet man sie in 
\family typewriter
/usr/X11/include/X11/
\family default
.
\end_layout

\end_inset

 
\family typewriter
accent-circum\SpecialChar softhyphen
flex
\family default
 ist ein \SpecialChar LyX
-Befehl, der den Zirkumflex-Akzent erzeugt.
\end_layout

\begin_layout Standard
Leider unterscheidet sich die Wirkungsweise der toten Tasten, die in 
\family typewriter
.lyxrc
\family default
 definiert wurden, merklich von der, die in 
\begin_inset CommandInset ref
LatexCommand vref
reference "subsec:Die-.kmap-Datei"

\end_inset

 beschrieben wurde.
\end_layout

\begin_layout Subsection
Ihre Sprachkonfiguration einstellen
\end_layout

\begin_layout Standard
Sie können Ihre 
\family typewriter
lyxrc-D
\family default
atei so verändern, dass Ihre gewünschte Sprachumgebung automatisch geladen
 wird, wenn \SpecialChar LyX
 gestartet wird.
 Dieser Abschnitt beschreibt Befehle, die folgendes spezifizieren:
\end_layout

\begin_layout Itemize
Standard-, erste und zweite Tastaturbelegung
\end_layout

\begin_layout Itemize
Zeichensatzkodierung
\end_layout

\begin_layout Standard
In Ihrer 
\family typewriter
lyxrc-D
\family default
atei finden Sie verschiedene Beispiele, wie man sie konfigurieren kann.
 Zum Beispiel können Sie einen Eintrag für eine Tastaturbelegung folgendermaßen
 vornehmen:
\end_layout

\begin_layout LyX-Code

\backslash
bind "american" "keymap-primary"
\end_layout

\begin_layout Standard
eine tote Taste 
\emph on
(dead key)
\emph default
 definieren:
\end_layout

\begin_layout LyX-Code

\backslash
bind "Alt+,"  "accent-cedilla"
\end_layout

\begin_layout Standard
oder eine Zeichensatzkodierung festlegen:
\end_layout

\begin_layout LyX-Code
# Die Norm für die Bildschirmzeichensätze 
\end_layout

\begin_layout LyX-Code
# Voreinstellung ist iso8859-1.
\end_layout

\begin_layout LyX-Code

\backslash
font_norm iso8859-2
\end_layout

\begin_layout Chapter
Installieren neuer Textklassen, Layouts und Vorlagen
\begin_inset CommandInset label
LatexCommand label
name "cha:Installieren-neuer-Textklassen"

\end_inset


\end_layout

\begin_layout Standard
In diesem Abschnitt wird beschrieben, wie Sie beim Installieren neuer Layout-
 und Vorlagedateien vorgehen müssen, außerdem auch eine kleine Auf\SpecialChar ligaturebreak
frischung,
 wie man neue Dokumentenklassen für \SpecialChar LaTeX
 korrekt installiert.
 Zunächst ein paar Definitionen:
\end_layout

\begin_layout Standard
Eine 
\emph on
Dokumentenklasse
\emph default
 ist eine \SpecialChar LaTeX
-Datei (normalerweise mit der Endung 
\family typewriter
.cls
\family default
 oder 
\family typewriter
.sty
\family default
), die das Format einer speziellen Art von Dokument beschreibt, etwa Artikel,
 Brief usw., und auch alle dazu notwendigen Befehle definiert.
\end_layout

\begin_layout Standard
Eine 
\emph on
Layout-Datei
\emph default
 ist eine \SpecialChar LyX
-Datei, die einer \SpecialChar LaTeX
-Dokumentenklasse ent\SpecialChar softhyphen
spricht und \SpecialChar LyX
 mitteilt,
 wie die diversen Formatelemente am Bildschirm dar\SpecialChar softhyphen
ge\SpecialChar softhyphen
stellt werden sollen,
 damit der Eindruck möglichst gut dem späteren Druckbild entspricht.
 Genauer gesagt beschreibt eine Layoutdatei eine 
\emph on
Textklasse
\emph default
, das interne Konstrukt, welches \SpecialChar LyX
 verwendet, um den Text am Bildschirm darzustel
len.
\end_layout

\begin_layout Standard

\emph on
Layout
\emph default
 und 
\emph on
Textklasse
\emph default
 sind somit in gewisser Weise äquivalent, aber es ist besser, die Datei
 als Layout zu bezeichnen und die interne Realisation im Speicher von \SpecialChar LyX
 als
 Textklasse.
 Eine Vorlage ist einfach ein \SpecialChar LyX
-Dokument, welches bereits einige vordefinierte
 Einträge für eine bestimmte Textklasse enthält.
 Derartige Vorlagen sind beispielsweise für Briefe oder Artikel für Zeitschrifte
n sehr hilfreich.
\end_layout

\begin_layout Section
Installation eines neuen \SpecialChar LaTeX
-Paketes
\end_layout

\begin_layout Standard
Bei manchen \SpecialChar TeX
-Installationen fehlt möglicherweise das eine oder andere Paket,
 das Sie gerne mit \SpecialChar LyX
 verwenden würden.
 Zum Beispiel wollen Sie Foil\SpecialChar TeX
 verwenden, ein Paket zur Erstellung von Dias
 und Folien für Overheadprojektoren.
 Moderne \SpecialChar LaTeX
-Distributionen wie \SpecialChar TeX
Live (2008 oder neuer) oder MiK\SpecialChar TeX
 besitzen ein
 grafisches Programm um solche Pakete zu installieren.
 Z.
\begin_inset space \thinspace{}
\end_inset

B.
 bei MiK\SpecialChar TeX
 starten Sie das Programm 
\begin_inset Quotes gld
\end_inset

Package
\begin_inset space ~
\end_inset

Manager
\begin_inset Quotes grd
\end_inset

 um eine Liste mit den verfügbaren Paketen zu bekommen.
 Um eines davon zu installieren, rechts-klicken Sie oder benutzen den entspreche
nden Werkzeugleistenknopf.
\end_layout

\begin_layout Standard
Falls Ihre \SpecialChar LaTeX
-Distribution keinen Paketmanager besitzt, oder falls das Paket
 nicht direkt über Ihre Distribution verfügbar ist, folgen Sie diesen Schritten
 um es manuell zu installieren:
\end_layout

\begin_layout Enumerate
Besorgen Sie sich das Paket von 
\begin_inset CommandInset href
LatexCommand href
name "CTAN"
target "http://www.ctan.org/"

\end_inset

 oder einer anderen Quelle.
\end_layout

\begin_layout Enumerate
Falls das Paket eine Datei mit der Endung 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.ins
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 enthält (was bei Foil\SpecialChar TeX
 der Fall ist), dann öffnen sie eine Kommandozeile
 wechseln in das Verzeichnis der Datei und führen den Befehl
\begin_inset Newline newline
\end_inset


\family sans
latex foiltex.ins
\family default

\begin_inset Newline newline
\end_inset

aus.
 Sie haben damit dass Paket entpackt und haben alle Dateien um es zu installiere
n.
 Die meisten \SpecialChar LaTeX
-Pakete sind nicht gepackt und man kann direkt mit der Installation
 beginnen:
\end_layout

\begin_layout Enumerate
Nun müssen Sie entscheiden, ob das Paket für alle Nutzer oder nur für Sie
 verfügbar sein soll.
\end_layout

\begin_deeper
\begin_layout Enumerate
Bei *nix Systemen (Linux, OSX, etc.), wenn Sie das Paket für alle Nutzer
 installieren möchten, installieren Sie es in den lokalen \SpecialChar TeX
 Ordner; anderenfalls
 installieren Sie es in den eigenen 
\begin_inset Quotes gld
\end_inset

Benutzer
\begin_inset Quotes grd
\end_inset

-\SpecialChar TeX
-Ordner.
 Wo man diese Ordner anlegt, sofern sie nicht schon existieren, hängt von
 Ihrem System ab.
 Dazu schauen Sie in die Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
texmf.cnf
\end_layout

\end_inset

.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Diese befindet sich normalerweise im Ordner 
\family sans
$TEXMF/web2c
\family default
.
 Falls nicht, führen Sie den Befehl 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
kpsewhich texmf.cnf
\end_layout

\end_inset

 aus, um sie zu lokalisieren.
\end_layout

\end_inset

 Der Ort des lokalen \SpecialChar TeX
-Ordners ist in der Variable 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TEXMFLOCAL
\end_layout

\end_inset

 definiert; es ist üblicherweise der Pfad 
\family sans
/usr/local/share/texmf/
\family default
 oder /usr/local/texlive/XXXX, wobei XXXX das Jahr der installierten \SpecialChar TeX
Live-Distri
bution ist.
 Der Ort des Benutzer-\SpecialChar TeX
-Ordners ist in der Variable 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TEXMFHOME
\end_layout

\end_inset

 definiert und ist üblicherweise der Pfad 
\family sans
$HOME/texmf/
\family default
 oder 
\family sans
$HOME/.texliveXXXX
\family default
.
 (Wenn diese Variablen nicht vordefiniert sind, müssen Sie diese selbst
 definieren.) Sie brauchen wahrscheinlich Root-Rechte um in den lokalen \SpecialChar TeX
-Ordner
 zu schreiben, beim Benutzer-\SpecialChar TeX
-Ordner ist die nicht nötig.
\begin_inset Newline newline
\end_inset

Allgemein empfiehlt es sich, Pakete in den Benutzer-\SpecialChar TeX
-Ordner zu installieren,
 da dieser nicht verändert oder gar überschrieben wird, wenn Sie ihr System
 aktualisieren.
 Des Weiteren wird er zusammen mit Ihren Nutzerdaten gesichert, wenn Sie
 ein Backup machen (was Sie natürlich regelmäßig tun).
\end_layout

\begin_layout Enumerate
Bei Windows, wenn Sie das Paket für alle Nutzer installieren möchten, gehen
 Sie in den Ordner, in dem \SpecialChar LaTeX
 installiert ist und wechseln dort in das Verzeichnis
 
\family sans
~tex
\backslash
latex
\family default
.
 (Verwendet man MiK\SpecialChar TeX
, wäre es standardmäßig der Ordner 
\family sans
~:
\backslash
Programme
\backslash
MiKTeX
\backslash
tex
\backslash
latex
\family default
 .) Legen Sie dort einen neuen Ordner mit dem Namen 
\begin_inset Quotes gld
\end_inset

foiltex
\begin_inset Quotes grd
\end_inset

 an und kopieren Sie alle Dateien das Pakets hinein.
 Wenn das Paket nur für den aktuellen Benutzer verfügbar sein soll bzw.
 Sie keine Administrator-Rechte haben, tun Sie dasselbe, aber im lokalen
 \SpecialChar LaTeX
-Ordner.
 Z.
\begin_inset space \thinspace{}
\end_inset

B.
 bei MiK\SpecialChar TeX

\begin_inset space ~
\end_inset

2.9 wäre das unter WinXP der Ordner
\begin_inset Newline newline
\end_inset


\family sans
~:
\backslash
Dokumente und Einstellungen
\backslash
<Benutzername>
\backslash
Anwendungsdaten
\backslash

\begin_inset Newline newline
\end_inset


\begin_inset Phantom HPhantom
status open

\begin_layout Plain Layout

\family sans
~:
\backslash

\end_layout

\end_inset

MiKTeX
\backslash
2.9
\backslash
tex
\backslash
latex
\family default

\begin_inset Newline newline
\end_inset

, unter WinVista wäre es der Ordner
\begin_inset Newline newline
\end_inset


\family sans
~:
\backslash
Users
\backslash
<Benutzername>
\backslash
AppData
\backslash
Roaming
\backslash
2.9
\backslash
MiKTeX
\backslash
tex
\backslash
latex
\family default
 .
\end_layout

\end_deeper
\begin_layout Enumerate
Jetzt muss man \SpecialChar LaTeX
 nur noch mitteilen, dass es neue Dateien gibt.
 Die ist je nach \SpecialChar LaTeX
-Distribution anders:
\end_layout

\begin_deeper
\begin_layout Enumerate
Bei \SpecialChar TeX
Live führen Sie von einer Kommandozeile den Befehl 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
texhash
\end_layout

\end_inset

 aus.
 Wenn Sie das Paket für alle Nutzer installiert haben, brauchen sie dazu
 wahrscheinlich Root-Rechte.
\end_layout

\begin_layout Enumerate
Bei MiK\SpecialChar TeX
, wenn Sie das Paket für alle Nutzer installiert haben, starten Sie
 das Programm 
\begin_inset Quotes gld
\end_inset

Settings
\begin_inset space ~
\end_inset

(Admin)
\begin_inset Quotes grd
\end_inset

 und drücken dann auf den Kopf 
\begin_inset Quotes gld
\end_inset

Refresh FNDB
\begin_inset Quotes grd
\end_inset

.
 Anderenfalls starten Sie das Programm 
\begin_inset Quotes gld
\end_inset

Settings
\begin_inset Quotes grd
\end_inset

 und machen dasselbe.
\end_layout

\end_deeper
\begin_layout Enumerate
Nun muss man \SpecialChar LyX
 noch mitteilen, dass es neue Pakete gibt.
 Verwenden Sie dazu in \SpecialChar LyX
 das Menü 
\family sans
Werkzeuge\SpecialChar menuseparator
Neu
\begin_inset space \space{}
\end_inset

konfigurieren
\family default
 und starten \SpecialChar LyX
 danach neu.
\end_layout

\begin_layout Standard
Nun ist das Paket installiert.
 In unserem Beispiel wird nun die Dokumentklasse 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Slides
\begin_inset space ~
\end_inset

(FoilTeX)
\end_layout

\end_inset

 im Menü 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen\SpecialChar menuseparator
Dokumentklasse
\family default
 verfügbar sein.
\end_layout

\begin_layout Standard
Möchten sie eine \SpecialChar LaTeX
-Dokumentklasse verwenden, die generell nicht im Menü 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen\SpecialChar menuseparator
Dokumentklasse
\family default
 gelistet ist, müssen Sie dafür selbst ein 
\begin_inset Quotes gld
\end_inset

Layout
\begin_inset Quotes grd
\end_inset

 erstellen.
 Dies ist das Thema des nächsten Abschnitts.
\end_layout

\begin_layout Section
Layout-Dateitypen
\end_layout

\begin_layout Standard

\lang english
This section describes the various sorts of \SpecialChar LyX
 files that contain layout informati
on.
 These files describe various paragraph and character styles, determining
 how \SpecialChar LyX
 should display them and how they should be translated into \SpecialChar LaTeX
, DocBook,
 XHTML, or whatever output format is being used.
 
\end_layout

\begin_layout Standard

\lang english
We shall try to provide a thorough description of the process of writing
 layout files here.
 However, there are so many different types of documents supported even
 by just \SpecialChar LaTeX
 that we can't hope to cover every different possibility or problem
 you might encounter.
 The \SpecialChar LyX
 users' list is frequented by people with lots of experience with layout
 design who are willing to share what they've learned, so please feel free
 to ask questions there.
\end_layout

\begin_layout Standard

\lang english
As you prepare to write a new layout, it is extremely helpful to look at
 the layouts distributed with \SpecialChar LyX
.
 If you write a \SpecialChar LyX
 layout for a \SpecialChar LaTeX
 document class that might also be used by
 others, or write a module that might be useful to others, then you should
 consider posting your layout to the 
\begin_inset CommandInset href
LatexCommand href
name "layout section on the LyX wiki"
target "http://wiki.lyx.org/Layouts/Layouts"

\end_inset

 or even to the \SpecialChar LyX
 developers' list, so that it might be included in \SpecialChar LyX
 itself.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
Note that \SpecialChar LyX
 is licensed under the General Public License, so any material
 that is contributed to \SpecialChar LyX
 must be similarly licensed.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Layout Module
\begin_inset CommandInset label
LatexCommand label
name "subsec:Layout-Module"

\end_inset


\end_layout

\begin_layout Standard

\lang english
We have spoken to this point about `layout files'.
 But there are different sorts of files that contain layout information.
 Layout files, strictly so called, have the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
.layout
\end_layout

\end_inset

 extension and provide \SpecialChar LyX
 with information about document classes.
 As of \SpecialChar LyX
 1.6, however, layout information can also be contained in layout
 
\emph on
modules
\emph default
, which have the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
.module
\end_layout

\end_inset

 extension.
 Modules are to \SpecialChar LaTeX
 packages much as layouts are to \SpecialChar LaTeX
 classes, and some modules—such
 as the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
endnotes
\end_layout

\end_inset

 module—specifically provide support for one package.
 In a sense, layout modules are similar to included
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
These can have any extension, but by convention have the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
.inc
\end_layout

\end_inset

 extension.
\end_layout

\end_inset

 files—files like 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
stdsections.inc
\end_layout

\end_inset

—in that modules are not specific to a given document class but may be used
 with many different classes.
 The difference is that using an included file with 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
article.cls
\end_layout

\end_inset

 requires editing that file.
 Modules, by contrast, are selected in the 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout

\lang english
Document\SpecialChar menuseparator
Settings
\end_layout

\end_inset

 dialog.
\end_layout

\begin_layout Standard

\lang english
Building modules is the easiest way to get started with layout editing,
 since it can be as simple as adding a single new paragraph style or flex
 inset.
 But modules may, in principle, contain anything a layout file can contain.
\end_layout

\begin_layout Standard

\lang english
After creating a new module and copying it to the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
layouts/
\end_layout

\end_inset

 folder, you will need to reconfigure and then restart \SpecialChar LyX
 for the module to
 appear in the menu.
 However, changes you make to the module will be seen immediately, if you
 open 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout

\lang english
Document\SpecialChar menuseparator
Settings
\end_layout

\end_inset

, highlight something, and then hit 
\begin_inset Quotes eld
\end_inset

OK
\begin_inset Quotes erd
\end_inset

.
 
\emph on
It is strongly recommended that you save your work before doing this
\emph default
.
 In fact, 
\emph on
it is strongly recommended that you not attempt to edit modules while simultaneo
usly working on actual documents
\emph default
.
 Though of course the developers strive to keep \SpecialChar LyX
 stable in such situations,
 syntax errors and the like in your module file could cause strange behavior.
\end_layout

\begin_layout Subsubsection
Lokales Format
\end_layout

\begin_layout Standard

\lang english
Modules are to \SpecialChar LyX
 as packages are to \SpecialChar LaTeX
.
 Sometimes, however, you find yourself wanting a specific inset or character
 style just for one document and writing a module that will also be available
 to other documents makes little sense.
 What you need is \SpecialChar LyX
's 
\begin_inset Quotes eld
\end_inset

Local Layout
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard

\lang english
You will find it under 
\family sans
Document\SpecialChar menuseparator
Settings\SpecialChar menuseparator
Local Layout
\family default
.
 The large text box allows you to enter anything that you might enter in
 a layout file or module.
 You can think of a document's local layout, in fact, as a module that belongs
 just to it.
 So, in particular, you must enter a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Format
\end_layout

\end_inset

 tag.
 Any format is acceptable, but one would normally use the format current
 at the time.
 (In \SpecialChar LyX
 2.2, the current layout format is 60.)
\end_layout

\begin_layout Standard

\lang english
When you have entered something in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Local Layout
\end_layout

\end_inset

 pane, \SpecialChar LyX
 will enable the 
\begin_inset Quotes eld
\end_inset

Validate
\begin_inset Quotes erd
\end_inset

 button at the bottom.
 Clicking this button will cause \SpecialChar LyX
 to determine whether what you have entered
 is valid layout information for the chosen format.
 \SpecialChar LyX
 will report the result but, unfortunately, will not tell you what errors
 there might have been.
 These will be written to the terminal, however, if \SpecialChar LyX
 is started from a terminal.
 You will not be permitted to save your local layout until you have entered
 something valid.
\end_layout

\begin_layout Standard

\lang english
The warnings at the end of the previous section apply here, too.
 Do not play with local layout while you are actually working, especially
 if you have not saved your document.
 That said, using local layout with a test document can be a very convenient
 way to try out layout ideas, or even to start developing a module.
\end_layout

\begin_layout Subsection
Layout für 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
.sty
\end_layout

\end_inset

-Dateien
\end_layout

\begin_layout Standard

\lang english
There are two situations you are likely to encounter when wanting to support
 a new \SpecialChar LaTeX
 document class, involving style (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
.sty
\end_layout

\end_inset

) files and \SpecialChar LaTeX2e
 class (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
.cls
\end_layout

\end_inset

) .
 Supporting a style file is usually fairly easy.
 Supporting a new class file is a bit harder.
 We'll discuss the former in this section and the latter in the next.
 Similar remarks apply, of course, if you want to support a new DocBook
 DTD.
\end_layout

\begin_layout Standard

\lang english
The easier case is the one in which your new document class is provided
 as a style file that is to be used in conjunction with an already supported
 document class.
 For the sake of the example, we'll assume that the style file is called
 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout

\lang english
myclass.sty
\end_layout

\end_inset

 and that it is meant to be used with 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout

\lang english
report.cls
\end_layout

\end_inset

, which is a standard class.
 
\end_layout

\begin_layout Standard

\lang english
Start by copying the existing class's layout file into your local directory:
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
Of course, which directory is your local directory will vary by platform,
 and \SpecialChar LyX
 allows you to specify your local directory on startup, too, using
 the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
-userdir
\end_layout

\end_inset

 option.
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
cp report.layout ~/.lyx/layouts/myclass.layout
\end_layout

\begin_layout Standard

\lang english
Then edit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
myclass.layout
\end_layout

\end_inset

 and change the line: 
\end_layout

\begin_layout LyX-Code

\backslash
DeclareLaTeXClass{report}
\end_layout

\begin_layout Standard

\lang english
to read
\end_layout

\begin_layout LyX-Code

\backslash
DeclareLaTeXClass[report, myclass.sty]{report (myclass)}
\end_layout

\begin_layout Standard

\lang english
Then add:
\end_layout

\begin_layout LyX-Code
Preamble 
\begin_inset Newline newline
\end_inset

    
\backslash
usepackage{myclass}
\begin_inset Newline newline
\end_inset

EndPreamble
\end_layout

\begin_layout Standard

\lang english
near the top of the file.
\end_layout

\begin_layout Standard

\lang english
Start \SpecialChar LyX
 and select 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout

\lang english
Tools\SpecialChar menuseparator
Reconfigure
\end_layout

\end_inset

.
 Then restart \SpecialChar LyX
 and try creating a new document.
 You should see "
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout

\lang english
report (myclass)
\end_layout

\end_inset

" as a document class option in the 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout

\lang english
Document\SpecialChar menuseparator
Settings
\end_layout

\end_inset

 dialog.
 It is likely that some of the sectioning commands and such in your new
 class will work differently from how they worked in the base class—
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
report
\end_layout

\end_inset

 in this example—so you can fiddle around with the settings for the different
 sections if you wish.
 The layout information for sections is contained in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
stdsections.inc
\end_layout

\end_inset

, but you do not need to copy and change this file.
 Instead, you can simply add your changes to your layout file, after the
 line 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Input stdclass.inc
\end_layout

\end_inset

, which itself includes 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
stdsections.inc
\end_layout

\end_inset

.
 For example, you might add these lines:
\end_layout

\begin_layout LyX-Code
Style Chapter
\end_layout

\begin_layout LyX-Code
    Font
\end_layout

\begin_layout LyX-Code
        Family Sans
\end_layout

\begin_layout LyX-Code
    EndFont
\end_layout

\begin_layout LyX-Code
End
\end_layout

\begin_layout Standard

\lang english
to change the font for chapter headings to sans-serif.
 This will override (or, in this case, add to) the existing declaration
 for the Chapter style.
 
\end_layout

\begin_layout Standard

\lang english
Your new package may also provide commands or environments not present in
 the base class.
 In this case, you will want to add these to the layout file.
 See 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Das-Layout-Dateiformat"

\end_inset

 for information on how to do so.
\end_layout

\begin_layout Standard

\lang english
If 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout

\lang english
myclass.sty
\end_layout

\end_inset

 can be used with several different document classes, and even if it cannot,
 you might find it easiest just to write a module that you can load with
 the base class.
 The simplest possible such module would be:
\end_layout

\begin_layout LyX-Code
#
\backslash
DeclareLyXModule{My Package} 
\end_layout

\begin_layout LyX-Code
#DescriptionBegin 
\end_layout

\begin_layout LyX-Code
#Support for mypkg.sty.
\end_layout

\begin_layout LyX-Code
#DescriptionEnd
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout LyX-Code
Format 60
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout LyX-Code
Preamble
\begin_inset Newline newline
\end_inset

    
\backslash
usepackage{mypkg}
\begin_inset Newline newline
\end_inset

EndPreamble
\end_layout

\begin_layout Standard

\lang english
A more complex module might modify the behavior of some existing constructs
 or define some new ones.
 Again, see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Das-Layout-Dateiformat"

\end_inset

 for discussion.
\end_layout

\begin_layout Subsection
Layout für 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
.cls
\end_layout

\end_inset

-Dateien
\end_layout

\begin_layout Standard

\lang english
There are two possibilities here.
 One is that the class file is itself based upon an existing document class.
 For example, many thesis classes are based upon 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout

\lang english
book.cls
\end_layout

\end_inset

.
 To see whether yours is, look for a line like
\end_layout

\begin_layout LyX-Code

\backslash
LoadClass{book}
\end_layout

\begin_layout Standard

\lang english
in the file.
 If so, then you may proceed largely as in the previous section, though
 the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Declare\SpecialChar LaTeX
Class
\end_layout

\end_inset

 line will be different.
 If your new class is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
thesis
\end_layout

\end_inset

 and it is based upon 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
book
\end_layout

\end_inset

, then the line should read:
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
And it will be easiest if you save the file to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
thesis.layout
\end_layout

\end_inset

: \SpecialChar LyX
 assumes that the document class has the same name as the layout file.
 
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code

\backslash
DeclareLaTeXClass[thesis,book]{thesis}
\end_layout

\begin_layout Standard

\lang english
If, on the other hand, the new class is not based upon an existing class,
 you will probably have to 
\begin_inset Quotes eld
\end_inset

roll your own
\begin_inset Quotes erd
\end_inset

 layout.
 We strongly suggest copying an existing layout file which uses a similar
 \SpecialChar LaTeX
 class and then modifying it, if you can do so.
 At least use an existing file as a starting point so you can find out what
 items you need to worry about.
 Again, the specifics are covered below.
\end_layout

\begin_layout Subsection
Vorlagen erstellen
\begin_inset CommandInset label
LatexCommand label
name "subsec:Vorlagen-erstellen"

\end_inset


\end_layout

\begin_layout Standard

\lang english
Once you have written a layout file for a new document class, you might
 want to consider writing a 
\emph on
template
\emph default
 for it, too.
 A template acts as a kind of tutorial for your layout, showing how it might
 be used, though containing dummy content.
 You can of course look at the various templates included with \SpecialChar LyX
 for ideas.
\end_layout

\begin_layout Standard

\lang english
Templates are created just like usual documents: using \SpecialChar LyX
.
 The only difference is that usual documents contain all possible settings,
 including the font scheme and the paper size.
 Usually a user doesn't want a template to overwrite his preferred settings
 for such parameters.
 For that reason, the designer of a template should remove the corresponding
 commands like 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english

\backslash
font_roman
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english

\backslash
papersize
\end_layout

\end_inset

 from the template \SpecialChar LyX
 file.
 This can be done with any simple text-editor, for example 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
vi
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
notepad
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard

\lang english
Put the edited template files you create in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
UserDir/templates/
\end_layout

\end_inset

, copy the ones you use from the global template directory in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LyXDir/templates/
\end_layout

\end_inset

 to the same place, and redefine the template path in the 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout

\lang english
Tools\SpecialChar menuseparator
Preferences\SpecialChar menuseparator
Paths
\end_layout

\end_inset

 dialog.
\end_layout

\begin_layout Standard

\lang english
Note, by the way, that there is a template which has a particular meaning:
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
defaults.lyx
\end_layout

\end_inset

.
 This template is loaded every time you create a new document with 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout

\lang english
File\SpecialChar menuseparator
New
\end_layout

\end_inset

 in order to provide useful defaults.
 To create this template from inside \SpecialChar LyX
, all you have to do is to open a document
 with the correct settings, and use the 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout

\lang english
Save as Document Defaults
\end_layout

\end_inset

 button.
\end_layout

\begin_layout Subsection
Alte Layout-Dateien auf den neuesten Stand bringen
\end_layout

\begin_layout Standard
Das Format der Layout-Dateien ändert sich mit jeder \SpecialChar LyX
-Version.
 Daher müssen die Layout-Dateien in das neue Format konvertiert werden.
 Wenn \SpecialChar LyX
 eine Layout-Datei eines älteren Formats liest, ruft es automatisch
 das Skript 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
layout2layout.py
\end_layout

\end_inset

 auf um es in eine temporäre Datei im aktuellen Format zu konvertieren.
 Die Originaldatei wird nicht verändert.
 Wenn Sie die Layout-Datei öfter verwenden, dann können Sie sie permanent
 in das neue Format konvertieren, so dass \SpecialChar LyX
 dies nicht jedes Mal tun muss.
 Um das zu tun, machen sie Folgendes:
\end_layout

\begin_layout Enumerate
Benennen Sie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeineKlasse.layout
\end_layout

\end_inset

 in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeineKlasse.alt
\end_layout

\end_inset

 um.
\end_layout

\begin_layout Enumerate
Rufen Sie den Befehl
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
python LyXDir/scripts/layout2layout.py myclass.old myclass.layout
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

auf.
 Wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyXDir
\end_layout

\end_inset

 der Name Ihres \SpecialChar LyX
-Systemverzeichnisses ist.
\end_layout

\begin_layout Standard
Beachten Sie, das manuelle Konvertierungen keine eingefügten Dateien mit
 konvertieren.
 Diese müssen separat konvertiert werden.
\end_layout

\begin_layout Section
Das Layout-Dateiformat
\begin_inset CommandInset label
LatexCommand label
name "sec:Das-Layout-Dateiformat"

\end_inset


\end_layout

\begin_layout Standard
Die folgenden Abschnitte beschreiben wie Layout-Dateien aufgebaut sind und
 erstellt werden.
 Wir empfehlen bei der Erstellung von Layouts langsam zu beginnen und sich
 Stück für Stück vorzuarbeiten.
 Es ist nicht wirklich schwer, jedoch sind die möglichen Optionen manchmal
 etwas erschlagend, besonders wenn man zu viele davon auf einmal ausprobiert.
 Am einfachsten ist es, wenn man bestehende Layout-Dateien von \SpecialChar LyX
 als Beispiel
 nimmt oder diese umgestaltet.
\end_layout

\begin_layout Standard
Beachten Sie dass alle Tags in Layout-Dateien nicht durch Groß- und Kleinschreib
ung zu unterscheiden sind.
 Das bedeutet dass 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Style
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
style
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
StYlE
\end_layout

\end_inset

 derselbe Tag sind.
 Die möglichen Argumente für die Tags sind hinter ihnen in eckigen Klammern
 angegeben.
 Das voreingestellte Argument ist 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
hervorgehoben
\end_layout

\end_inset

.
 Wenn das Argument einen Datentyp hat wie 
\begin_inset Quotes gld
\end_inset

string
\begin_inset Quotes grd
\end_inset

 oder 
\begin_inset Quotes gld
\end_inset

float
\begin_inset Quotes grd
\end_inset

, wird die Voreinstellung so angezeigt: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=
\emph on
default
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Deklaration einer neuen Textklasse und Klassifikation
\end_layout

\begin_layout Standard
Zeilen, die mit einem 
\family typewriter
#
\family default
 beginnen, sind Kommentare.
 Mit einer Ausnahme: alle Textklassen sollten mit Zeilen ähnlich wie den
 folgenden beginnen:
\end_layout

\begin_layout LyX-Code

\size small
#% Do not delete the line below; configure depends on this
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
zu Deutsch: Löschen Sie die folgenden Zeilen nicht, da die Konfiguration
 davon abhängt
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareLaTeXClass{Article (Standard Class)}
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareCategory{Articles}
\end_layout

\begin_layout Standard
Die zweite und dritte Zeile wird benötigt, wenn Sie \SpecialChar LyX
 konfigurieren.
 Die Textklassen-Datei wird von dem \SpecialChar LaTeX
-Skript 
\family sans
chkconfig.ltx
\family default
 gelesen, und zwar in einem speziellen Modus, in dem 
\family typewriter
#
\family default
-Zeichen ignoriert werden.
 Die erste Zeile ist einfach ein \SpecialChar LaTeX
-Kommentar, in der zweiten muss die Textklasse
 deklariert werden und die dritte Zeile enthält die optionale Klassifikation
 der Klasse.
 Eine Datei namens 
\family typewriter
article.layout
\family default
, die mit diesen beiden Zeilen beginnt, definiert eine Textklasse mit dem
 Namen 
\family sans
article
\family default
 (der Name der Layout-Datei) und benutzt die \SpecialChar LaTeX
-Dokumentenklasse 
\family typewriter
article.cls
\family default
 (Standard ist denselben Namen wie das Layout zu verwenden).
 Die Zeichenkette 
\begin_inset Quotes gld
\end_inset

Article (Standard Class)
\begin_inset Quotes grd
\end_inset

, die oben erscheint, ist auch die Beschreibung, die später im Popup-Menü
 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen
\family default
 auftaucht.
 Die Kategorie (
\begin_inset Quotes gld
\end_inset

Articles
\begin_inset Quotes grd
\end_inset

 im Beispiel) wird auch im Dialog 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen
\family default
 verwendet: Die Textklassen weden nach diesen Kategorien gruppiert (was
 üblicherweise Genres sind, typische Kategorien sind also 
\begin_inset Quotes gld
\end_inset

Artikel
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Quotes gld
\end_inset

Bücher
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Quotes gld
\end_inset

Berichte
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Quotes gld
\end_inset

Briefe
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Quotes gld
\end_inset

Präsentationen
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Quotes gld
\end_inset

Lebensläufe
\begin_inset Quotes grd
\end_inset

 usw.).
 Wenn keine Kategorie deklariert wurde, wird die Klasse in die Gruppe 
\begin_inset Quotes gld
\end_inset

Nicht
\begin_inset space ~
\end_inset

kategorisiert
\begin_inset Quotes grd
\end_inset

 getan.
\end_layout

\begin_layout Standard
Angenommen, Sie möchten Ihre eigene Textklasse schreiben, welche die \SpecialChar LaTeX
-Doku\SpecialChar softhyphen
men\SpecialChar softhyphen
ten
klasse 
\family typewriter
article
\family default
 benutzt, in der Sie aber das Aussehen der Kopfzeile verändert haben.
 Wenn Sie dann Ihre Textklasse in eine Datei namens 
\family typewriter
myarticle.
\begin_inset Newline linebreak
\end_inset

layout
\family default
 schreiben, sollten die ersten beiden Zeilen der Datei etwa so aussehen:
\end_layout

\begin_layout LyX-Code

\size small
#% Do not delete the line below; configure depends on this
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareLaTeXClass[article]{Article (with My Own Head
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"-
\end_layout

\end_inset

ings)}
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareCategory{Articles}
\end_layout

\begin_layout Standard
Auf diese Weise deklarieren Sie eine Textklasse 
\family typewriter
myarticle
\family default
, die die \SpecialChar LaTeX

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"=
\end_layout

\end_inset

Dokumentklasse 
\family typewriter
article.cls
\family default
 verwendet und (im Popup-Menü) beschrieben wird mit: 
\family sans
Article (with My Own Headings)
\family default
.
 Falls Ihre Textklasse auch noch von weiteren Paketen abhängt, können Sie
 das so angeben:
\end_layout

\begin_layout LyX-Code

\size small
#% Do not delete the line below; configure depends on this
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareLaTeXClass[article,foo.sty]{Article (with My Own Head
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"-
\end_layout

\end_inset

ings)}
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareCategory{Articles}
\end_layout

\begin_layout Standard
Dadurch wird angezeigt, dass Ihre Klasse auch das Paket 
\family typewriter
foo.sty
\family default
 verwendet.
 Schließlich können Sie auch Klassen für DocBook festlegen.
 Eine typische Deklaration sieht so aus:
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\size small
#% Do not delete the line below; configure depends on this
\end_layout

\begin_layout LyX-Code

\size small
# 
\backslash
DeclareDocBookClass[article]{SGML (DocBook Article)}
\end_layout

\begin_layout Standard
Diesen Deklarationen kann außerdem ein optionaler Parameter zugefügt werden,
 der den Namen der Dokumentenklasse festlegt (hier ist aber keine Liste
 erlaubt).
\end_layout

\begin_layout Standard
Eine Layout-Deklaration hat demnach die Form
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareLaTeXClass[class,package.sty]{Layout-Beschreibung}
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareCategory{Kategorie}
\end_layout

\begin_layout Standard
Wenn Sie eine Textklasse nach Ihrem Geschmack erstellt haben, müssen Sie
 die Datei nur noch in das Verzeichnis 
\family sans
LyX
\family typewriter
Dir/layouts/
\family default
 oder nach 
\family typewriter
UserDir/layouts
\family default
 kopieren und unter \SpecialChar LyX
 den Menüpunkt 
\family sans
Werkzeuge\SpecialChar menuseparator
Neu
\begin_inset space \space{}
\end_inset

konfigurieren
\family default
 auswählen.
 Nach dem Neustart von \SpecialChar LyX
 sollte Ihre Textklasse im Popup-Menü 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen
\family default
 auswählbar sein.
\end_layout

\begin_layout Subsection
Die Modul-Deklaration
\end_layout

\begin_layout Standard
Ein Modul muss mit einer Zeile wie die folgende beginnen:
\end_layout

\begin_layout LyX-Code
#
\backslash
Declare
\family sans
LyX
\family default
Module[endnotes.sty]{Endnotes} 
\end_layout

\begin_layout Standard
Das benötigte Argument in geschweiften Klammern ist der Name des Moduls,
 wie es in 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
Dokument\SpecialChar menuseparator
Einstellungen\SpecialChar menuseparator
Module
\end_layout

\end_inset

 erscheinen soll.
 Das Argument in eckigen Klammern ist optional: Es deklariert alle \SpecialChar LaTeX
-Pakete,
 die das Modul benötigt.
 Es ist außerdem möglich die Form 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
von->zu
\end_layout

\end_inset

 als optionales Argument zu verwenden, das angibt, dass das Modul nur verwendet
 werden kann, wenn es eine Konvertierungsmöglichkeit zwischen den Formaten
 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
von
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
zu
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 gibt.
\end_layout

\begin_layout Standard
Die Modul-Deklaration sollte gefolgt werden von Zeilen zur Beschreibung
 wie den folgenden:
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Vorzugsweise in Englisch wenn das Modul als Teil von \SpecialChar LyX
 veröffentlicht werden
 soll.
 Diese Beschreibung wird dann in \SpecialChar LyX
s Liste der zu übersetzenden Zeichenketten
 erscheinen und übersetzt werden.
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
#DescriptionBegin 
\end_layout

\begin_layout LyX-Code
#Adds an endnote command, in addition to footnotes.
 
\end_layout

\begin_layout LyX-Code
#You will need to add  
\backslash
theendnotes in \SpecialChar TeX
 code where you 
\end_layout

\begin_layout LyX-Code
#want the endnotes to appear.
 
\end_layout

\begin_layout LyX-Code
#DescriptionEnd 
\end_layout

\begin_layout LyX-Code
#Requires: somemodule | othermodule
\end_layout

\begin_layout LyX-Code
#Excludes: badmodule
\end_layout

\begin_layout Standard
Die Beschreibung wird in 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
Dokument\SpecialChar menuseparator
Einstellungen\SpecialChar menuseparator
Module
\end_layout

\end_inset

 verwendet um dem Nutzer zu beschreiben was das Modul macht.
 Die Zeile mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requires
\end_layout

\end_inset

 wird verwendet, um andere Module anzugeben, die dieses Modul verwenden
 muss; die Zeile mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Excludes
\end_layout

\end_inset

 wird verwendet, um Module anzugeben, die mit diesem Modul nicht verwendet
 werden dürfen.
 Beide Zeilen sind optional und, wie gezeigt, müssen mehrere Module mit
 einem 
\begin_inset Quotes gld
\end_inset

|
\begin_inset Quotes grd
\end_inset

 getrennt werden.
 Beachten Sie dass die benötigten Module disjunktiv behandelt werden: 
\emph on
mindestens eins
\emph default
 der benötigten Module muss verwendet werden.
 Dementsprechend darf 
\emph on
keines
\emph default
 der ausgeschlossenen Modul verwendet werden.
 Beachten Sie auch, dass Module durch ihren Dateinamen ohne die Dateiendung
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.module
\end_layout

\end_inset

 angegeben werden.
 Daher ist 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EinModul
\end_layout

\end_inset

 ist in Wirklichkeit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EinModul.module
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Dateiformat
\end_layout

\begin_layout Standard
Die erste Zeile, die kein Kommentar ist, muss die Dateiformatnummer enthalten:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Format
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int
\end_layout

\end_inset

] Die Nummer des Formats der Layout-Datei.
\end_layout

\begin_layout Standard
Dieser Tag wurde mit \SpecialChar LyX

\begin_inset space ~
\end_inset

1.4.0 eingeführt.
 Layout-Dateien älteren \SpecialChar LyX
-Versionen haben kein explizites Format und werden
 als 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Format
\begin_inset space ~
\end_inset

1
\end_layout

\end_inset

 behandelt.
 Das Format dieser \SpecialChar LyX
-Version ist 60.
 Aber jede \SpecialChar LyX
-Version kann ältere Versionen von Layout-Dateien lesen, so wie
 es ältere \SpecialChar LyX
-Dateien lesen kann.
 Es gibt jedoch keine Unterstützung in ältere Formate zu konvertieren.
\end_layout

\begin_layout Subsection
Allgemeine Parameter für Textklassen
\begin_inset CommandInset label
LatexCommand label
name "subsec:Allgemeine-Parameter-für"

\end_inset


\end_layout

\begin_layout Standard
Nachfolgend allgemeine Parameter, die die Form der gesamten Dokumentklasse
 beschrei\SpecialChar softhyphen
ben.
 (Dies bedeutet 
\emph on
nicht
\emph default
 dass sie nur in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.layout
\end_layout

\end_inset

-Dateien und nicht in Modulen erscheinen müssen.
 Ein Modul kann jeden Layout-Tag enthalten.)
\end_layout

\begin_layout Description

\family typewriter
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToHTMLPreamble
\end_layout

\end_inset

 
\family default
fügt Informationen hinzu, die im 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<head>
\end_layout

\end_inset

-Block ausgegeben werden, wenn das Dokument als XHTML ausgegeben wird.
 Typischerweise wird dies verwendet werden, um CSS-Stilinformationen auszugeben,
 aber es kann auch für alles Andere verwendet werden, dass in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<head>
\end_layout

\end_inset

 zulässig ist.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndPreamble
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToPreamble
\end_layout

\end_inset

 fügt Informationen zum \SpecialChar LaTeX
-Vorspann hinzu.
 Muss mit
\begin_inset Newline newline
\end_inset


\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndPreamble
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\end_layout

\begin_layout Description

\family typewriter
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CiteFormat
\end_layout

\end_inset

 
\family default
Definiert Formate die in der Anzeige von Bibliographie-Informationen verwendet
 werden.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Citation-format-description"

\end_inset

 für Details.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ClassOptions
\end_layout

\end_inset

 Dieser Abschnitt beschreibt verschiedene globale Optionen, die von der
 Dokumentenklasse unterstützt werden.
 Eine detaillierte Beschreibung finden Sie in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Der-Abschnitt-ClassOptions"

\end_inset

.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Columns
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

] Gibt an, ob die Textklasse standardmäßig ein- oder zweispaltig gesetzt
 wird.
 Kann im Menü 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
Dokument\SpecialChar menuseparator
Einstellungen
\end_layout

\end_inset

 geändert werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Counter
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] definiert die Eigenschaften für einen Zähler.
 Wenn der Zähler noch nicht existiert, wird er erstellt; wenn er bereits
 existiert, wird er modifiziert.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\begin_inset Newline newline
\end_inset

Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Zähler"

\end_inset

 für Details zu Zählern.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultFont
\end_layout

\end_inset

 Definiert den Standardzeichensatz für die Anzeige des Dokuments.
 Eine genauere Beschreibung finden Sie in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndFont
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultModule
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Modul>
\end_layout

\end_inset

] spezifiziert ein Modul, das standardmäßig zu dieser Dokumentklasse hinzugefügt
 wird.
 <Modul> ist der Dateiname ohne die Dateiendung 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.module
\end_layout

\end_inset

.
 Der Nutzer kann das Modul zwar immer noch entfernen, aber es bleibt von
 Beginn an aktiv.
 (Dies gilt nur für neue Dateien oder wenn diese Klasse für ein existierendes
 Dokument gewählt wird.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Stil>
\end_layout

\end_inset

] Dies ist das Layout bzw.
\begin_inset space \space{}
\end_inset

der Stil, der für neu angelegte Absätze verwendet wird.
 Normalerweise ist das 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
Standard
\end_layout

\end_inset

.
 Fehlt dieser Eintrag, wird das erste definierte Layout verwendet; dennoch
 ist es ratsam 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultStyle
\end_layout

\end_inset

 anzugeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ExcludesModule
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Modul>
\end_layout

\end_inset

] zeigt an, dass das genannte Modul (das durch den Dateinamen ohne die Endung
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.module
\end_layout

\end_inset

 angegeben wird) in dieser Dokumentklasse nicht benutzt werden kann.
 Dies könnte in einem Journal-spezifischen Layout benutzt werden, um zum
 Beispiel die Verwendung des Moduls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
theorems-sec
\end_layout

\end_inset

 zu verhindern, das Theoreme abschnittsweise nummeriert.
 Diese Marke darf 
\emph on
nicht
\emph default
 in einem Modul benutzt werden.
 Module haben ihre eigene Methode andere Module auszuschließen (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Layout-Module"

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Float
\end_layout

\end_inset

 definiert ein neues Gleitobjekt.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Gleitobjekte"

\end_inset

 für Details.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLPreamble
\end_layout

\end_inset

 Informationen, die im 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<head>
\end_layout

\end_inset

-Block ausgegeben werden, wenn das Dokument als XHTML ausgegeben wird.
 Beachten Sie, dass dies jede vorhergehende 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLPreamble
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToHTMLPreamble
\end_layout

\end_inset

-Deklaration überschreibt.
 (Verwenden Sie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToHTMLPreamble
\end_layout

\end_inset

 wenn Sie Material zum Vorspann hinzufügen wollen.) Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndPreamble
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLTOCSection
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Stil>
\end_layout

\end_inset

] Das Layout bzw.
\begin_inset space \space{}
\end_inset

der Stil, der für das Inhaltsverzeichnis, das Literaturverzeichnis etc.
\begin_inset space \space{}
\end_inset

verwendet werden soll, wenn das Dokument als HTML exportiert wird.
 Für Artikel sollte dies normalerweise 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Section
\end_layout

\end_inset

 sein und für Bücher 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Chapter
\end_layout

\end_inset

.
 Wenn es nicht angegeben wird, wird \SpecialChar LyX
 versuchen herauszufinden, welches Layout
 zu benutzen ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
IfCounter
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Zähler>
\end_layout

\end_inset

] Ändert die Eigenschaften des angegebenen Zählers.
 Wenn dieser nicht existiert, wird die Anweisung ignoriert.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\begin_inset Newline newline
\end_inset

Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Zähler"

\end_inset

 für Details zu Zählern.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Input
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Dateiname>
\end_layout

\end_inset

] Hiermit können Sie andere Dateien einbinden, die Definitionen für Textklassen
 enthalten.
 Damit können Sie unnötige Mehrfachdefinitionen vermeiden.
 Beispiele sind die Standard-Layout-Dateien, z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdclass.inc
\end_layout

\end_inset

, die ein Großteil der Standardlayouts enthalten.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

] Dieser Abschnitt definiert das Layout einer Einfügung (neu).
 Es kann auf eine vorhandene Einfügung angewendet werden oder eine neue,
 benutzerdefinierte, zum Beispiel einen neuen Zeichenstil.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\begin_inset Newline newline
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Flexible-Einfügungen-und"

\end_inset

 enthält weitere Einzelheiten.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftMargin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] ist ein String dessen Länge die Breite des linken Randes festlegt, zum
 Beispiel 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MMMMM
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ModifyStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Stil>
\end_layout

\end_inset

] Ändert die Eigenschaften des angegebenen Paragraphstils.
 Wenn dieser nicht existiert, wird die Anweisung ignoriert.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NoCounter
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Zähler>
\end_layout

\end_inset

] Löscht einen existierenden Zähler; üblicherweise einen, der in einer eingefügt
en Datei definiert wurde.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NoFloat
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Gleitobjekt>
\end_layout

\end_inset

] Löscht ein vorhandenes Gleitobjekt.
 Dies ist dann nützlich, wenn Sie ein Gleitobjekt, das in einer eingefügten
 Datei definiert wurde, nicht verwenden wollen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NoStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Stil>
\end_layout

\end_inset

] Löscht ein existierendes Layout bzw.
\begin_inset space \space{}
\end_inset

Stil.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
OutputFormat
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Format>
\end_layout

\end_inset

] Das Dateiformat (wie es in den \SpecialChar LyX
-Voreinstellungen definiert ist) das von
 dieser Dokumentklasse erzeugt wird.
 Es ist hauptsächlich nützlich wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
OutputType
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
literate
\end_layout

\end_inset

 gesetzt ist und man einen neuen Typ eines 
\begin_inset Quotes gld
\end_inset

literate
\begin_inset Quotes grd
\end_inset

-Dokuments definieren will.
 Das Format wird auf 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
docbook
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 oder 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
latex
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 zurückgesetzt wenn der entsprechende 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
OutputType
\end_layout

\end_inset

-Parameter gefunden wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
OutputType
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
lat
\emph default
ex
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
docbook
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
literate
\end_layout

\end_inset

] Gibt an welche Dokumentart diese Klasse erzeugt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PackageOptions
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Der zweite String gibt Optionen für das Paket im ersten String an.
 Zum Beispiel lädt 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PackageOptions natbib square
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
natbib
\end_layout

\end_inset

 mit der Option 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
square
\end_layout

\end_inset

.
 (Für \SpecialChar TeX
perten: Dies bewirkt, dass \SpecialChar LyX
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
PassOptionsToPackage{natbib}{square}
\end_layout

\end_inset

 vor dem Laden von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
natbib
\end_layout

\end_inset

 ausgibt.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PageStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
plain
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
empty
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
headings
\end_layout

\end_inset

] Der Standard-Seitenstil.
 Kann im Menü 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
Dokument\SpecialChar menuseparator
Einstellungen
\end_layout

\end_inset

 geändert werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Preamble
\end_layout

\end_inset

 Definiert den Vorspann für das \SpecialChar LaTeX
-Dokument.
 Beachten Sie, dass dies jede vorhergehende 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Preamble
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToPreamble
\end_layout

\end_inset

-Deklaration überschreibt.
 (Verwenden Sie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToPreamble
\end_layout

\end_inset

 wenn Sie Material zum Vorspann hinzufügen wollen.) Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndPreamble
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Provides
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] zeigt an, ob die Klasse bereits die Funktion 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 liefert.
 Eine Funktion ist im Allgemeinen der Name eines Paketes (z.
\begin_inset space \thinspace{}
\end_inset

B.
\begin_inset space \space{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
amsmath
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
makeidx
\end_layout

\end_inset

) oder ein Makro (z.
\begin_inset space \thinspace{}
\end_inset

B.
\begin_inset space \space{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
url
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
boldsymbol
\end_layout

\end_inset

).
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Liste-von-Funktionen"

\end_inset

 für eine Liste der Funktionen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ProvidesModule
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] zeigt an, dass dieses Layout die Funktionalität des Moduls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 anbietet, das als Dateiname ohne die Erweiterung 
\family typewriter
.module
\family default
 angegeben wird.
 Dies wird typischerweise benutzt, wenn das Layout das Modul direkt benutzt
 statt den Tag 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultModule
\end_layout

\end_inset

 zu benutzen.
 Es könnte auch in einem Modul benutzt werden, das eine andere Implementation
 derselben Funktion liefert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ProvideStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Stil>
\end_layout

\end_inset

] Erstellt einen neuen Paragraphstil, falls er noch nicht existiert.
 Existiert er bereits, wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ProvideStyle
\end_layout

\end_inset

 ignoriert.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requires
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

]
\family typewriter
 
\family default
zeigt an, ob die Klasse die Funktion 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 benötigt.
 Mehrfache Funktionen müssen durch Komma getrennt werden Beachten Sie, dass
 Sie nur unterstützte Funktionen anfordern können.
 (Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Liste-von-Funktionen"

\end_inset

 für eine Liste der Funktionen.) Wenn Sie ein Paket mit bestimmten Optionen
 anfordern müssen, können Sie zusätzlich 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PackageOptions
\end_layout

\end_inset

verwenden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RightMargin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] ist ein String dessen Länge die Breite des rechten Randes festlegt, zum
 Beispiel 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MMMMM
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
SecNumDepth
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int=3
\end_layout

\end_inset

] legt die Nummerierungstiefe fest; korrespondiert mit dem \SpecialChar LaTeX
-Zähler 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
secnumdepth
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Sides
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

] Gibt an, ob der Text standardmäßig für ein- oder für zweiseitigen Druck
 gesetzt wird.
 Kann im Dialog 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
Dokument\SpecialChar menuseparator
Einstellungen
\end_layout

\end_inset

 geändert werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Style
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] definiert einen neuen Absatzstil.
 Wenn er bereits existiert, werden stattdessen einige seiner Parameter neu
 definiert.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\begin_inset Newline newline
\end_inset

Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

 für mehr über Absatzstile.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexName
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string="maketitle"
\end_layout

\end_inset

] ist der Name des Befehls oder der Umgebung, der für 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexType
\end_layout

\end_inset

 benutzt werden soll.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexType
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
CommandAfter
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

] gibt an, wie der Dokumenttitel aussehen soll.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CommandAfter
\end_layout

\end_inset

 bedeutet, dass das Makro namens 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexName
\end_layout

\end_inset

 nach dem letzten Layout mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InTitle
\begin_inset space ~
\end_inset

1
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 gesetzt werden soll.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 ist für den Fall, dass alle Layouts mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InTitle
\begin_inset space ~
\end_inset

1
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 in die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexName
\end_layout

\end_inset

-Umgebung gesetzt werden sollen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TocDepth
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int=3
\end_layout

\end_inset

] legt fest, bis zu welcher Tiefe das Inhaltsverzeichnis gehen soll; korrespondi
ert mit dem \SpecialChar LaTeX
-Zähler 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
tocdepth
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Der Abschnitt 
\family typewriter
ClassOptions
\family default

\begin_inset CommandInset label
LatexCommand label
name "subsec:Der-Abschnitt-ClassOptions"

\end_inset


\end_layout

\begin_layout Standard
Der Abschnitt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ClassOptions
\end_layout

\end_inset

 kann folgende Einträge enthalten:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FontSize
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string="10|11|12"
\end_layout

\end_inset

] Eine Liste verfügbarer Größen für den Hauptzeichensatz; die Einträge werden
 mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
|
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 getrennt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Header
\end_layout

\end_inset

 wird benutzt, um die DTD-Zeile mit XML-basierten Klassen zu setzen.
 Zum Beispiel PUBLIC 
\begin_inset Quotes gld
\end_inset

-//OASIS//DTD DocBook V4.2//EN
\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Other
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Sonstige Optionen für die Dokumentenklasse, die durch Komma getrennt werden.
 Sie werden in dem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
documentclass
\end_layout

\end_inset


\family typewriter
-
\family default
Befehl als optionales Argument übergeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PageStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string="empty|plain|headings|fancy"
\end_layout

\end_inset

] Eine Liste verfügbarer Seitenstile; die Einträge werden mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
|
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 getrennt.
\end_layout

\begin_layout Standard
Der Abschnitt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ClassOptions
\end_layout

\end_inset

 muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\end_layout

\begin_layout Subsection
Einzelne Absatz-Layouts
\begin_inset CommandInset label
LatexCommand label
name "subsec:Einzelne-Absatz-Layouts"

\end_inset


\end_layout

\begin_layout Standard
Eine Layoutbeschreibung für einen Absatz sieht wie folgt aus
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Sie können mit diesem Ausdruck entweder ein neues Layout definieren oder
 aber ein bereits definiertes umdefinieren.
 
\end_layout

\end_inset

:
\end_layout

\begin_layout LyX-Code
Style 
\family roman
\emph on
Name
\end_layout

\begin_layout LyX-Code
 ...
\end_layout

\begin_layout LyX-Code
End
\end_layout

\begin_layout Standard
Innerhalb des Blocks sind folgende Befehle erlaubt:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Align
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
block
\emph default
, left, right, center
\end_layout

\end_inset

] Gibt an, ob der Text im Blocksatz linksbündig, rechtsbündig oder zentriert
 gesetzt wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AlignPossible
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
block
\emph default
, left, right, center
\end_layout

\end_inset

] Eine Liste von möglichen Textausrichtungen, die durch Kommata voneinander
 getrennt werden.
 (Einige \SpecialChar LaTeX
-Stile verbieten bestimmte Ausrichtungen, weil sie keinen Sinn
 machen.
 Beispielsweise sollte in einer nummerierten Aufzählung der Text nicht rechtsbün
dig oder zentriert gesetzt werden.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int
\end_layout

\end_inset

] Definiert Argument Nummer <int> eines Befehls\SpecialChar breakableslash
einer Umgebung, der/die im
 aktuellen Stil definiert ist.
 Dies ist nützlich für Dinge wie Abschnittsüberschriften.
 Jedes Argument (optional oder erforderlich) eines Befehls oder einer Umgebung
 hat eine eigene Definition (ausgenommen das erforderliche Haupt-Argument
 des Absatzes).
 Die Nummer gibt die Reihenfolge des Arguments an.
 Die Definition muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndArgument
\end_layout

\end_inset

 enden.
 Ein Befehl mit 2
\begin_inset space ~
\end_inset

optionalen Argumenten hat somit diese Struktur:
\end_layout

\begin_deeper
\begin_layout Quote

\family typewriter
Argument 1
\end_layout

\begin_layout Quote

\family typewriter
...
\end_layout

\begin_layout Quote

\family typewriter
EndArgument
\end_layout

\begin_layout Quote

\family typewriter
Argument 2
\end_layout

\begin_layout Quote

\family typewriter
...
\end_layout

\begin_layout Quote

\family typewriter
EndArgument
\end_layout

\begin_layout Standard
Innerhalb einer 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

-Definition sind die folgenden Spezifikationen möglich:
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[string]
\end_layout

\end_inset

 
\lang english
The string that will appear both in the menu (to insert this argument) and
 on the argument inset button (unless you also specify a separate 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
MenuString
\end_layout

\end_inset

).
 For the menu, you can define an accelerator by appending the respective
 character to the string, divided by
\lang ngerman
 
\begin_inset Quotes gld
\end_inset

|
\begin_inset Quotes grd
\end_inset

 (z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Short Title|S
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

).
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MenuString
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[string]
\end_layout

\end_inset

 
\lang english
A separate string for the menu.
 You can define an accelerator by appending the respective character to
 the string, divided by
\lang ngerman
 
\begin_inset Quotes gld
\end_inset

|
\begin_inset Quotes grd
\end_inset

 (z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Short Title|S
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

).
 
\lang english
This specification is optional.
 If it is not given the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LabelString
\end_layout

\end_inset

 will be used instead for the menu.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Tooltip
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[string]
\end_layout

\end_inset

 
\lang english
A longer explanatory text that appears in the tooltip when hovering over
 the argument inset.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Mandatory
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] 
\lang english
Declare if this is a mandatory (1) or an optional (0) argument.
 Mandatory arguments will be output empty if not given, while optional arguments
 will not be output at all.
 By default, mandatory arguments are delimited by 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
{...}
\end_layout

\end_inset

, while optional arguments are delimited by
\lang ngerman
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[...]
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requires
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[int=0]
\end_layout

\end_inset

 
\lang english
Defines another argument (by its number) which this argument requires to
 be output if it is itself output.
 E.
\begin_inset space \thinspace{}
\end_inset

g., in \SpecialChar LaTeX
 commands, optional arguments often require previous optional arguments
 to be output (at least empty), as in
\lang ngerman
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
command[][Argument]{Text}
\end_layout

\end_inset

.
 
\lang english
This can be achieved by the statement
\lang ngerman
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requires 1
\end_layout

\end_inset

 innerhalb von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument 2
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftDelim
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[string]
\end_layout

\end_inset

 Definiert ein eigenes linkes Begrenzungszeichen (satt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[
\end_layout

\end_inset

).
 Ein Zeilenumbruch in der Ausgabe wird mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<br/>
\end_layout

\end_inset

 angegeben.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RightDelim
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[string]
\end_layout

\end_inset

 Definiert ein eigenes rechtes Begrenzungszeichen (statt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
]
\end_layout

\end_inset

).
 Ein Zeilenumbruch in der Ausgabe wird mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<br/>
\end_layout

\end_inset

 angegeben.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultArg
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[string]
\end_layout

\end_inset

 Definiert ein Argument, das nur eingefügt wird, wenn der Nutzer kein Argument
 eingefügt hat.
 Das heißt, wenn keine Argument-Einfügung eingefügt wurde oder sie eingefügt
 wurde aber leer ist.
 Mehrere Argumente werden durch Kommas getrennt.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PresetArg
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[string]
\end_layout

\end_inset

 Definiert ein Argument, das in jedem Fall eingefügt wird (allein oder zusätzlic
h zu benutzerdefinierten Argumenten).
 Mehrere Argumente werden durch Kommas getrennt.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 Die Schrift, die für den Argumentinhalt verwendet wird; siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 Die Schrift, die für die Marke verwendet wird; siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Decoration
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
Classic
\emph default
, Minimalistic, Conglomerate
\end_layout

\end_inset

] legt den Anzeigestil für den Rahmen und Knopf der Einfügung fest.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AutoInsert
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[int=0]
\end_layout

\end_inset

 
\lang english
If this is set to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
1
\end_layout

\end_inset

, this argument is automatically inserted when the respective style is selected.
 Currently, only one argument per style\SpecialChar breakableslash
layout can be automatically inserted.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsertCotext
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[int=0]
\end_layout

\end_inset

 
\lang english
If this is set to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
1
\end_layout

\end_inset

, this argument will be inserted with a copy of the co-text (either selected
 text or the whole paragraph) as content.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThruChars
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string of characters
\end_layout

\end_inset

]
\family typewriter
 
\family default
\lang english
Defines individual characters that should be output in raw form, meaning
 without special translations that \SpecialChar LaTeX
 would require.
 Note that, contrary to PassThru, this needs to be explicitly defined for
 arguments.
 That is, arguments do not inherit PassThruChars from their parent inset
 or layout.
\end_layout

\begin_layout Standard

\lang english
By default, the text entered in the \SpecialChar LyX
 workarea in the respective layout is
 the last (mandatory) argument of a command if the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LatexType
\end_layout

\end_inset

 is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Command
\end_layout

\end_inset

.
 However, arguments with the prefix 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
post:
\end_layout

\end_inset

 are output after this workarea argument.
 Note that post-argument numbering restarts at 1, so the first argument
 following the workarea argument is 
\lang ngerman

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
post:1
\end_layout

\end_inset

.
 Post-Argumente werden in allen anderen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 außer 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Command
\end_layout

\end_inset

 ignoriert.
\end_layout

\begin_layout Standard
Argumente für Listen-
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
item
\end_layout

\end_inset

s (wie in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
item[foo]
\end_layout

\end_inset

) haben den Präfix 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
item:
\end_layout

\end_inset

 gefolgt von der Nummer (z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument item:1
\end_layout

\end_inset

)
\end_layout

\end_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BabelPreamble
\end_layout

\end_inset

 Beachten Sie, dass dies alle vorhergehenden 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BabelPreamble
\end_layout

\end_inset

-Dekla\SpecialChar softhyphen
ration für diesen Stil überschreibt.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndBabelPreamble
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:I18n"

\end_inset

 für Details zur Verwendung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BottomSep
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=0
\end_layout

\end_inset

]
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Quotes gld
\end_inset

float
\begin_inset Quotes grd
\end_inset

 ist eine Gleitkommazahl, wie 
\begin_inset Quotes gld
\end_inset

1,5
\begin_inset Quotes grd
\end_inset

.
\end_layout

\end_inset

 Der vertikale Abstand, der die letzte Serie von Absätzen vom folgenden
 Text trennt.
 Wenn der nächste Paragraph einen anderen Stil hat, werden die Abstände
 nicht einfach addiert, sondern das Maximum wird verwendet.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Category
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] ist die Kategorie für diesen Stil.
 Sie wird benutzt, um zugehörige Stile in der Layout-Kombobox der Werkzeugleiste
 zu gruppieren.
 Jeder beliebige String kann benutzt werden, aber es ist sinnvoll vorhandene
 Ka\SpecialChar softhyphen
te\SpecialChar softhyphen
gorien zusammen mit Ihren eigenen Stilen zu benutzen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CommandDepth
\end_layout

\end_inset

 ist die Tiefe des XML-Befehls und wird nur für XML-Formate benutzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CopyStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Kopiert alle Eigenschaften eines bereits definierten Layouts in das aktuelle.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DependsOn
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] ist der Name eines Stils, dessen Vorspann 
\emph on
vor
\emph default
 diesem ausgegeben werden soll.
 Dadurch wird eine Reihenfolge von Vorspannteilen bewirkt, wenn Makro-Definition
en voneinander abhängen.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Beachten Sie, dass es außer dieser Funktionalität keine andere Möglichkeit
 gibt, Vorspanne zu ordnen.
 Die Reihenfolge, die Sie in einer \SpecialChar LyX
-Version sehen, kann sich in späteren
 Versionen ohne Warnung ändern.
\end_layout

\end_inset


\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndLabeltype
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
No_Label
\emph default
, Box, Filled_Box, Static
\end_layout

\end_inset

]
\family typewriter
 
\family default
ist der Markentyp, der am Ende eines Absatzes steht (oder mehrerer Absätze,
 wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 auf
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Item_Environment
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
List_Environment
\end_layout

\end_inset

 gesetzt ist).
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
No_Label
\end_layout

\end_inset

 bedeutet 
\begin_inset Quotes gld
\end_inset

nichts
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Box
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Filled_Box
\end_layout

\end_inset

 ist ein weißes oder schwarzes Quadrat, das für das Markieren eines Beweisendes
 geeignet ist.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

 ist eine explizite Zeichenkette.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndLabelString
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] ist eine Zeichenkette, die für einen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndLabelType
\end_layout

\end_inset

 benutzt wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 Der Zeichensatz, der für den Textkörper 
\emph on
und
\emph default
 die Marke verwendet wird, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

.
 Wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 gesetzt, dann erhält 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 automatisch denselben Wert.
 Daher sollte 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 zuerst definiert werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceLocal
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int=0
\end_layout

\end_inset

] Wird benutzt um neue Stile für stabile \SpecialChar LyX
-Versionen zu konvertieren.
 Die erste stabile Version, die das unterstützt ist \SpecialChar LyX
 2.1.0.
 Das Argument ist eine Nummer, die entweder 0, -1 oder irgend eine Zahl
 größer Null sein kann.
 Wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceLocal
\end_layout

\end_inset

 eines Stils größer als Null ist, wird er immer in den Dokumentkopf geschrieben.
 Wenn eine .lyx-Datei gelesen wird, werden die Stil-Definitionen aus dem
 Dokumentkopf zur Dokumentklasse hinzugefügt.
 Dadurch können sogar ältere \SpecialChar LyX
-Versionen den Stil handhaben.
 Das Argument von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceLocal
\end_layout

\end_inset

 ist eine Versionsnummer: Wenn der Stil gelesen wird, und die Versionsnummer
 ist kleiner als die Versionsnummer des bereits existierenden Stils der
 Dokumentklasse, wird der neue Stil ignoriert.
 Wenn die Versionsnummer größer ist, ersetzt der neue Stil den bestehenden.
 Der Wert -1 steht für eine unendliche Versionsnummer, das heißt der Stil
 wird immer benutzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FreeSpacing
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Normalerweise erlaubt es \SpecialChar LyX
 nicht, mehr als ein Leerzeichen zwischen Wörtern
 einzufügen.
 Diese Eigenschaft kann in bestimmten Fällen umständ\SpecialChar softhyphen
lich sein, zum Beispiel,
 wenn ein Programmcode eingegeben werden soll.
 In solchen Fällen kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FreeSpacing
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt werden.
 \SpecialChar LyX
 erzeugt in diesem Falls sich \SpecialChar LyX
 nicht im \SpecialChar LaTeX
-Modus befindet, erzeugt es für
 jedes zusätzliche Leerzeichen ein geschütztes Leerzeichen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTML*
\end_layout

\end_inset

 Diese Tags kontrollieren die XHTML-Ausgabe.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tags-for-XHTML"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InnerTag
\end_layout

\end_inset

 [FIXME] (Wird nur für XML-Formate benutzt.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InPreamble
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

]Wenn auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

gesetzt, wird der Stil in den \SpecialChar LaTeX
-Vorspann gesetzt und nicht in den eigentlichen
 Dokumenttext.
 Dies ist nützlich für Dokumentklassen, die Informationen wie den Titel
 und Autor im Vorspann erwarten.
 Beachten Sie, dass dies nur für Stile funktioniert, deren 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Command
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Paragraph
\end_layout

\end_inset

ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InTitle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wenn auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

gesetzt, wird der Stil als Teil des Titel-Abschnitts behandelt (siehe auch
 die allgemeinen Textklassen-Parameter 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexType
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexName
\end_layout

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ItemCommand
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string="item"
\end_layout

\end_inset

] Der \SpecialChar LaTeX
-Befehl, der ein Item in einer Liste definiert.
 Dieser Befehl muss ohne den Backslash am Anfang angegeben werden (die Voreinste
llung ist ''item'', was in der \SpecialChar LaTeX
-Ausgabe 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
item
\end_layout

\end_inset

 zur Folge hat).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ItemSep
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=0
\end_layout

\end_inset

] Ein zusätzlicher Abstand zwischen Absätzen desselben Layouts.
 Wenn in einer Umgebung andere Layouts integriert werden, so werden diese
 mit dem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParSep
\end_layout

\end_inset

 der Umgebung getrennt.
 Die kompletten Unterpunkte der Umgebung werden jedoch 
\emph on
zusätzlich
\emph default
 mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ItemSep
\end_layout

\end_inset

 getrennt.
 Man beachte, dass 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ItemSep
\end_layout

\end_inset

ein 
\emph on
Multiplikator
\emph default
 ist
\emph on
.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ItemTag
\end_layout

\end_inset

 [FIXME] (Wird nur für XML-Formate benutzt.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
KeepEmpty
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Normalerweise ist es in \SpecialChar LyX
 nicht möglich, einen Absatz leer zu lassen, da
 das zu einer leeren \SpecialChar LaTeX
-Ausgabe führen würde.
 In manchen Fällen ist das aber durchaus gewünscht: So können beispielsweise
 in einer Briefvorlage die benötigten Felder leer voreingestellt werden,
 damit keiner vergisst, sie anzugeben; in speziellen Klassen wird ein Absatz
 als Unterbrechung verwendet, der keinen Text enthält.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelBottomsep
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=0
\end_layout

\end_inset

] Der vertikale Abstand zwischen der Marke und dem folgenden Text.
 Wird nur für Marken benutzt, die über dem folgenden Text stehen (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Top_Environment
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Centered_Top_Environment
\end_layout

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelCounter
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] ist der Name des Zählers zur automatischen Nummerierung.
 Um den Zähler einer Marke zuzuordnen, muss er im 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 referenziert werden.
 Dies funktioniert zumindest mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelType
\end_layout

\end_inset

en, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Above
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Centered
\end_layout

\end_inset

.
\begin_inset Newline newline
\end_inset

Er 
\emph on
kann
\emph default
 angegeben werden, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Enumerate
\end_layout

\end_inset

 ist.
 In diesem Fall ist es etwas kompliziert: Angenommen Sie haben 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelCounter MeinZaehler
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 angegeben, dann lauten die eigentlichen Zähler 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeinZaehleri
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeinZaehlerii
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeinZaehleriii
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeinZaehleriv
\end_layout

\end_inset

; so wie in \SpecialChar LaTeX
.
 Diese Zähler müssen alle separat deklariert werden.
\begin_inset Newline newline
\end_inset

Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Zähler"

\end_inset

 für Einzelheiten zu Zählern.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 Der Zeichensatz, der für die Marke verwendet wird.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelIndent
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Text der angibt, wie weit die Marke eingerückt werden soll.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Labelsep
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Text der den horizontalen Abstand zwischen der Marke und dem folgenden
 Text angibt.
 Wird nur für Marken benutzt, die nicht über dem folgenden Text stehen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Der String, der für den 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

 verwendet wird.
 Wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelCounter
\end_layout

\end_inset

 gesetzt wurde, kann der String spezielle Formatierungsbefehle enthalten,
 wie sie in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Zähler"

\end_inset

 be\SpecialChar softhyphen
schrieben sind.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelStringAppendix
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] wird im Anhang anstatt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 benutzt.
 Beachten Sie, dass jede Definition von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 auch 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelStringAppendix
\end_layout

\end_inset

 zurücksetzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelTag
\end_layout

\end_inset

 [FIXME] (Wird nur für XML-Formate benutzt.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelType
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
No_Label
\emph default
, Manual, Static, Above,
\begin_inset Newline newline
\end_inset

Centered, Sensitive, Enumerate,
\begin_inset Newline newline
\end_inset

Itemize, Bibliography
\end_layout

\end_inset

]
\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Manual
\end_layout

\end_inset

 bedeutet: die Marke ist das erste Wort (bis zum ersten echten Leerzeichen).
 Verwenden Sie geschützte Leerzeichen wenn Sie mehr als ein Wort als Marke
 haben wollen.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

 bedeutet: die Marke ist was als 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 definiert wurde.
 Die Marke wird 
\begin_inset Quotes gld
\end_inset

inline
\begin_inset Quotes grd
\end_inset

 zu Beginn des Absatzes angezeigt.
 Wenn der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 ist, wird sie nur im ersten Absatz von aufeinanderfolgenden Absätzen mit
 demselben 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Style
\end_layout

\end_inset

.
 angezeigt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Above
\end_layout

\end_inset


\begin_inset space ~
\end_inset

und
\begin_inset space ~
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Centered
\end_layout

\end_inset

 sind Spezialfälle von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

.
 Die Marke erscheint über dem Absatz, entweder am Anfang der Zeile oder
 zentriert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Sensitive
\end_layout

\end_inset

 ist ein Spezialfall für Beschriftungsmarken für Abbildungen und Tabellen-Gleito
bjekte.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Sensitive
\end_layout

\end_inset

 bedeutet, dass der gedruckte Text von der Art des Gleitobjekts abhängt:
 Er ist fest einprogrammiert als 'GleitobjektTyp N', wobei N der Wert des
 Zählers des Gleitobjekttyps ist.
 Für den Fall, dass die Beschriftungsmarke außerhalb eines Gleitobjekts
 eingefügt wird, erscheint der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 als 
\begin_inset Quotes gld
\end_inset

Sinnlos!
\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Enumerate
\end_layout

\end_inset

 erzeugt die üblichen Marken für Nummerierungen.
 Momentan sind diese fest auf arabische Zahlen, Kleinbuchstaben, kleine
 römische Zahlen und Großbuchstaben (für die 4
\begin_inset space ~
\end_inset

möglichen Schachtelungstiefen) programmiert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Itemize
\end_layout

\end_inset

 erzeugt je nach Schachtelungstiefe verschiedene Auflistungszeichen, Diese
 sind ebenfalls fest programmiert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Bibliography
\end_layout

\end_inset

 sollte nur zusammen mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType BibEnvironment
\end_layout

\end_inset

 verwendet werden.
\end_layout

\end_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LangPreamble
\end_layout

\end_inset

 Beachten Sie, dass dies alle vorhergehenden 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LangPreamble
\end_layout

\end_inset

-Deklaration für diesen Stil überschreibt.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndLangPreamble
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:I18n"

\end_inset

 für Details zur Verwendung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexName
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] Der \SpecialChar LaTeX
-Name für dieses Layout.
 Das bedeutet entweder der Name eines \SpecialChar LaTeX
-Befehls oder der einer \SpecialChar LaTeX
-Umgebung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexParam
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Parameter>
\end_layout

\end_inset

] Ein optionaler Parameter für den entsprechenden
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexName
\end_layout

\end_inset

.
 Dieser Parameter kann innerhalb von \SpecialChar LyX
 nicht mehr geändert werden (man verwendet
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

 für anpassbare Parameters).
 Dieser wird nach allen anderen \SpecialChar LaTeX
-
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

en ausgegeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
Paragraph
\emph default
, Command, Environment, Item_Environment,
\begin_inset Newline newline
\end_inset

List_Environment, Bib_Environment
\end_layout

\end_inset

] Legt fest, wie das Layout in \SpecialChar LaTeX
 übersetzt wird.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 mag irreführend sein, denn dessen Regeln gelten auch für DocBook-Klassen.
 Siehe die DocBook Klassendateien (Dateinames 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
db_*.inc
\end_layout

\end_inset

 ) für spezielle Beispiele.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Paragraph
\end_layout

\end_inset

 bewirkt nichts besonderes – der Text wird als 
\emph on
normaler
\emph default
 
\emph on
Absatz
\emph default
 übernommen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Command
\end_layout

\end_inset

 behandelt den Text als Argument eines \SpecialChar LaTeX
-Befehls
\begin_inset Newline newline
\end_inset

(
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash

\emph on
LatexName
\emph default
{\SpecialChar ldots
}
\end_layout

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 behandelt den Text als Kern einer \SpecialChar LaTeX
-Umgebung
\begin_inset Newline newline
\end_inset

(
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{
\emph on
LatexName
\emph default
}\SpecialChar ldots

\backslash
end{
\emph on
LatexName
\emph default
}
\end_layout

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Item_Environment
\end_layout

\end_inset

 bewirkt dasselbe wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

, nur dass vor jedem Absatz ein 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
item
\end_layout

\end_inset

 eingefügt wird.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
List_Environment
\end_layout

\end_inset

 funktioniert wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Item_Environment
\end_layout

\end_inset

, nur dass
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelWidthString
\end_layout

\end_inset

 als Argument an die Umgebung übergeben wird.
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelWidthString
\end_layout

\end_inset

 kann im Menü 
\family sans
Bearbeiten
\family default
\SpecialChar menuseparator

\family sans
Absatz-Einstellungen
\family default
 definiert werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Bib_Environment
\end_layout

\end_inset

 ist wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 aber fügt zusätzlich das notwendige Argument (die längste Marke) zum Begin-Befe
hl der Bibliografie-Umgebung ein:
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{thebibliography}{99}
\end_layout

\end_inset

 Es ist daher nur für die Bibliografie-Umgebung nützlich.
 Die voreingestellte längste Marke 
\begin_inset Quotes gld
\end_inset

99
\begin_inset Quotes grd
\end_inset

 kann vom Nutzer in den Absatzeinstellungen eines Bibliografie-Eintrags
 geändert werden.
\end_layout

\begin_layout Standard
Fasst man die letzten Sachen zusammen, wird die \SpecialChar LaTeX
-Ausgabe entweder so:
\end_layout

\begin_layout LyX-Code

\backslash
LatexName[LatexParam]{\SpecialChar ldots
}
\end_layout

\begin_layout Standard
oder so:
\end_layout

\begin_layout LyX-Code

\backslash
begin{LatexName}[LatexParam] \SpecialChar ldots
 
\backslash
end{LatexName}.
\end_layout

\begin_layout Standard
aussehen, abhängig vom \SpecialChar LaTeX
-Typ.
\end_layout

\end_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftDelim
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Eine Zeichenkette, die zu Beginn des Inhalts des Stils ausgegeben wird.
 Ein Zeilenumbruch in der Ausgabe wird mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<br/>
\end_layout

\end_inset

 angegeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftMargin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Wenn ein Layout in ein anderes Layout für Umgebungen eingefügt wird, werden
 die Breiten der verschiedenen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftMargin
\end_layout

\end_inset

 nicht einfach addiert, sondern vorher in Abhängigkeit zur Schachtelungstiefe
 mit dem Faktor 
\begin_inset Formula $\frac{4}{\mathrm{Tiefe}+4}$
\end_inset

 multipliziert.
 Dieser Parameter wird auch dann benutzt, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Margin
\end_layout

\end_inset

 als 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Manual
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Dynamic
\end_layout

\end_inset

 definiert wurde.
 In diesem Fall wird der Wert zu den gegebenen manuellen oder dynamischen
 Rändern hinzugefügt.
\begin_inset Newline newline
\end_inset

Zum Beispiel bedeutet 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MM
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

, dass der Absatz mit der Breite eingerückt wird, die die Buchstaben 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MM
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 in der normalen Schriftart haben.
 man kann negative Breite erzeugen, indem man den String mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
-
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beginnt.
 Diese Art der Angabe wurde gewählt, damit der Text unabhängig von der verwendet
en Bildschirmschriftart wie vorgesehen aussieht.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Margin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
Static
\emph default
, Manual, Dynamic, First_Dynamic, Right_Address_Box
\end_layout

\end_inset

]
\begin_inset Newline newline
\end_inset

legt fest, wie der linke Rand des Textes bestimmt wird.
 
\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

 wählt feste Randbreiten.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Manual
\end_layout

\end_inset

 bedeutet, dass der Rand von der Einstellung der 
\family sans
Ausrichtung
\family default
 im Menü 
\family sans
Bearbeiten
\family default
\SpecialChar menuseparator

\family sans
Absatz-Einstellungen
\family default
 abhängt.
 Dies wird für hübsche Listen ohne Tabulatoren benutzt.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Dynamic
\end_layout

\end_inset

 bedeutet, der linke Rand hängt von der Größe der verwendeten Markierung
 ab.
 Dies wird zum Beispiel bei automatisch nummerierten Überschriften verwendet.
 Es leuchtet ein, dass die Überschrift 
\begin_inset Quotes gld
\end_inset

5.4.3.2.1 Sehr lange \SpecialChar ldots
 Überschrift
\begin_inset Quotes grd
\end_inset

 einen größeren linken Rand benötigt, als 
\begin_inset Quotes gld
\end_inset

3.2 Sehr lange \SpecialChar ldots
 Überschrift
\begin_inset Quotes grd
\end_inset

.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
First_Dynamic
\end_layout

\end_inset

 arbeitet ähnlich wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Dynamic
\end_layout

\end_inset

, aber nur die erste Zeile wird dynamisch gesetzt, die anderen statisch.
 Dies wird für die \SpecialChar LaTeX
-Umgebung 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
description
\end_layout

\end_inset

 benutzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Right_Address_Box
\end_layout

\end_inset

 bedeutet, dass der Rand so gewählt wird, dass die längste Zeile des Absatzes
 gerade den rechten Rand berührt.
 Dies wird zum Setzen einer Adresse am rechten Rand der Seite eingesetzt.
\end_layout

\end_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NeedProtect
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Gibt an, ob 
\begin_inset Quotes gld
\end_inset

zerbrechliche
\begin_inset Quotes grd
\end_inset

 \SpecialChar LaTeX
-Befehle innerhalb dieses Layouts durch 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
protect
\end_layout

\end_inset

 geschützt werden müssen.
 (Achtung: Diese Einstellung sagt nichts darüber aus, ob der Befehl an sich
 geschützt werden soll.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Newline
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Gibt an, ob Zeilenumbrüche in \SpecialChar LaTeX
 als 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash

\backslash

\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 dargestellt werden, oder nicht.
 Man kann dies ausschalten (Wert: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

), um \SpecialChar TeX
-Code in \SpecialChar LyX
 komfortabler editieren zu können.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NextNoIndent
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Gibt an, ob der nachfolgende Absatz einen linken Einzug haben darf oder
 nicht.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 heißt, der Absatz erhält auf keinen Fall einen Einzug (z.
\begin_inset space \thinspace{}
\end_inset

B.
 nach einer Überschrift), wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultStyle
\end_layout

\end_inset

- (normalerweise 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Standard
\end_layout

\end_inset

-) Paragraphen einen Einzug haben.
 (Daher beeinflusst die Einstellung nur 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Standard
\end_layout

\end_inset

-Paragraphen.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ObsoletedBy
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] Der Name eines Layouts, das durch dieses ersetzt wurde.
 So können Sie ein Layout umbenennen und die Rückwärtskompatibilität erhalten.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParagraphGroup
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Legt fest ob aufeinanderfolgende Absätze desselben Typs als zusammengehörend
 behandelt werden.
 Das hat den Effekt, dass 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
GuiLabel
\end_layout

\end_inset

 nur einmalig vor einer solchen Gruppe ausgegeben wird.
 Dies ist standardmäßig der Fall für 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LaTeXType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Bib_Environment
\end_layout

\end_inset

 und nicht der Fall für alle anderen Typen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParbreakIsNewline
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Gibt an, dass ein Paragraph nicht durch eine leere Zeile in der \SpecialChar LaTeX
-Ausgabe
 abgesetzt wird, sondern nur durch einen Zeilenumbruch.
 Zusammen mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThru 1
\end_layout

\end_inset

 erlaubt dies die Emulation eines reinen Texteditors (so wie die \SpecialChar TeX
-Code Einfügung
).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParIndent
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Der Einzug der ersten Zeile eines Absatzes.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parindent
\end_layout

\end_inset

 bleibt für ein bestimmtes Layout fest.
 Eine Ausnahme ist das Standard-Layout, denn dort kann der Einzug vom vorherigen
 Layout mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NextNoIndent
\end_layout

\end_inset

 verboten werden.
 Außerdem benutzt das 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Standard
\end_layout

\end_inset

-Layout innerhalb von Umgebungen den 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parindent
\end_layout

\end_inset

 der Umgebung und nicht den eigenen.
 Zum Beispiel haben 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Standard
\end_layout

\end_inset

-Absätze innerhalb einer Aufzählung keinen Einzug.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParSep
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=0
\end_layout

\end_inset

] Der vertikale Anstand zwischen den Absätzen dieses Layouts.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parskip
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=0
\end_layout

\end_inset

] Der Benutzer kann in \SpecialChar LyX
 wählen ob Absätze durch 
\family sans
Einrückung
\family default
 oder 
\family sans
Vertikaler
\begin_inset space \space{}
\end_inset

Abstand
\family default
 getrennt werden.
 Wenn 
\family sans
Einrückung
\family default
 gewählt ist, wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parskip
\end_layout

\end_inset

 ignoriert.
 Ist 
\family sans
Vertikaler
\begin_inset space \space{}
\end_inset

Abstand
\family default
 gewählt wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParIndent
\end_layout

\end_inset

 ignoriert und alle Absätze durch den vertikalen Abstand von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parskip
\end_layout

\end_inset

 getrennt.
 Die Länge dieses Abstands berechnet sich mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parskip
\begin_inset space ~
\end_inset

* DefaultHeight
\end_layout

\end_inset

 wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultHeight
\end_layout

\end_inset

 die Höhe einer Zeile in der normalen Schrift ist.
 Dadurch bleibt das Aussehen mit verschiedenen Schriften gleich.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThru
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

]
\family typewriter
 
\family default
Legt fest, ob der Absatzinhalt unverändert ausgegeben werden soll, also
 ohne diverse von \SpecialChar LaTeX
 benötigte Ersetzungen durchzuführen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThruChars
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Definiert Zeichen, die unverändert ausgegeben werden sollen.
 Das bedeutet, dass sie nicht in einen \SpecialChar LaTeX
-Befehl übersetzt werden, falls das
 normalerweise der Fall wäre.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Preamble
\end_layout

\end_inset

 Befehle und Definitionen, die in die Präambel (vor 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{docu\SpecialChar softhyphen
ment}
\end_layout

\end_inset

) eingefügt werden, wenn dieses Layout benutzt wird.
 Kann verwendet werden um Pakete zu laden, Makros zu definieren usw..
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndPreamble
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RefPrefix
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Der Präfix, der verwendet werden soll, wenn auf Marken dieses Absatzes
 verwiesen wird.
 Dies erlaubt die Verwendung von Formatierten Querverweisen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requires 
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] legt fest, dass das Layout die Funktion 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 benötigt (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Liste-von-Funktionen"

\end_inset

 für eine List der Funktionen).
 Wenn Sie ein Paket mit bestimmten Optionen anfordern müssen, können Sie
 zusätzlich 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PackageOptions
\end_layout

\end_inset

als allgemeiner Textklassen-Parameter verwenden (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Allgemeine-Parameter-für"

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ResetArgs
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Setzt die \SpecialChar LaTeX
-Argumente dieses Stils zurück (der via 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

 definiert wurde).
 Dies ist nützlich, wenn man einen Stil mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CopyStyle
\end_layout

\end_inset

 kopiert hat, aber nicht dessen (benötigten und optionalen) Argumente übernehmen
 will.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RightDelim
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Eine Zeichenkette, die am Ende des Inhalts des Stils ausgegeben wird.
 Ein Zeilenumbruch in der Ausgabe wird mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<br/>
\end_layout

\end_inset

 angegeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RightMargin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Ähnlich wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftMargin
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Spacing
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
single
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
onehalf
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
double
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
other
\begin_inset space ~
\end_inset

<Wert>
\end_layout

\end_inset

] Dies definiert die Voreinstellung für den Zeilenabstand des Layouts.
 Die Argumente 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
single
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
onehalf
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
double
\end_layout

\end_inset

 entsprechen den Multiplikatoren 1, 1.25 und 1.667.
 Wenn Sie als Argument 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
other
\end_layout

\end_inset

 angeben, müssen Sie  als 
\emph on
Wert
\emph default
 einen konkreten Multiplikator angeben.
 Im Gegensatz zu anderen Parametern erzeugt \SpecialChar LyX
, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Spacing
\end_layout

\end_inset

 gesetzt wird, spezifischen \SpecialChar LaTeX
-Code, der das \SpecialChar LaTeX
-Paket 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
setspace
\end_layout

\end_inset

 verwendet.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Spellcheck
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Erlaubt es, den Inhalt des Absatzes auf Rechtschreibung zu überprüfen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TextFont
\end_layout

\end_inset

 Der Zeichensatz, der für den Textkörper verwendet wird.
\begin_inset Newline newline
\end_inset

Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TocLevel
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int=3
\end_layout

\end_inset

]
\family typewriter
 
\family default
ist die Stufe des Stils im Inhaltsverzeichnis und wird zur automatischen
 Nummerierung von Abschnittsüberschriften benutzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ToggleIndent
\end_layout

\end_inset

 [
\emph on

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
default
\end_layout

\end_inset


\emph default
, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
always
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
never
\end_layout

\end_inset

] Dieser Befehl legt fest, ob die Einrückung der ersten Absatzzeile über
 den Absatz-Dialog ein/ausgeschaltet werden kann.
 Wenn 
\emph on

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph off
default
\end_layout

\end_inset


\emph default
 gesetzt ist, kann umgeschaltet werden, wenn in den Dokumenteinstellungen
 für die Absatztrennung 
\begin_inset Quotes gld
\end_inset

Einrückung
\begin_inset Quotes grd
\end_inset

 gewählt ist, Mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
always
\end_layout

\end_inset

 kann immer umgeschaltet werden, unabhängig von den Dokumenteinstellungen.
 Mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
never
\end_layout

\end_inset

kann nie umgeschaltet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TopSep
\end_layout

\end_inset


\series medium
 
\series default
[
\family typewriter
float=0
\family default
] Der vertikale Abstand, der die erste Serie von Absätzen vom vorangehenden
 Text trennt.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:I18n"

\end_inset

Internationalisierung von Absatz-Stilen
\end_layout

\begin_layout Standard

\lang english
If a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Style
\end_layout

\end_inset

 defines text that is to appear in the typeset document, it may use 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LangPreamble
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
BabelPreamble
\end_layout

\end_inset

 to support non-English and even multi-language documents correctly.
 The following excerpt (from the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
theorems-ams.inc
\end_layout

\end_inset

 file) shows how this works:
\end_layout

\begin_layout LyX-Code
Preamble
\end_layout

\begin_deeper
\begin_layout LyX-Code
  
\backslash
theoremstyle{remark}
\end_layout

\begin_layout LyX-Code
  
\backslash
newtheorem{claim}[thm]{
\backslash
protect
\backslash
claimname}
\end_layout

\begin_layout LyX-Code
EndPreamble
\end_layout

\begin_layout LyX-Code
LangPreamble
\end_layout

\begin_layout LyX-Code
  
\backslash
providecommand{
\backslash
claimname}{_(Claim)}
\end_layout

\begin_layout LyX-Code
EndLangPreamble
\end_layout

\begin_layout LyX-Code
BabelPreamble
\end_layout

\begin_layout LyX-Code
    
\backslash
addto
\backslash
captions$$lang{
\backslash
renewcommand{
\backslash
claimname}{_(Claim)}}
\end_layout

\begin_layout LyX-Code
EndBabelPreamble
\end_layout

\end_deeper
\begin_layout Standard

\lang english
In principle, any legal \SpecialChar LaTeX
 may appear in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LangPreamble
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
BabelPreamble
\end_layout

\end_inset

 tags, but in practice they will typically look as they do here.
 The key to correct translation of the typeset text is the definition of
 the \SpecialChar LaTeX
 command 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english

\backslash
claimname
\end_layout

\end_inset

 and its use in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english

\backslash
newtheorem
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard

\lang english
The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LangPreamble
\end_layout

\end_inset

 tag provides for internationalization based upon the overall language of
 the document.
 The contents of the tag will be included in the preamble, just as with
 the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Preamble
\end_layout

\end_inset

 tag.
 What makes it special is the use of the 
\begin_inset Quotes eld
\end_inset

function
\begin_inset Quotes erd
\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
_()
\end_layout

\end_inset

, which will be replaced, when \SpecialChar LyX
 produces \SpecialChar LaTeX
 output, with the translation of
 its argument into the document language.
\end_layout

\begin_layout Standard

\lang english
The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
BabelPreamble
\end_layout

\end_inset

 tag is more complex, since it is meant to provide support for multi-language
 documents and so offers an interface to the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
babel
\end_layout

\end_inset

 package.
 Its contents will be added to the preamble once for each language that
 appears in the document.
 In this case, the argument to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
_()
\end_layout

\end_inset

 will be replaced with its translation into the language in question; the
 expression 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$lang
\end_layout

\end_inset

 is replaced by the language name (as used by the babel package).
\end_layout

\begin_layout Standard

\lang english
A German document that also included a French section would thus have the
 following in the preamble:
\end_layout

\begin_layout LyX-Code

\backslash
addto
\backslash
captionsfrench{
\backslash
renewcommand{
\backslash
claimname}{Affirmation}}
\begin_inset Newline newline
\end_inset


\backslash
addto
\backslash
captionsngerman{
\backslash
renewcommand{
\backslash
claimname}{Behauptung}}
\begin_inset Newline newline
\end_inset


\backslash
providecommand{
\backslash
claimname}{Behauptung}
\end_layout

\begin_layout Standard

\lang english
\SpecialChar LaTeX
 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
babel
\end_layout

\end_inset

 will then conspire to produce the correct text in the output.
\end_layout

\begin_layout Standard

\lang english
One important point to note here is that the translations are provided by
 \SpecialChar LyX
 itself, through the file 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
layouttranslations
\end_layout

\end_inset

.
 This means, in effect, that 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LangPreamble
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
BabelPreamble
\end_layout

\end_inset

 are really only of use in layout files that are provided with \SpecialChar LyX
, since text
 entered in user-created layout files will not be seen by \SpecialChar LyX
's internationalizatio
n routines unless the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
layouttranslations
\end_layout

\end_inset

 file is modified accordingly.
 That said, however, any layout created with the intention that it will
 be included with \SpecialChar LyX
 should use these tags where appropriate.
 Please note that the paragraph style translations provided by \SpecialChar LyX
 will never
 change with a minor update (e.
\begin_inset space \thinspace{}
\end_inset

g.
\begin_inset space \space{}
\end_inset

from version 2.1.x to 2.1.y).
 It is however quite likely that a major update (e.
\begin_inset space \thinspace{}
\end_inset

g.
\begin_inset space \space{}
\end_inset

from 2.0.x to 2.1.y) will introduce new translations or corrections.
\end_layout

\begin_layout Subsection
Gleitobjekte
\begin_inset CommandInset label
LatexCommand label
name "subsec:Gleitobjekte"

\end_inset


\end_layout

\begin_layout Standard
Es ist nötig Gleitobjekte (
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
Abbildung
\end_layout

\end_inset

, 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
Tabelle
\end_layout

\end_inset

,\SpecialChar ldots
) in der Textklasse selber zu definieren.
 Standardgleitobjekte sind in der Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdfloats.inc
\end_layout

\end_inset

 enthalten, so dass Sie sie nur noch
\end_layout

\begin_layout LyX-Code
Input stdfloats.inc
\end_layout

\begin_layout Standard
zu Ihrer Layoutdatei hinzufügen müssen.
 Wenn Sie eine Textklasse implementieren wollen, die andere Gleitobjekttypen
 enthält (wie zum Beispiel die AGU-Klasse), werden Ihnen die folgenden Informati
onen helfen:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AllowedPlacement
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=!htbpH] Erlaubte Platzierungsoptionen für den Gleitobjekttyp.
 Der Wert ist eine Zeichenkette aus Platzierungszeichen.
 Mögliche Zeichen sind: 
\emph on
h
\emph default
 (
\begin_inset Quotes gld
\end_inset

hier wenn möglich
\begin_inset Quotes grd
\end_inset

), 
\emph on
t
\emph default
 (
\begin_inset Quotes gld
\end_inset

oben auf Seite
\begin_inset Quotes grd
\end_inset

), 
\emph on
b
\emph default
 (
\begin_inset Quotes gld
\end_inset

unten auf Seite
\begin_inset Quotes grd
\end_inset

), 
\emph on
p
\emph default
 (
\begin_inset Quotes gld
\end_inset

auf Seite nur mit Gleitobjekten
\begin_inset Quotes grd
\end_inset

), 
\emph on
H
\emph default
 (
\begin_inset Quotes gld
\end_inset

hier, unbedingt
\begin_inset Quotes grd
\end_inset

) und 
\emph on
!
\emph default
 (
\begin_inset Quotes gld
\end_inset

ignoriere LaTeX-Regeln
\begin_inset Quotes erd
\end_inset

).
 Die Reihenfolge der Zeichen in der Zeichenkette ist egal.
 Wenn keine Platzierungsoptionen erlaubt sind, verwendet man stattdessen
 die Zeichenkette 
\emph on
none
\emph default
.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AllowsSideways
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\emph on

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset


\emph default
] Definiert ob das Gleitobjekt mit Hilfe des \SpecialChar LaTeX
-Pakets 
\family typewriter
rotfloat
\family default
 (sidewaysfloat) rotiert werden kann.
 Falls das nicht der Fall ist, setzt man es auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AllowsWide
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\emph on

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset


\emph default
] Definiert ob das Gleitobjekt eine 
\begin_inset Quotes gld
\end_inset

gesternte
\begin_inset Quotes grd
\end_inset

 Version hat, die in einem zweispaltigen Dokument die komplette Seitenbreite
 einnimmt.
 Falls das nicht der Fall ist, setzt man es auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Extension
\end_layout

\end_inset


\family typewriter
\series medium
 
\family default
\series default
[
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Die Dateinamenserweiterung einer zusätzlichen Datei für das Abbildungsver\SpecialChar softhyphen
zeich
nis (oder andere).
 \SpecialChar LaTeX
 schreibt die Beschriftungen in diese Datei.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
GuiName
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Die Zeichenkette, die in den Menüs und für die Beschriftung benutzt wird.
 Dies wird in die aktuelle Sprache übersetzt, wenn babel verwendet wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTML*
\end_layout

\end_inset

 Diese Tags kontrollieren die XHTML-Ausgabe.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tags-for-XHTML"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
IsPredefined
\end_layout

\end_inset

 [
\emph on

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset


\emph default
,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Gibt an, ob das Gleitobjekt bereits in der Dokumentklasse definiert ist
 oder ob das \SpecialChar LaTeX
-Paket 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float
\end_layout

\end_inset

 geladen werden muss, um es zu definieren.
 Die Voreinstellung ist 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

, was bedeutet, dass 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float
\end_layout

\end_inset

 verwendet wird.
 Es sollte auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt werden, wenn das Gleitobjekt bereits in der Dokumentklasse definiert
 ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ListCommand
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Der Befehl der verwendet wird, um eine Liste der Gleitobjekte dieses Typs
 zu generieren; das `
\backslash
' muss weggelassen werden.
 Der Befehl 
\emph on
muss
\emph default
 angegeben werden, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UsesFloatPkg
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

 gesetzt ist, da es sonst keine Möglichkeit gibt, diesen Befehl zu erstellen.
 Er wird ignoriert, falls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UsesFloatPkg
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt ist, da es dann eine Möglichkeit gibt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ListName
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Die Überschrift für das Gleitobjekt-Verzeichnis (z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\begin_inset Quotes gld
\end_inset

Abbildungsverzeichnis
\begin_inset Quotes grd
\end_inset

).
 Sie wird für die Bildschirmmarke in \SpecialChar LyX
 verwendet, von \SpecialChar LaTeX
 für den Titel verwendet
 und als Titel in der XHTML-Ausgabe.
 Sie wird in die Dokumentsprache übersetzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NumberWithin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Dieses optionale Argument bestimmt, ob Gleitobjekte dieser Klasse mit
 der Abschnittsnummer dieses Dokuments nummeriert werden.
 Wenn zum Beispiel 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NumberWithin
\end_layout

\end_inset

 auf 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
chapter
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 gesetzt ist, werden die Gleitobjekte mit den Kapitelnummern nummeriert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Placement
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Die Standardplatzierung für die Gleitobjektklasse.

\family typewriter
 
\family default

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 sollte die Standard-\SpecialChar LaTeX
-Werte 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
t
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
b
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
p
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
h
\end_layout

\end_inset

 für oben, unten, Seite und hier enthalten.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Wie in \SpecialChar LaTeX
 ist die Reihenfolge der Buchstaben unerheblich.
\end_layout

\end_inset

 Zusätzlich gibt es den neuen Typ 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
H
\end_layout

\end_inset

, der nicht wirklich für ein Gleitobjekt steht, denn er bedeutet: drucke
 es 
\emph on
hier
\emph default
 und nirgendwo sonst.
 Beachten Sie, dass 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
H
\end_layout

\end_inset

 besonders ist und wegen der Implementierungsdetails nicht bei nicht-eingebauten
 Gleitobjekttypen benutzt werden kann.
 Wenn Sie die Platzierung nicht verstehen, benutzen Sie einfach 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
tbp
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RefPrefix
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Der Präfix, der verwendet werden soll, wenn auf Marken dieser Gleitobjekte
 verwiesen wird.
 Dies erlaubt die Verwendung von Formatierten Querverweisen.
 Man kann den 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RefPrefix
\end_layout

\end_inset

 eines kopierten Stils entfernen, indem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 auf 
\begin_inset Quotes gld
\end_inset

OFF
\begin_inset Quotes grd
\end_inset

 gesetzt wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Style
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] ist der Gleitobjektstil, wenn er mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
newfloat
\end_layout

\end_inset

 definiert wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Type
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] ist der 
\begin_inset Quotes gld
\end_inset

Typ
\begin_inset Quotes grd
\end_inset

 der neuen Gleitobjektklasse, wie z.
\begin_inset space \thinspace{}
\end_inset

B.
 Programm oder Algorithmus.
 Nach dem entsprechenden 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
newfloat
\end_layout

\end_inset

 stehen Befehle wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{program}
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
end{algorithm*}
\end_layout

\end_inset

 zur Verfügung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UsesFloatPkg
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Gibt an, ob dieses Gleitobjekt mit Hilfe des \SpecialChar LaTeX
-Pakets 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float
\end_layout

\end_inset

 definiert wurde, entweder durch die Dokumentklassen, ein anderes Paket
 oder durch \SpecialChar LyX
.
\end_layout

\begin_layout Description
Anmerkung: Wenn ein Gleitobjekt vom Typ 
\emph on
type
\emph default
 definiert wurde, gibt es automatisch einen dazugehörigen Zähler namens
 
\emph on
type
\emph default
.
\end_layout

\begin_layout Subsection
Flexible Einfügungen und InsetLayout
\begin_inset CommandInset label
LatexCommand label
name "subsec:Flexible-Einfügungen-und"

\end_inset


\end_layout

\begin_layout Standard
Es gibt drei Arten von flexiblen Einfügungen:
\end_layout

\begin_layout Itemize
Zeichenstil (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CharStyle
\end_layout

\end_inset

): diese definieren semantische Textauszeichnungen, die mit \SpecialChar LaTeX
-Befehlen wie
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
noun
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
code
\end_layout

\end_inset

 korrespondieren.
\end_layout

\begin_layout Itemize
benutzerdefiniert (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Custom
\end_layout

\end_inset

): diese können benutzt werden, um benutzer\SpecialChar softhyphen
de\SpecialChar softhyphen
fi\SpecialChar softhyphen
nier\SpecialChar softhyphen
te einklappbare Einfügungen
 zu definieren, ähnlich wie \SpecialChar TeX
-Code, Fuß\SpecialChar softhyphen
no\SpecialChar softhyphen
te usw.
 Ein naheliegendes Beispiel ist die Endnotiz, die im 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
endnote
\end_layout

\end_inset

-Modul definiert ist.
\end_layout

\begin_layout Itemize
XML-Element (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Element
\end_layout

\end_inset

): diese werden mit DocBook-Klassen benutzt.
\end_layout

\begin_layout Standard
Flexible Einfügungen werden mit der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Marke definiert, die weiter unten erklärt wird.
\end_layout

\begin_layout Standard
Die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Marke besitzt noch eine andere Funktion: sie kann benutzt werden, um das
 allgemeine Aussehen vieler verschiedener Einfügungstypen anzupassen.
 Zurzeit kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

 benutzt werden, um die Layout-Parameter für Fußnoten, Randnoten, eingefügten
 Noten, \SpecialChar TeX
-Code (ERT), Zweige, Stichwortverzeichnisse, Boxen, Tabellen, Algorithme
n, URLs und Legenden anzupassen, ebenso um flexible Einfügungen zu definieren.
\end_layout

\begin_layout Standard
Die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Definition muss mit folgender Zeile beginnen:
\end_layout

\begin_layout LyX-Code
InsetLayout <Typ>
\end_layout

\begin_layout Standard
Hier bezeichnet 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

 die Einfügung, deren Layout definiert wird.
 Es gibt vier Möglichkeiten.
\end_layout

\begin_layout Enumerate
Das Layout für eine existierende Einfügung wird geändert.
 In diesem Fall kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

 folgendes sein: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Algorithm
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Branch
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Box
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Box:shaded
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Caption:Standard
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ERT
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Figure
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Foot
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Index
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Info
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Info:menu
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Info:shortcut
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Info:shortcuts
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Listings
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Marginal
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Note:Comment
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Note:Note
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Note:Greyedout
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Table
\end_layout

\end_inset

, oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
URL
\end_layout

\end_inset

.
\end_layout

\begin_layout Enumerate
Das Layout für eine flexible Einfügung wird definiert.
 In diesem Fall muss 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

 in der Form 
\lang english

\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Flex:<Name>
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset


\lang ngerman
 sein, wobei 
\lang english

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Name
\end_layout

\end_inset


\lang ngerman
 ein beliebiger gültiger Bezeichner sein kann, der in keiner anderen existierend
en Einfügung benutzt wird.
 Der Bezeichner darf Leerzeichen enthalten, dann muss aber der komplette
 Typ in Anführungszeichen gesetzt werden.
 Beachten Sie, dass die Definition einer flexiblen Einfügung 
\emph on
auch
\emph default
 einen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyXType
\end_layout

\end_inset

-Eintrag enthalten muss, der festlegt welcher Einfügungstyp definiert wird.
\end_layout

\begin_layout Enumerate

\lang english
The layout for user specific branch is being defined.
 In this case, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<Typ>
\end_layout

\end_inset

 must be of the form
\lang ngerman
 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Branch:<Name>
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

, 
\lang english
where 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
name
\end_layout

\end_inset

 may be be any valid identifier of branch defined in user's document.
 The identifier may include spaces, but in that case the whole thing must
 be wrapped in quotes.
 The main purpose of this feature is to allow \SpecialChar LaTeX
 wrapping around specific
 branches as user needs.
\end_layout

\begin_layout Enumerate

\lang english
The layout of a user (or class) specific caption is being defined.
 In this case, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<Typ>
\end_layout

\end_inset

 must be of the form
\lang ngerman
 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Caption:<Name>
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

, 
\lang english
where 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
name
\end_layout

\end_inset

 specifies the name of the caption as it appears in the menu.
 Have a look at the standard caption (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Caption:Standard
\end_layout

\end_inset

), the specific captions of the KOMA-Script classes (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Caption:Above
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Caption:Below
\end_layout

\end_inset

) oder das Modul 
\family sans
Multilingual
\begin_inset space ~
\end_inset

Captions
\family default
 (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Caption:Bicaption
\end_layout

\end_inset

) for applications.
\end_layout

\begin_layout Standard
Die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Definition kann folgende Einträge enthalten:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int
\end_layout

\end_inset

] Definiert die Argumentnummer eines Befehls/einer Umgebung, die im aktuellen
 Layout definiert ist.
 Die Definition muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndArgument
\end_layout

\end_inset

 beendet werden.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

 für Details.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BabelPreamble
\end_layout

\end_inset

 Präambel um Sprachbefehle zu modifizieren; siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:I18n"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BgColor
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] ist die Hintergrundfarbe der Einfügung.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Namen-von-Farben"

\end_inset

 für eine Liste von verfügbaren Farbnamen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ContentAsLabel
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Ob der Inhalt der Einfügung als Marke verwendet werden soll, wenn die
 Einfügung geschlossen ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CopyStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

.
 Beachten Sie, dass der komplette Typ angegeben werden muss, z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CopyStyle Flex:<Name>
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CustomPars
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] zeigt an, ob der Benutzer den Absatzeinstellungen-Dialog benutzen darf.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Decoration
\end_layout

\end_inset

 kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Classic
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Minimalistic
\end_layout

\end_inset

, oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Conglomerate
\end_layout

\end_inset

 sein.
 Es beschreibt den Rendering-Stil für den Einfügungsrahmen und die -knöpfe.
 Fußnoten benutzen im allgemeinen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Classic
\end_layout

\end_inset

, \SpecialChar TeX
-Code
\family typewriter
 
\family default

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Minimalistic
\end_layout

\end_inset

 und Zeichenstile 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Conglomerate
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Display
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Nur sinnvoll wenn der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 ist.
 Gibt an, ob die Umgebung in der Ausgabe abgesetzt erscheint oder in einer
 Zeile mit dem umgebenden Text.
 Wenn auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

 gesetzt, wird angenommen, dass die \SpecialChar LaTeX
-Umgebung Leerraum nach den 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{
\emph on
LatexName
\emph default
}
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
end{
\emph on
LatexName
\emph default
}
\end_layout

\end_inset

 Befehlen ignoriert (inklusive des Zeilenumbruchzeichens).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

 beendet die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Definition.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 wird für den Text 
\emph on
und
\emph default
 die Marke benutzt (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

).
 Beachten Sie, dass die Definition dieses Fonts automatisch dem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 denselben Wert zuweist, das heißt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 muss zuerst definiert werden und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 danach, wenn sie unterschiedlich sein sollen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FixedWidthPreambleEncoding
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Ob eine Zeichenkodierung mit 
\begin_inset Quotes gld
\end_inset

fester Breite
\begin_inset Quotes grd
\end_inset

 für den übersetzten Inhalt von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BabelPreamble
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LangPreamble
\end_layout

\end_inset

 erzwungen wird.
 Dies wird für spezielle \SpecialChar LaTeX
-Pakete wie 
\family typewriter
listings
\family default
 benötigt, die keine variable Zeichenkodierung wie 
\family sans
utf8
\family default
 erlauben.
 Diese Einstellung wird ignoriert, wenn \SpecialChar LaTeX
-Varianten wie Xe\SpecialChar TeX
 oder Lua\SpecialChar TeX
 verwendet
 werden, die Unicode voll unterstützen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceLocalFontSwitch
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wenn babel verwendet wird; ob immer eine lokale Umschaltung der Sprache
 erfolgen soll (mittels 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
foreignlanguage
\end_layout

\end_inset

) und nie eine globale (mittels 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
selectlanguage
\end_layout

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceLTR
\end_layout

\end_inset

 erzwingt die 
\begin_inset Quotes gld
\end_inset

\SpecialChar LaTeX
-Sprache
\begin_inset Quotes grd
\end_inset

 und führt zu einer links-nach-rechts-Ausgabe, zum Beispiel bei \SpecialChar TeX
-Code oder
 URL.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceLTR
\end_layout

\end_inset

 ist eine Behelfslösung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceOwnlines
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] erzwingt einen Zeilenumbruch in der \SpecialChar LaTeX
-Ausgabe vor und nach der Einfügung.
 Dies stellt sicher, dass die Einfügung in eigenen Zeilen ausgegeben wird,
 um die Ausgabe später besser anderweitig einfacher verändern zu können.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForcePlain
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] zeigt an, ob stattdessen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PlainLayout
\end_layout

\end_inset

 benutzt werden soll oder ob der Benutzer den Absatzstil der Einfügung ändern
 darf.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FreeSpacing
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTML*
\end_layout

\end_inset

 Diese Tags kontrollieren die XHTML-Ausgabe.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tags-for-XHTML"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InToc
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Ob der Inhalt der Einfügung für die Zeichenketten des 'Gliederungs'-Fensters
 verwendet werden soll.
 Zum Beispiel will man nicht, dass der Inhalt einer Fußzeile im Namen des
 Abschnitts im Inhaltsverzeichnis des Gliederungs-Fensters erscheint.
 Aber man will normalerweise, dass der Inhalt von Zeichenstilen erscheint.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
KeepEmpty
\end_layout

\end_inset

 [
\emph on

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset


\emph default
,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 ist die für die Marke benutze Schrift (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

).
 Beachten Sie, dass diese Definition niemals vor 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 erscheinen darf, weil sie sonst unwirksam ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] wird auf dem Knopf und anderswo als Einfügungsmarke angezeigt.
 Einige Einfügungstypen (\SpecialChar TeX
-Code und Zweig) ändern diese Marke im Vo\SpecialChar softhyphen
rü\SpecialChar softhyphen
ber\SpecialChar softhyphen
gehen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LangPreamble
\end_layout

\end_inset

 Sprachabhängige Präambel; siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:I18n"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexName
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] ist der Name der \SpecialChar LaTeX
-Umgebung oder des \SpecialChar LaTeX
-Befehls.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexParam
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Parameter>
\end_layout

\end_inset

] ist ein optionaler Parameter für den zugehörigen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexName
\end_layout

\end_inset

, einschließ\SpecialChar softhyphen
lich möglicher Klammerpaare wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[]
\end_layout

\end_inset

.
 Dieser Parameter kann in \SpecialChar LyX
 nicht geändert werden (man verwendet 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

 für anpassbare Parameters).
 Dieser wird nach allen anderen \SpecialChar LaTeX
-
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

en ausgegeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Command, Environment, None
\end_layout

\end_inset

] Wie der Stil in \SpecialChar LaTeX
 übersetzt wird.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 ist vielleicht etwas missverständlich, da diese Regeln auch für SGML-Klassen
 gelten.
 Siehe die SGML-Klassendateienfür spezielle Beispiele.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
None
\end_layout

\end_inset

 bedeutet nichts Spezielles 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Command
\end_layout

\end_inset

 bedeutet 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash

\emph on
LatexName
\emph default
{\SpecialChar ldots
}
\end_layout

\end_inset


\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 bedeutet 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{
\emph on
LatexName
\emph default
}\SpecialChar ldots

\backslash
end{
\emph on
LatexName
\emph default
}
\end_layout

\end_inset

.
\end_layout

\begin_layout Description

\end_layout

\begin_layout Standard
Zusammenfassend bedeutet das, dass die \SpecialChar LaTeX
-Ausgabe entweder: 
\end_layout

\begin_layout LyX-Code

\backslash
LatexName[LatexParam]{\SpecialChar ldots
}
\end_layout

\begin_layout Standard
oder: 
\end_layout

\begin_layout LyX-Code

\backslash
begin{LatexName}[LatexParam] \SpecialChar ldots
 
\backslash
end{LatexName}
\end_layout

\begin_layout Standard
sein wird, je nach \SpecialChar LaTeX
-Typ.
\end_layout

\end_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftDelim
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Eine Zeichenkette, die zu Beginn des Inhalts des Stils ausgegeben wird.
 Ein Zeilenumbruch in der Ausgabe wird mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<br/>
\end_layout

\end_inset

 angegeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyxType
\end_layout

\end_inset

 kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
charstyle
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
custom
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
element
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
end
\end_layout

\end_inset

 (zeigt das Ende einer Definition an) sein.
 Dieser Eintrag wird für flexible Einfügungen benötigt und ist nur dort
 sinnvoll.
 Neben anderen Dingen legt er fest, in welchem Menü diese Einfügung erscheinen
 wird.
 Wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyxType
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
charstyle
\end_layout

\end_inset

 gesetzt, wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MultiPar
\end_layout

\end_inset

 automatisch auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForcePlain
\end_layout

\end_inset

 automatisch auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MultiPar
\end_layout

\end_inset

 kann auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForcePlain
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

 für 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
charstyle
\end_layout

\end_inset

-Einfügungen gesetzt werden, indem es 
\emph on
nach
\emph default
 dem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyxType
\end_layout

\end_inset

 spezifiziert wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MultiPar
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] zeigt an, ob in dieser Einfügung mehrfache Absätze erlaubt sind.
 Dadurch wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CustomPars
\end_layout

\end_inset

 auf denselben Wert gesetzt und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForcePlain
\end_layout

\end_inset

 auf den anderen.
 Diese können auf andere Werte gesetzt werden, wenn sie 
\emph on
nach
\emph default
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MultiPar
\end_layout

\end_inset

 benutzt werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NeedProtect
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] zeigt an, ob 
\emph on
zerbrechliche
\emph default
 Befehle in diesem Layout ge\SpecialChar softhyphen
schützt (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
protect
\end_layout

\end_inset

) werden sollen.
 Es zeigt 
\emph on
nicht
\emph default
 an, ob der Befehl selber geschützt werden soll.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NoInsetLayout
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Layout>
\end_layout

\end_inset

] Löscht ein vorhandenes 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ObsoletedBy
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Layout>
\end_layout

\end_inset

] Name eines 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

, das dieses 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

 ersetzt.
 Dies wird verwendet um ein 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

 umzubenennen und dabei die Rückwärtskompatibilität zu erhalten.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParbreakIsNewline
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThru
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Preamble
\end_layout

\end_inset

 Wie bei Absatz-Layouts, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RefPrefix
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Der Präfix, der verwendet werden soll, wenn auf Marken dieser Einfügung
 verwiesen wird.
 Dies erlaubt die Verwendung von Formatierten Querverweisen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requires
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ResetArgs
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Setzt die \SpecialChar LaTeX
-Argumente dieses Stils zurück (der via 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

 definiert wurde).
 Dies ist nützlich, wenn man einen Stil mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CopyStyle
\end_layout

\end_inset

 kopiert hat, aber nicht dessen (benötigten und optionalen) Argumente übernehmen
 will.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ResetsFont
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Ob die Einfügung die Schrift der übergeordneten Umgebung verwenden soll
 oder ihre eigene.
 Voreinstellung ist 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

: verwendet die Schrift der übergeordneten Umgebung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RightDelim
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Eine Zeichenkette, die am Ende des Inhalts des Stils ausgegeben wird.
 Ein Zeilenumbruch in der Ausgabe wird mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<br/>
\end_layout

\end_inset

 angegeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Spellcheck
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Erlaubt es, den Inhalt der Einfügung auf Rechtschreibung zu überprüfen.
\end_layout

\begin_layout Subsection
Zähler
\begin_inset CommandInset label
LatexCommand label
name "subsec:Zähler"

\end_inset


\end_layout

\begin_layout Standard
Es ist notwendig Zähler (
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
chapter
\end_layout

\end_inset

, 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
figure
\end_layout

\end_inset

,\SpecialChar ldots
) in der Textklasse selber zu definieren.
 Die Standardzähler sind in der Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdcounters.inc
\end_layout

\end_inset

 definiert, so dass Sie nur die Zeile
\end_layout

\begin_layout LyX-Code
Input stdcounters.inc
\end_layout

\begin_layout Standard
zu zu Ihrer Layout-Datei hinzufügen müssen, damit sie arbeiten.
 Aber wenn Sie eigene Zähler definieren wollen, können Sie das tun.
 Zähler-Deklarationen beginnen mit
\end_layout

\begin_layout LyX-Code
Counter <Name>
\end_layout

\begin_layout Standard
wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

 der Name Ihres Zählers ist.
 Die Deklaration endet mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Folgende Parameter können auch benutzt werden:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InitialValue
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int=1
\end_layout

\end_inset

] Setzt den Startwert für einen Zähler, auf den er zurückgesetzt wird.
 Normalerweise will man die Voreinstellung 
\begin_inset Quotes gld
\end_inset

1
\begin_inset Quotes grd
\end_inset

 haben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] definiert, wie der Zähler dargestellt wird.
 Hierdurch wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelStringAppendix
\end_layout

\end_inset

 auf denselben Wert gesetzt.
 In der Zeichenkette können folgende Konstrukte benutzt werden:
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
thecounter
\end_layout

\end_inset

 wird durch die Erweiterung von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 (oder
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelStringAppendix
\end_layout

\end_inset

) des Zählers 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
counter
\end_layout

\end_inset

 ersetzt.
\end_layout

\begin_layout Itemize
Zählerwerte können durch \SpecialChar LaTeX
-ähnliche Makros wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash

\emph on
numbertype
\emph default
{
\emph on
counter
\emph default
}
\end_layout

\end_inset

 ausgedrückt werden, wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
numbertype
\end_layout

\end_inset

 Folgendes sein kann: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
arabic
\end_layout

\end_inset

: 1, 2, 3,\SpecialChar ldots
; 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
alph
\end_layout

\end_inset

 für Kleinbuchstaben: a, b, c,\SpecialChar ldots
; 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Alph
\end_layout

\end_inset

 für Großbuchstaben: A, B, C,\SpecialChar ldots
; 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
roman
\end_layout

\end_inset

 für kleine römische Zahlen: i, ii, iii,\SpecialChar ldots
; 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Roman
\end_layout

\end_inset

 für große römische Zahlen: I, II, III.
\end_layout

\begin_layout Standard
Wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 nicht definiert ist, wird ein Standardwert wie folgt benutzt: wenn der
 Zähler einen Hauptzähler 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
master
\end_layout

\end_inset

 (über 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Within
\end_layout

\end_inset

 definiert) hat, wird der String 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
themaster.
\backslash
arabic{counter}
\end_layout

\end_inset

 benutzt, ansonsten 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
arabic{counter}
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelStringAppendix
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] ist dasselbe wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

, aber für den Anhang.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PrettyFormat
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Ein Format, das für Formatierte Querverweise auf einen Zähler verwendet
 wird.
 Möchte man z.
\begin_inset space \thinspace{}
\end_inset

B.
 Referenzen auf Abschnitte in der Form 
\begin_inset Quotes gld
\end_inset

Abschnitt
\begin_inset space ~
\end_inset

2.4
\begin_inset Quotes grd
\end_inset

 haben, sollte der String 
\begin_inset Quotes gld
\end_inset

##
\begin_inset Quotes grd
\end_inset

 enthalten.
 Diese Zeichen werden später durch die referenzierte Abschnittsnummer ersetzt.
 Also für Abschnitte lautet der String dann 
\begin_inset Quotes gld
\end_inset

Abschnitt ##
\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Within
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=
\begin_inset Quotes erd
\end_inset


\begin_inset Quotes erd
\end_inset

] Wenn dies auf den Namen eines anderen Zählers gesetzt wird, wird der gegenwärt
ige Zähler jedes mal zurückgesetzt, wenn der andere erhöht wird.
 Zum Beispiel wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
subsection
\end_layout

\end_inset

 innerhalb 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
section
\end_layout

\end_inset

 nummeriert.
\end_layout

\begin_layout Subsection
Beschreibung des Zeichensatzes
\begin_inset CommandInset label
LatexCommand label
name "subsec:Beschreibung-des-Zeichensatzes"

\end_inset


\end_layout

\begin_layout Standard
Eine Zeichensatzbeschreibung sieht folgendermaßen aus:
\end_layout

\begin_layout LyX-Code
Font 
\family roman
\emph on
oder
\family default
\emph default
 LabelFont 
\emph on
oder
\emph default
 DefaultFont
\end_layout

\begin_layout LyX-Code
 ...
\end_layout

\begin_layout LyX-Code
EndFont
\end_layout

\begin_layout Standard
und es sind folgende Befehle vorhanden:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Color
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
none
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
black
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
white
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
red
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
green
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
blue
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
cyan
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
magenta
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
yellow
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
brown
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
darkgray
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
gray
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
lightgray
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
lime
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
orange
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
olive
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
pink
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
purple
\end_layout

\end_inset

,
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
teal
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
violet
\end_layout

\end_inset

]
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Family
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Roman
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Sans
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Typewriter
\end_layout

\end_inset

]
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Misc
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Zulässige Argumente sind: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
emph
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
noun
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
strikeout
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
underbar
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
uuline
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
uwave
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_emph
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_noun
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_strikeout
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_bar
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_uuline
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_uwave
\end_layout

\end_inset

.
 Jedes schaltet die entsprechende Eigenschaft an oder aus.
 Zum Beispiel führt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
emph
\end_layout

\end_inset

 zum Stil 
\emph on
Hervorhebung
\emph default
 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_emph
\end_layout

\end_inset

 schaltet diesen aus.
\begin_inset Newline newline
\end_inset

Falls Sie Letzteres verwirrt, erinnern Sie sich, dass die Schrifteinstellungen
 standardmäßig von den umgebenden Stilen übernommen wird.
 Daher schaltet 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_emph
\end_layout

\end_inset

 die 
\emph on
Hervorhebung
\emph default
 aus, die z.
\begin_inset space \thinspace{}
\end_inset

B.
 in einer Theorem-Umgebung aktiv ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Series
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Medium
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Bold
\end_layout

\end_inset

] 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Shape
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Up
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Italic
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
SmallCaps
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Slanted
\end_layout

\end_inset

] 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Size
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
tiny
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
small
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
normal
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
large
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
larger
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
largest
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
huge
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
giant
\end_layout

\end_inset

]
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Citation-format-description"

\end_inset


\lang english
Citation format description
\end_layout

\begin_layout Standard

\lang english
The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
CiteFormat
\end_layout

\end_inset

 blocks are used to describe how bibliographic information should be displayed,
 both within \SpecialChar LyX
 itself (in the citation dialog and in tooltips, for example)
 and in XHTML output.
 Such a block might look like this:
\end_layout

\begin_layout LyX-Code
CiteFormat
\end_layout

\begin_layout LyX-Code
 article ...
\end_layout

\begin_layout LyX-Code
 book ...
\end_layout

\begin_layout LyX-Code
End
\end_layout

\begin_layout Standard

\lang english
The individual lines define how the bibliographic information associated
 with an article or book, respectively, is to be displayed, and such a definitio
n can be given for any `entry type' that might be present in a Bib\SpecialChar TeX
 file.
 \SpecialChar LyX
 defines a default format in the source code that will be used if no specific
 definition has been given.
 \SpecialChar LyX
 predefines several formats in the file 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
stdciteformats.inc
\end_layout

\end_inset

, which is included in most of \SpecialChar LyX
's document classes.
\end_layout

\begin_layout Standard

\lang english
The definitions use a simple language that allows Bib\SpecialChar TeX
 keys to be replaced
 with their values.
 Keys should be enclosed in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
%
\end_layout

\end_inset

 signs, e.g.: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
%author%
\end_layout

\end_inset

.
 So a simple definition might look like this:
\end_layout

\begin_layout LyX-Code
misc %author%, 
\begin_inset Quotes eld
\end_inset

%title%
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard

\lang english
This would print the author, followed by a comma, followed by the title,
 in quotes, followed by a period.
\end_layout

\begin_layout Standard

\lang english
Of course, sometimes you may want to print a key only if it exists.
 This can be done by using a conditional construction, such as: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
{%volume%[[vol.
\begin_inset space ~
\end_inset

%volume%]]}
\end_layout

\end_inset

.
 This says: If the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
volume
\end_layout

\end_inset

 key exists, then print 
\begin_inset Quotes eld
\end_inset

vol.
\begin_inset space ~
\end_inset


\begin_inset Quotes erd
\end_inset

 followed by the volume key.
 It is also possible to have an else clause in the conditional, such as:
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
{%author%[[%author%]][[%editor%, ed.]]}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

Here, the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
author
\end_layout

\end_inset

 key is printed if it exists; otherwise, the editor key is printed, followed
 by 
\begin_inset Quotes eld
\end_inset

,
\begin_inset space ~
\end_inset

ed.
\begin_inset Quotes erd
\end_inset

 Note that the key is again enclosed in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
%
\end_layout

\end_inset

 signs; the entire conditional is enclosed in braces; and the if and else
 clauses are enclosed in double brackets, 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
[[
\end_layout

\end_inset


\begin_inset Quotes eld
\end_inset

 and 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
]]
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 There must be no space between any of these.
\end_layout

\begin_layout Standard

\lang english
There is one other piece of syntax available in definitions, which looks
 like this: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
{!<i>!}
\end_layout

\end_inset

.
 This defines a piece of formatting information that is to be used when
 creating 
\begin_inset Quotes eld
\end_inset

rich text
\begin_inset Quotes erd
\end_inset

.
 Obviously, we do not want to output HTML tags when writing plain text,
 so they should be wrapped in 
\begin_inset Quotes eld
\end_inset

{!
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

!}
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard

\lang english
Two special sorts of definitions are also possible in a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
CiteFormat
\end_layout

\end_inset

 block.
 An example of the first would be:
\end_layout

\begin_layout LyX-Code
!quotetitle 
\begin_inset Quotes eld
\end_inset

%title%
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard

\lang english
This is an abbreviation, or macro, and it can be used by treating it as
 if it were a key: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
%!quotetitle%
\end_layout

\end_inset

.
 \SpecialChar LyX
 will treat 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
%!quotetitle%
\end_layout

\end_inset

 exactly as it would treat its definition.
 So, let us issue the obvious 
\emph on
warning
\emph default
.
 Do not do this:
\end_layout

\begin_layout LyX-Code
!funfun %funfun%
\end_layout

\begin_layout Standard

\lang english
or anything like it.
 \SpecialChar LyX
 shouldn't go into an infinite loop, but it may go into a long one before
 it gives up.
\end_layout

\begin_layout Standard

\lang english
The second sort of special definition might look like this:
\end_layout

\begin_layout LyX-Code
_pptext pp.
\end_layout

\begin_layout Standard

\lang english
This defines a translatable piece of text, which allows relevant parts of
 the bibliography to be translated.
 It can be included in a definition by treating it as a key: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
%_pptext%
\end_layout

\end_inset

.
 Several of these are predefined in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
stdciteformats.inc
\end_layout

\end_inset

.
 Note that these are not macros, in the sense just defined.
 They will not be expanded.
\end_layout

\begin_layout Standard

\lang english
So here then is an example that use all these features:
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\family typewriter
\lang english
!authoredit {%author%[[%author%, ]][[{%editor%[[%editor%, %_edtext%, ]]}]]}
\end_layout

\begin_layout Standard

\lang english
\begin_inset VSpace defskip
\end_inset

This defines a macro that prints the author, followed by a comma, if the
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
author
\end_layout

\end_inset

 key is defined, or else prints the name of the editor, followed by the
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
_edtext
\end_layout

\end_inset

 or its translation (it is by default 
\begin_inset Quotes eld
\end_inset

ed.
\begin_inset Quotes erd
\end_inset

), if the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
editor
\end_layout

\end_inset

 key is defined.
 Note that this is in fact defined in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
stdciteformats.inc
\end_layout

\end_inset

, so you can use it in your own definitions, or re-definitions, if you load
 that file first.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Tags-for-XHTML"

\end_inset


\lang english
Tags for XHTML output
\end_layout

\begin_layout Standard

\lang english
As with \SpecialChar LaTeX
 or DocBook, the format of \SpecialChar LyX
's XHTML output is also controlled by
 layout information.
 In general, \SpecialChar LyX
 provides sensible defaults and, as mentioned earlier, it will
 even construct default CSS style rules from the other layout tags.
 For example, \SpecialChar LyX
 will attempt to use the information provided in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Font
\end_layout

\end_inset

 declaration for the Chapter style to write CSS that will appropriately
 format chapter headings.
\end_layout

\begin_layout Standard

\lang english
In many cases, then, you may not have to do anything at all to get acceptable
 XHTML output for your own environments, custom insets, and so forth.
 But in some cases you will, and so \SpecialChar LyX
 provides a number of layout tags that
 can be used to customize the XHTML and CSS that are generated.
\end_layout

\begin_layout Standard

\lang english
Note that there are two tags, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLPreamble
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
AddToHTMLPreamble
\end_layout

\end_inset

 that may appear outside style and inset declarations.
 See 
\lang ngerman

\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Allgemeine-Parameter-für"

\end_inset


\lang english
 for details on these.
\end_layout

\begin_layout Subsection

\lang english
Paragraph styles
\end_layout

\begin_layout Standard

\lang english
The sort of XHTML \SpecialChar LyX
 outputs for a paragraph depends upon whether we are dealing
 with a normal paragraph, a command, or an environment, where this is itself
 determined by the contents of the corresponding 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
\SpecialChar LaTeX
Type
\end_layout

\end_inset

 tag.
 
\end_layout

\begin_layout Standard

\lang english
For a command or normal paragraph, the output XHTML has the following form:
\end_layout

\begin_layout LyX-Code

\lang english
<tag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>
\end_layout

\begin_layout LyX-Code

\lang english
<labeltag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>Label</labeltag>
\end_layout

\begin_layout LyX-Code

\lang english
Contents of the paragraph.
\end_layout

\begin_layout LyX-Code

\lang english
</tag>
\end_layout

\begin_layout Standard

\lang english
The label tags are of course omitted if the paragraph does not have a label.
\end_layout

\begin_layout Standard

\lang english
For an environment that is not some sort of list, the XHTML takes this form:
\end_layout

\begin_layout LyX-Code

\lang english
<tag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>
\end_layout

\begin_layout LyX-Code

\lang english
<itemtag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

><labeltag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>Environment Label</labeltag>First paragraph.</itemtag>
\end_layout

\begin_layout LyX-Code

\lang english
<itemtag>Second paragraph.</itemtag>
\end_layout

\begin_layout LyX-Code

\lang english
</tag>
\end_layout

\begin_layout Standard

\lang english
Note that the label is output only for the first paragraph, as it should
 be for a theorem, for example.
 
\end_layout

\begin_layout Standard

\lang english
For a list, we have one of these forms:
\end_layout

\begin_layout LyX-Code

\lang english
<tag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>
\end_layout

\begin_layout LyX-Code

\lang english
<itemtag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

><labeltag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>List Label</labeltag>First item.</itemtag>
\end_layout

\begin_layout LyX-Code

\lang english
<itemtag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

><labeltag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>List Label</labeltag>Second item.</itemtag>
\end_layout

\begin_layout LyX-Code

\lang english
</tag>
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\lang english
<tag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>
\end_layout

\begin_layout LyX-Code

\lang english
<labeltag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>List Label</labeltag><itemtag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>First item.</itemtag>
\end_layout

\begin_layout LyX-Code

\lang english
<labeltag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>List Label</labeltag><itemtag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>Second item.</itemtag>
\end_layout

\begin_layout LyX-Code

\lang english
</tag>
\end_layout

\begin_layout Standard

\lang english
Note the different orders of 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
labeltag
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
itemtag
\end_layout

\end_inset

.
 Which order we get depends upon the setting of 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLLabelFirst
\end_layout

\end_inset

: If 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLLabelFirst
\end_layout

\end_inset

 is false (the default), you get the first of these, with the label within
 the item; if true, you get the second, with the label outside the item.
\end_layout

\begin_layout Standard

\lang english
The specific tags and attributes output for each paragraph type can be controlle
d by means of the layout tags we are about to describe.
 As mentioned earlier, however, \SpecialChar LyX
 uses sensible defaults for many of these,
 so you often may not need to do very much to get good XHTML output.
 Think of the available tags as there so you can tweak things to your liking.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] Specifies attribute information to be output with the main tag.
 For example, 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`mydiv'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 By default, \SpecialChar LyX
 will output 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`layoutname'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

, where 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
layoutname
\end_layout

\end_inset

 is the \SpecialChar LyX
 name of the layout, made lowercase, for example: chapter.
 This should 
\emph on
not
\emph default
 contain any style information.
 Use 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

 for that purpose.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLForceCSS
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
\lang english
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
1
\end_layout

\end_inset

] Whether to output the default CSS information \SpecialChar LyX
 generates for this layout,
 even if additional information is explicitly provided via 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

.
 Setting this to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
1
\end_layout

\end_inset

 allows you to alter or augment the generated CSS, rather than to override
 it completely.
 Default is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
0
\end_layout

\end_inset

.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLItem
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] The tag to be used for individual paragraphs of environments, replacing
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
itemtag
\end_layout

\end_inset

 in the examples above.
 Defaults to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
div
\end_layout

\end_inset

.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLItemAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] Attributes for the item tag.
 Defaults to 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`layoutname_item'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 This should 
\emph on
not
\emph default
 contain any style information.
 Use 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

 for that purpose.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLLabel
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] The tag to be used for paragraph and item labels, replacing 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
labeltag
\end_layout

\end_inset

 in the examples above.
 Defaults to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
span
\end_layout

\end_inset

, unless 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
LabelType
\end_layout

\end_inset

 is either 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Top_Environment
\end_layout

\end_inset

 or 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Centered_Top_Environment
\end_layout

\end_inset

, in which case it defaults to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
div
\end_layout

\end_inset

.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLLabelAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] Attributes for the label tag.
 Defaults to 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`layoutname_label'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 This should 
\emph on
not
\emph default
 contain any style information.
 Use 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

 for that purpose.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLLabelFirst
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
\lang english
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
1
\end_layout

\end_inset

] Meaningful only for list-like environments, this tag controls whether
 the label tag is output before or inside the item tag.
 This is used, for example, in the description environment, where we want
 `
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<dt>\SpecialChar ldots
</dt><dd>\SpecialChar ldots
</dd>
\end_layout

\end_inset

.
 Default is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
0
\end_layout

\end_inset

: The label tag is output inside the item tag.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLPreamble
\end_layout

\end_inset

 Information to be output in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<head>
\end_layout

\end_inset

 section when this style is used.
 This might, for example, be used to include a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<script>
\end_layout

\end_inset

 block defining an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
onclick
\end_layout

\end_inset

 handler.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

 CSS style information to be included when this style is used.
 Note that this will automatically be wrapped in a layout-generated 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<style>
\end_layout

\end_inset

 block, so only the CSS itself need be included.
 Must end with 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
EndHTMLStyle
\end_layout

\end_inset

.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLTag
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] The tag to be used for the main label, replacing 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
tag
\end_layout

\end_inset

 in the examples above.
 Defaults to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
div
\end_layout

\end_inset

.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLTitle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
\lang english
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
1
\end_layout

\end_inset

] Marks this style as the one to be used to generate the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<title>
\end_layout

\end_inset

 tag for the XHTML file.
 By default, it is false.
 The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
stdtitle.inc
\end_layout

\end_inset

 file sets it to true for the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
title
\end_layout

\end_inset

 environment.
 
\end_layout

\begin_layout Subsection

\lang english
InsetLayout XHTML
\end_layout

\begin_layout Standard

\lang english
The XHTML output of insets can also be controlled by information in layout
 files.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang english
At present, this is true only for 
\begin_inset Quotes eld
\end_inset

text
\begin_inset Quotes erd
\end_inset

 insets (insets you can type into) and is not true for 
\begin_inset Quotes eld
\end_inset

command
\begin_inset Quotes erd
\end_inset

 insets (insets that are associated with dialog boxes).
\end_layout

\end_inset

 Here, too, \SpecialChar LyX
 tries to provide sensible defaults, and it constructs default
 CSS style rules.
 But everything can be customized.
\end_layout

\begin_layout Standard

\lang english
The XHTML \SpecialChar LyX
 outputs for an inset has the following form:
\end_layout

\begin_layout LyX-Code

\lang english
<tag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>
\end_layout

\begin_layout LyX-Code

\lang english
<labeltag>Label</labeltag>
\end_layout

\begin_layout LyX-Code

\lang english
<innertag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>Contents of the inset.</innertag>
\end_layout

\begin_layout LyX-Code

\lang english
</tag>
\end_layout

\begin_layout Standard

\lang english
If the inset permits multiple paragraphs—that is, if 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
MultiPar
\end_layout

\end_inset

 is true—then the contents of the inset will itself be output as paragraphs
 formatted according to the styles used for those paragraphs (standard,
 quote, and the like).
 The label tag is of course omitted if the paragraph does not have a label
 and, at present, is always 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
span
\end_layout

\end_inset

.
 The inner tag is optional and, by default, does not appear.
\end_layout

\begin_layout Standard

\lang english
The specific tags and attributes output for each inset can be controlled
 by means of the following layout tags.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] Specifies attribute information to be output with the main tag.
 For example, 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`myinset' onclick=`\SpecialChar ldots
'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 By default, \SpecialChar LyX
 will output 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`insetname'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

, where 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
insetname
\end_layout

\end_inset

 is the \SpecialChar LyX
 name of the inset, made lowercase and with non-alphanumeric characters
 converted to underscores, for example: footnote.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLForceCSS
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
\lang english
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
1
\end_layout

\end_inset

] Whether to output the default CSS information \SpecialChar LyX
 generates for this layout,
 even if additional information is explicitly provided via 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

.
 Setting this to 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
1
\end_layout

\end_inset

 allows you to alter or augment the generated CSS, rather than to override
 it completely.
 Default is 0.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLInnerAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] Attributes for the inner tag.
 Defaults to 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`insetname_inner'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLInnerTag
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] The inner tag, replacing 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
innertag
\end_layout

\end_inset

 in the examples above.
 By default, there is none.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLIsBlock
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
\lang english
1
\end_layout

\end_inset

] Whether this inset represents a standalone block of text (such as a footnote)
 or instead represents material that is included in the surrounding text
 (such as a branch).
 Defaults to 1.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLLabel
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] A label for this inset, possibly including a reference to a counter.
 For example, for footnote, it might be: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english

\backslash
arabic{footnote}
\end_layout

\end_inset

.
 This is optional, and there is no default.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLPreamble
\end_layout

\end_inset

 Information to be output in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<head>
\end_layout

\end_inset

 section when this style is used.
 This might, for example, be used to include a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<script>
\end_layout

\end_inset

 block defining an 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
onclick
\end_layout

\end_inset

 handler.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

 CSS style information to be included when this style is used.
 Note that this will automatically be wrapped in a layout-generated 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<style>
\end_layout

\end_inset

 block, so only the CSS itself need be included.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLTag
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] The tag to be used for the main label, replacing 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
tag
\end_layout

\end_inset

 in the examples above.
 The default depends upon the setting of 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
MultiPar
\end_layout

\end_inset

: If 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
MultiPar
\end_layout

\end_inset

 is true, the default is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
div
\end_layout

\end_inset

; if it is false, the default is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
span
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection

\lang english
Float XHTML
\end_layout

\begin_layout Standard

\lang english
The XHTML output for floats too can be controlled by layout information.
 The output has the following form:
\end_layout

\begin_layout LyX-Code

\lang english
<tag attr=
\begin_inset Quotes erd
\end_inset

value
\begin_inset Quotes erd
\end_inset

>
\end_layout

\begin_layout LyX-Code

\lang english
Contents of the float.
\end_layout

\begin_layout LyX-Code

\lang english
</tag>
\end_layout

\begin_layout Standard

\lang english
The caption, if there is one, is a separate inset and will be output as
 such.
 Its appearance can be controlled via the InsetLayout for caption insets.
 
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] Specifies attribute information to be output with the main tag.
 For example, 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`myfloat' onclick=`\SpecialChar ldots
'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 By default, \SpecialChar LyX
 will output 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
class=`float float-floattype'
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

, where 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
floattype
\end_layout

\end_inset

 is \SpecialChar LyX
's name for this type of float, as determined by the float declaration
 (see 
\lang ngerman

\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Gleitobjekte"

\end_inset


\lang english
), though made lowercase and with non-alphanumeric characters converted
 to underscores, for example: float-table.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLStyle
\end_layout

\end_inset

 CSS style information to be included when this float is used.
 Note that this will automatically be wrapped in a layout-generated 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<style>
\end_layout

\end_inset

 block, so only the CSS itself need be included.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HTMLTag
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
string
\end_layout

\end_inset

] The tag to be used for this float, replacing 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
tag
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 in the example above.
 The default is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
div
\end_layout

\end_inset

 and will rarely need changing.
\end_layout

\begin_layout Subsection

\lang english
Bibliography formatting
\end_layout

\begin_layout Standard

\lang english
The bibliography can be formatted using 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
CiteFormat
\end_layout

\end_inset

 blocks.
 See 
\lang ngerman

\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Citation-format-description"

\end_inset


\lang english
 for the details.
\end_layout

\begin_layout Subsection

\lang english
\SpecialChar LyX
-generated CSS
\end_layout

\begin_layout Standard

\lang english
We have several times mentioned that \SpecialChar LyX
 will generate default CSS style rules
 for both insets and paragraph styles, based upon the other layout information
 that is provided.
 In this section, we shall say a word about which layout information \SpecialChar LyX
 uses
 and how.
\end_layout

\begin_layout Standard

\lang english
At present, \SpecialChar LyX
 auto-generates CSS only for font information, making use of
 the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Family
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Series
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Shape
\end_layout

\end_inset

, and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Size
\end_layout

\end_inset

 specified in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Font
\end_layout

\end_inset

 declaration (see 
\lang ngerman

\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

).

\lang english
 The translation is mostly straightforward and obvious.
 For example, 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Family Sans
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 becomes 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
font-family: sans-serif;
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 The correspondence of \SpecialChar LyX
 sizes and CSS sizes is a little less obvious but
 nonetheless intuitive.
 See the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
getSizeCSS()
\end_layout

\end_inset

 function in 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

src/FontInfo.cpp
\end_layout

\end_inset

 for the details.
\end_layout

\begin_layout Chapter
Externes Material einfügen
\begin_inset CommandInset label
LatexCommand label
name "cha:Externes-Material-einfügen"

\end_inset


\end_layout

\begin_layout Standard

\lang english
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
WARNUNG: 
\lang english
This portion of the documentation has not been updated for some time.
 We certainly hope that it is still accurate, but there are no guarantees.
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang english
The use of material from sources external to \SpecialChar LyX
 is covered in detail in the
 
\emph on
Embedded Objects
\emph default
 manual.
 This part of the manual covers what needs to happen behind the scenes for
 new sorts of material to be included.
\end_layout

\begin_layout Section
Wie funktioniert das?
\end_layout

\begin_layout Standard
Die Einfügung 
\family sans
Externes
\begin_inset space \space{}
\end_inset

Material
\family default
 basiert auf dem Konzept der Vorlage.
 Eine solche Vorlage ist eine Spezifikation, wie \SpecialChar LyX
 mit einer bestimmten Sorte
 von Material umgehen soll.
 Derzeit gehören zu \SpecialChar LyX
 derartige Vorlagen für XFig-Abbildungen, Dia-Diagramme,
 diverse Abbildungen im Rasterformat, Gnuplot und noch ein paar mehr.
 Die vollständige Liste sehen Sie in 
\family sans
Einfügen\SpecialChar menuseparator
Datei\SpecialChar menuseparator
Externes
\begin_inset space \space{}
\end_inset

Material
\family default
.
\end_layout

\begin_layout Standard
Darüberhinaus ist es möglich, durch eigene Vorlagen beliebige andere Formate
 einzubinden.
 Wir werden weiter unten beschreiben, was genau Sie dazu machen müssen und
 hoffen, dass Sie derartig erstellte Vorlagen an das \SpecialChar LyX
-Team schicken, damit
 sie in kommenden \SpecialChar LyX
-Versionen integriert werden können.
\end_layout

\begin_layout Standard
Ein weiteres Merkmal der Idee der externen Einfügung ist die Unterscheidung
 zwischen der ursprünglichen Datei, die als Grundlage für das eingefügte
 Material dient, und der erzeugten Datei, die dann letztendlich in Ihr Dokument
 eingebunden wird.
 Wir wollen dies am Beispiel einer XFig-Abbildung erläutern.
\end_layout

\begin_layout Standard
Das Programm XFig bearbeitet eine speziell formatierte Datei mit der Endung
 
\family typewriter
.fig
\family default
.
 In XFig können Sie Ihre Abbildung editieren und ändern, und zum Schluss
 speichern Sie diese 
\family typewriter
.fig
\family default
-Datei.
 Wenn Sie nun eine derartige Abbildung in \SpecialChar LyX
 einbinden wollen, müssen Sie
 zunächst 
\family typewriter
transfig
\family default
 starten, um eine PostScript-Datei zu erzeugen, die von \SpecialChar LaTeX
 eingebunden werden
 kann.
 In diesem Fall ist also die 
\family typewriter
.fig
\family default
-Datei die oben erwähnte Originaldatei, und die 
\family typewriter
.ps-
\family default
Datei die tatsächlich eingebundene Datei.
\end_layout

\begin_layout Standard
Diese Unterscheidung ist wichtig, denn Sie erlaubt das einfache Ändern und
 Aktualisieren des Materials, während Sie an Ihrem Text schreiben.
 Außerdem ist erst so die Flexibilität gegeben, die benötigt wird, um unterschie
dliche Exportformate für die \SpecialChar LyX
-Datei zu ermöglichen.
\end_layout

\begin_layout Standard
So ist es im Falle einer Ausgabe als reiner (ASCII) Text sicher nicht sinnvoll,
 eine PostScript-Datei im Rohformat einzubinden.
 In diesem Fall wird dann entweder nur eine Referenz auf die Bilddatei angegeben
, oder aber es wird ein Konverter gestartet, der eine ASCII-Darstellung
 erzeugt, die in etwa so aussieht wie die ursprüngliche Grafik.
 Genau dies ist mit der Einfügung 
\family sans
Externes Material
\family default
 möglich, denn sie kennt all die notwendigen Befehle für derartige Konvertierung
en (sofern sie von \SpecialChar LyX
 unterstützt werden).
\end_layout

\begin_layout Standard
Darüberhinaus erlaubt die Einfügung 
\family sans
Externes Material
\family default
 aber auch die einfache Integration mit externen Betrachtern und Editoren.
 So sind Sie bei einer XFig-Abbildung in der Lage, mit einem einigen Klick
 XFig zu starten, um die Abbildung zu bearbeiten oder die erstellte PostScript-D
atei mit 
\family typewriter
ghostview
\family default
 zu betrachten.
 Kein langes Herumsuchen mit Dateimanagern nach den Original- und Grafikdateien
 mehr, und Sie müssen sich nicht mehr an die unterschiedlichen Parameter
 erinnern, die vielleicht für diese Abbildung notwendig sind, um sie in
 der richtigen Größe zu erstellen.
 Sie haben ohne viel Aufwand Zugriff auf eine Vielzahl von Applikationen
 und können so Ihre Produktivität ungemein steigern.
\end_layout

\begin_layout Standard
\SpecialChar LyX
 besitzt also die Information über eine Vielzahl von externen Programmen,
 um diese von Ihnen unbemerkt nutzen zu können und Ihnen so den größtmöglichen
 Komfort zu bieten.
 Und genau diese Information ist in den oben erwähnten Vorlagen gespeichert.
 Jede dieser Vorlagen enthält eine Liste von Befehlen und Optionen, um externe
 Programme zu starten, Formate zu konvertieren usw\SpecialChar endofsentence

\end_layout

\begin_layout Standard
Ein fortgeschrittener Anwender kann mit derartigen selbst erstellten Vorlagen
 die Möglichkeiten von \SpecialChar LyX
 stark erweitern, ohne dazu den eigentlichen Quellcode
 verändern zu müssen.
 Zwar ist dazu einiges an Arbeit notwendig, um all diese Befehle festzulegen,
 aber zum Glück hat das \SpecialChar LyX
-Team das in einigen Fällen ja schon getan.
\end_layout

\begin_layout Standard
Eine kleine Einschränkung gibt es aber doch: Da es wie erwähnt eine Vielzahl
 möglicher Exportformate für das eingefügte Material gibt, wäre es zu vermuten,
 dass man von \SpecialChar LyX
 aus auch alle diese Formate als Vorschau ansehen kann.
 Das \SpecialChar LyX
-Team hat sich entschlossen, das nicht zu tun, um die Benutzerschnittstelle
 so einfach wie möglich zu halten.
 Anstatt im Dialog für jedes mögliche Exportformat einen eigenen Knopf für
 die Vorschau zu haben, wurde das Konzept des primären Formats eingeführt,
 und es gibt nur einen Schalter 
\family sans
in
\begin_inset space ~
\end_inset

LyX
\begin_inset space ~
\end_inset

anzeigen
\family default
, der die Datei in genau diesem primären Format anzeigt.
\end_layout

\begin_layout Standard
Dieses Format wird durch die verwendete Dokumentenklasse festgelegt.
 So ist es für die meisten Klassen \SpecialChar LaTeX
, für die DocBook-Klassen ist es aber
 DocBook.
 Denken Sie also daran, dass Ihnen die Vorschau lediglich das Aussehen in
 diesem Hauptformat anzeigt; wenn Sie sehen wollen, wie das Ergebnis in
 anderen Formaten aussieht, müssen Sie wie gewohnt die Konvertierung manuell
 durchführen.
\end_layout

\begin_layout Section

\lang english
The external template configuration file
\end_layout

\begin_layout Standard

\lang english
It is relatively easy to add custom external template definitions to \SpecialChar LyX
.
 However, be aware that doing this in a careless manner most probably 
\emph on
will
\emph default
 introduce an easily exploitable security hole.
 So before you do this, please read the discussion about security in 
\lang ngerman

\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Sicherheitshinweise"

\end_inset

.
\end_layout

\begin_layout Standard

\lang english
Having said that, we encourage you to submit any interesting templates that
 you create.
 
\end_layout

\begin_layout Standard

\lang english
The external templates are defined in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\family sans
\lang english
LyX
\family default
Dir/lib/external_templates
\end_layout

\end_inset

 file.
 You can place your own version in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
UserDir/external_templates
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard

\lang english
A typical template looks like this:
\end_layout

\begin_layout LyX-Code

\lang english
Template XFig
\end_layout

\begin_layout LyX-Code

\lang english
GuiName "XFig: $$AbsOrRelPathParent$$Basename"
\end_layout

\begin_layout LyX-Code

\lang english
HelpText
\end_layout

\begin_layout LyX-Code

\lang english
An XFig figure.
\end_layout

\begin_layout LyX-Code

\lang english
HelpTextEnd
\end_layout

\begin_layout LyX-Code

\lang english
InputFormat fig
\end_layout

\begin_layout LyX-Code

\lang english
FileFilter "*.fig"
\end_layout

\begin_layout LyX-Code

\lang english
AutomaticProduction true
\end_layout

\begin_layout LyX-Code

\lang english
Transform Rotate
\end_layout

\begin_layout LyX-Code

\lang english
Transform Resize
\end_layout

\begin_layout LyX-Code

\lang english
Format LaTeX
\end_layout

\begin_layout LyX-Code

\lang english
TransformCommand Rotate RotationLatexCommand
\end_layout

\begin_layout LyX-Code

\lang english
TransformCommand Resize ResizeLatexCommand
\end_layout

\begin_layout LyX-Code

\lang english
Product "$$RotateFront$$ResizeFront
\end_layout

\begin_layout LyX-Code

\lang english
         
\backslash

\backslash
input{$$AbsOrRelPathMaster$$Basename.pstex_t}
\end_layout

\begin_layout LyX-Code

\lang english
         $$ResizeBack$$RotateBack"
\end_layout

\begin_layout LyX-Code

\lang english
UpdateFormat pstex
\end_layout

\begin_layout LyX-Code

\lang english
UpdateResult "$$AbsPath$$Basename.pstex_t"
\end_layout

\begin_layout LyX-Code

\lang english
Requirement "graphicx"
\end_layout

\begin_layout LyX-Code

\lang english
ReferencedFile latex "$$AbsOrRelPathMaster$$Basename.pstex_t"
\end_layout

\begin_layout LyX-Code

\lang english
ReferencedFile latex "$$AbsPath$$Basename.eps"
\end_layout

\begin_layout LyX-Code

\lang english
ReferencedFile dvi "$$AbsPath$$Basename.eps"
\end_layout

\begin_layout LyX-Code

\lang english
FormatEnd
\end_layout

\begin_layout LyX-Code

\lang english
Format PDFLaTeX
\end_layout

\begin_layout LyX-Code

\lang english
TransformCommand Rotate RotationLatexCommand
\end_layout

\begin_layout LyX-Code

\lang english
TransformCommand Resize ResizeLatexCommand
\end_layout

\begin_layout LyX-Code

\lang english
Product "$$RotateFront$$ResizeFront
\end_layout

\begin_layout LyX-Code

\lang english
         
\backslash

\backslash
input{$$AbsOrRelPathMaster$$Basename.pdftex_t}
\end_layout

\begin_layout LyX-Code

\lang english
         $$ResizeBack$$RotateBack"
\end_layout

\begin_layout LyX-Code

\lang english
UpdateFormat pdftex
\end_layout

\begin_layout LyX-Code

\lang english
UpdateResult "$$AbsPath$$Basename.pdftex_t"
\end_layout

\begin_layout LyX-Code

\lang english
Requirement "graphicx"
\end_layout

\begin_layout LyX-Code

\lang english
ReferencedFile latex "$$AbsOrRelPathMaster$$Basename.pdftex_t"
\end_layout

\begin_layout LyX-Code

\lang english
ReferencedFile latex "$$AbsPath$$Basename.pdf"
\end_layout

\begin_layout LyX-Code

\lang english
FormatEnd
\end_layout

\begin_layout LyX-Code

\lang english
Format Ascii
\end_layout

\begin_layout LyX-Code

\lang english
Product "$$Contents(
\backslash
"$$AbsPath$$Basename.asc
\backslash
")"
\end_layout

\begin_layout LyX-Code

\lang english
UpdateFormat asciixfig
\end_layout

\begin_layout LyX-Code

\lang english
UpdateResult "$$AbsPath$$Basename.asc"
\end_layout

\begin_layout LyX-Code

\lang english
FormatEnd
\end_layout

\begin_layout LyX-Code

\lang english
Format DocBook
\end_layout

\begin_layout LyX-Code

\lang english
Product "<graphic fileref=
\backslash
"$$AbsOrRelPathMaster$$Basename.eps
\backslash
">
\end_layout

\begin_layout LyX-Code

\lang english
         </graphic>"
\end_layout

\begin_layout LyX-Code

\lang english
UpdateFormat eps
\end_layout

\begin_layout LyX-Code

\lang english
UpdateResult "$$AbsPath$$Basename.eps"
\end_layout

\begin_layout LyX-Code

\lang english
ReferencedFile docbook "$$AbsPath$$Basename.eps"
\end_layout

\begin_layout LyX-Code

\lang english
ReferencedFile docbook-xml "$$AbsPath$$Basename.eps"
\end_layout

\begin_layout LyX-Code

\lang english
FormatEnd
\end_layout

\begin_layout LyX-Code

\lang english
Product "[XFig: $$FName]"
\end_layout

\begin_layout LyX-Code

\lang english
FormatEnd
\end_layout

\begin_layout LyX-Code

\lang english
TemplateEnd
\end_layout

\begin_layout Standard

\lang english
As you can see, the template is enclosed in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Template
\end_layout

\end_inset

 \SpecialChar ldots
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
TemplateEnd
\end_layout

\end_inset

.
 It contains a header specifying some general settings and, for each supported
 primary document file format, a section 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Format
\end_layout

\end_inset

 \SpecialChar ldots
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
FormatEnd
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection

\lang english
The template header
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
AutomaticProduction
\begin_inset space ~
\end_inset

true|false
\end_layout

\end_inset

 Whether the file represented by the template must be generated by \SpecialChar LyX
.
 This command must occur exactly once.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
FileFilter
\begin_inset space ~
\end_inset

<pattern>
\end_layout

\end_inset

 A glob pattern that is used in the file dialog to filter out the desired
 files.
 If there is more than one possible file extension (e.
\begin_inset space \thinspace{}
\end_inset

g.
\begin_inset space \space{}
\end_inset

tgif has 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
.obj
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
.tgo
\end_layout

\end_inset

), use something like 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
"*.{obj,tgo}"
\end_layout

\end_inset

.
 This command must occur exactly once.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
GuiName
\begin_inset space ~
\end_inset

<guiname>
\end_layout

\end_inset

 The text that is displayed on the button.
 This command must occur exactly once.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
HelpText
\begin_inset space ~
\end_inset

<text>
\begin_inset space ~
\end_inset

HelpTextEnd
\end_layout

\end_inset

 The help text that is used in the External dialog.
 Provide enough information to explain to the user just what the template
 can provide him with.
 This command must occur exactly once.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
InputFormat
\begin_inset space ~
\end_inset

<format>
\end_layout

\end_inset

 The file format of the original file.
 This must be the name of a format that is known to \SpecialChar LyX
 (see 
\lang ngerman

\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Formate"

\end_inset

).

\lang english
 Use 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
*
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 if the template can handle original files of more than one format.
 \SpecialChar LyX
 will attempt to interrogate the file itself in order to deduce its format
 in this case.
 This command must occur exactly once.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Template
\begin_inset space ~
\end_inset

<id>
\end_layout

\end_inset

 A unique name for the template.
 It must not contain substitution macros (see below).
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Transform
\begin_inset space ~
\end_inset

Rotate|Resize|Clip|Extra
\end_layout

\end_inset

 This command specifies which transformations are supported by this template.
 It may occur zero or more times.
 This command enables the corresponding tabs in the external dialog.
 Each 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Transform
\end_layout

\end_inset

 command must have either a corresponding 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
TransformCommand
\end_layout

\end_inset

 or a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
TransformOption
\end_layout

\end_inset

 command in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Format
\end_layout

\end_inset

 section.
 Otherwise the transformation will not be supported by that format.
\end_layout

\begin_layout Subsection

\lang english
The Format section
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Format
\begin_inset space ~
\end_inset

LaTeX|PDFLaTeX|PlainText|DocBook|XHTML
\end_layout

\end_inset

 The primary document file format that this format definition is for.
 Not every template has a sensible representation in all document file formats.
 Please define nevertheless a 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Format
\end_layout

\end_inset

 section for all templates.
 Use a dummy text when no representation is available.
 Then you can at least see a reference to the external material in the exported
 document.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Option
\begin_inset space ~
\end_inset

<name>
\begin_inset space ~
\end_inset

<value>
\end_layout

\end_inset

 This command defines an additional macro 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$<name>
\end_layout

\end_inset

 for substitution in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Product
\end_layout

\end_inset

.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<value>
\end_layout

\end_inset

 itself may contain substitution macros.
 The advantage over using 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
<value>
\end_layout

\end_inset

 directly in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Product
\end_layout

\end_inset

 is that the substituted value of 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$<name>
\end_layout

\end_inset

 is sanitized so that it is a valid optional argument in the document format.
 This command may occur zero or more times.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Product
\begin_inset space ~
\end_inset

<text>
\end_layout

\end_inset

 The text that is inserted in the exported document.
 This is actually the most important command and can be quite complex.
 This command must occur exactly once.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Preamble
\begin_inset space ~
\end_inset

<name>
\end_layout

\end_inset

 This command specifies a preamble snippet that will be included in the
 \SpecialChar LaTeX
 preamble.
 It has to be defined using 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
PreambleDef
\end_layout

\end_inset

 \SpecialChar ldots
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
PreambleDefEnd
\end_layout

\end_inset

.
 This command may occur zero or more times.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
ReferencedFile
\begin_inset space ~
\end_inset

<format>
\begin_inset space ~
\end_inset

<filename>
\end_layout

\end_inset

 This command denotes files that are created by the conversion process and
 are needed for a particular export format.
 If the filename is relative, it is interpreted relative to the master document.
 This command may be given zero or more times.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Requirement
\begin_inset space ~
\end_inset

<package>
\end_layout

\end_inset

 The name of a required \SpecialChar LaTeX
 package.
 The package is included via 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english

\backslash
usepackage{}
\end_layout

\end_inset

 in the \SpecialChar LaTeX
 preamble.
 This command may occur zero or more times.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
TransformCommand
\begin_inset space ~
\end_inset

Rotate
\begin_inset space ~
\end_inset

RotationLatexCommand
\end_layout

\end_inset

 This command specifies that the built in \SpecialChar LaTeX
 command should be used for rotation.
 This command may occur once or not at all.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
TransformCommand
\begin_inset space ~
\end_inset

Resize
\begin_inset space ~
\end_inset

ResizeLatexCommand
\end_layout

\end_inset

 This command specifies that the built in \SpecialChar LaTeX
 command should be used for resizing.
 This command may occur once or not at all.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
TransformOption
\begin_inset space ~
\end_inset

Rotate
\begin_inset space ~
\end_inset

RotationLatexOption
\end_layout

\end_inset

 This command specifies that rotation is done via an optional argument.
 This command may occur once or not at all.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
TransformOption
\begin_inset space ~
\end_inset

Resize
\begin_inset space ~
\end_inset

ResizeLatexOption
\end_layout

\end_inset

 This command specifies that resizing is done via an optional argument.
 This command may occur once or not at all.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
TransformOption
\begin_inset space ~
\end_inset

Clip
\begin_inset space ~
\end_inset

ClipLatexOption
\end_layout

\end_inset

 This command specifies that clipping is done via an optional argument.
 This command may occur once or not at all.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
TransformOption
\begin_inset space ~
\end_inset

Extra
\begin_inset space ~
\end_inset

ExtraLatexOption
\end_layout

\end_inset

 This command specifies that an extra optional argument is used.
 This command may occur once or not at all.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
UpdateFormat
\begin_inset space ~
\end_inset

<format>
\end_layout

\end_inset

 The file format of the converted file.
 This must be the name of a format that is known to \SpecialChar LyX
 (see the 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout

\lang english
Tools\SpecialChar menuseparator
Preferences\SpecialChar menuseparator
File Handling\SpecialChar menuseparator
File Format
\end_layout

\end_inset

 dialog).
 This command must occur exactly once.
 If the resulting file format is PDF, you need to specify the format 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
pdf6
\end_layout

\end_inset

.
 This is the PDF format used for including graphics.
 The other defined PDF formats are for document export.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
UpdateResult
\begin_inset space ~
\end_inset

<filename>
\end_layout

\end_inset

 The file name of the converted file.
 The file name must be absolute.
 This command must occur exactly once.
\end_layout

\begin_layout Subsection

\lang english
Preamble definitions
\end_layout

\begin_layout Standard

\lang english
The external template configuration file may contain additional preamble
 definitions enclosed by 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
PreambleDef
\end_layout

\end_inset

 \SpecialChar ldots
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
PreambleDefEnd
\end_layout

\end_inset

.
 They can be used by the templates in the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Format
\end_layout

\end_inset

 section.
\end_layout

\begin_layout Section
Der Ersetzungsmechanismus
\end_layout

\begin_layout Standard
Wenn über die externe Einfügung ein externes Programm gestartet wird, geschieht
 dies anhand eines Befehls, der in der Vorlage festgelegt wurde.
 Ein solcher Befehl kann diverse Makros enthalten, die vor dem eigentlichen
 Aufruf ausgewertet werden.
 Die Ausführung erfolgt dabei immer in demjenigen Verzeichnis, das auch
 das \SpecialChar LyX
-Dokument enthält.
\end_layout

\begin_layout Standard

\lang english
Also, whenever external material is to be displayed, the name will be produced
 by the substitution mechanism, and most other commands in the template
 definition support substitution as well.
\end_layout

\begin_layout Standard
Hier finden Sie eine Liste dieser Makros:
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$AbsOrRelPathMaster
\end_layout

\end_inset

 The file path, absolute or relative to the master \SpecialChar LyX
 document.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$AbsOrRelPathParent
\end_layout

\end_inset

 The file path, absolute or relative to the \SpecialChar LyX
 document.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$AbsPath
\end_layout

\end_inset

 The absolute file path.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$Basename
\end_layout

\end_inset

 The filename without path and without the extension.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$Contents(
\begin_inset Quotes eld
\end_inset

filename.ext
\begin_inset Quotes erd
\end_inset

)
\end_layout

\end_inset

 This macro will expand to the contents of the file with the name 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
filename.ext
\end_layout

\end_inset

.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$Extension
\end_layout

\end_inset

 The file extension (including the dot).
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$pngOrjpg
\end_layout

\end_inset

 This will be the string 
\begin_inset Quotes eld
\end_inset

jpg
\begin_inset Quotes erd
\end_inset

 if the file is in JPEG format, otherwise it will be the string 
\begin_inset Quotes eld
\end_inset

png
\begin_inset Quotes erd
\end_inset

.
 This is useful to avoid uneeded conversions for output formats that support
 both PNG and JPEG fomats.
 The predefined RasterImage template uses this macro for the pdf\SpecialChar TeX
 output
 format.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$FName
\end_layout

\end_inset

 The filename of the file specified in the external material dialog.
 This is either an absolute name, or it is relative to the \SpecialChar LyX
 document.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$FPath
\end_layout

\end_inset

 The path part of 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$FName
\end_layout

\end_inset

 (absolute name or relative to the \SpecialChar LyX
 document).
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$RelPathMaster
\end_layout

\end_inset

 The file path, relative to the master \SpecialChar LyX
 document.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$RelPathParent
\end_layout

\end_inset

 The file path, relative to the \SpecialChar LyX
 document.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$Sysdir
\end_layout

\end_inset

 This macro will expand to the absolute path of the system directory.
 This is typically used to point to the various helper scripts that are
 bundled with \SpecialChar LyX
.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$Tempname
\end_layout

\end_inset

 A name and full path to a temporary file which will be automatically deleted
 whenever the containing document is closed, or the external material insertion
 deleted.
\end_layout

\begin_layout Standard

\lang english
All path macros contain a trailing directory separator, so you can construct
 e.
\begin_inset space \thinspace{}
\end_inset

g.
\begin_inset space \space{}
\end_inset

the absolute filename with 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$AbsPath$$Basename$$Extension
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard

\lang english
The macros above are substituted in all commands unless otherwise noted.
 The command 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Product
\end_layout

\end_inset

 supports additionally the following substitutions if they are enabled by
 the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Transform
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
TransformCommand
\end_layout

\end_inset

 commands:
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$ResizeFront
\end_layout

\end_inset

 The front part of the resize command.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$ResizeBack
\end_layout

\end_inset

 The back part of the resize command.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$RotateFront
\end_layout

\end_inset

 The front part of the rotation command.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$RotateBack
\end_layout

\end_inset

 The back part of the rotation command.
\end_layout

\begin_layout Standard

\lang english
The value string of the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Option
\end_layout

\end_inset

 command supports additionally the following substitutions if they are enabled
 by the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
Transform
\end_layout

\end_inset

 and 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
TransformOption
\end_layout

\end_inset

 commands:
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$Clip
\end_layout

\end_inset

 The clip option.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$Extra
\end_layout

\end_inset

 The extra option.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$Resize
\end_layout

\end_inset

 The resize option.
\end_layout

\begin_layout Description

\lang english
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$Rotate
\end_layout

\end_inset

 The rotation option.
\end_layout

\begin_layout Standard

\lang english
You may ask why there are so many path macros.
 There are mainly two reasons:
\end_layout

\begin_layout Enumerate

\lang english
Relative and absolute file names should remain relative or absolute, respectivel
y.
 Users may have reasons to prefer either form.
 Relative names are useful for portable documents that should work on different
 machines, for example.
 Absolute names may be required by some programs.
\end_layout

\begin_layout Enumerate

\lang english
\SpecialChar LaTeX
 treats relative file names differently than \SpecialChar LyX
 and other programs in nested
 included files.
 For \SpecialChar LyX
, a relative file name is always relative to the document that contains
 the file name.
 For \SpecialChar LaTeX
, it is always relative to the master document.
 These two definitions are identical if you have only one document, but
 differ if you have a master document that includes part documents.
 That means that relative filenames must be transformed when presented to
 \SpecialChar LaTeX
.
 Fortunately \SpecialChar LyX
 does this automatically for you if you choose the right macros.
\end_layout

\begin_layout Standard

\lang english
So which path macro should be used in new template definitions? The rule
 is not difficult:
\end_layout

\begin_layout Itemize

\lang english
Use 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$AbsPath
\end_layout

\end_inset

 if an absolute path is required.
\end_layout

\begin_layout Itemize

\lang english
Use 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$AbsOrRelPathMaster
\end_layout

\end_inset

 if the substituted string is some kind of \SpecialChar LaTeX
 input.
\end_layout

\begin_layout Itemize

\lang english
Else use 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
$$AbsOrRelPathParent
\end_layout

\end_inset

 in order to preserve the user's choice.
\end_layout

\begin_layout Standard

\lang english
There are special cases where this rule does not work and e.
\begin_inset space \thinspace{}
\end_inset

g.
\begin_inset space \space{}
\end_inset

relative names are needed, but normally it will work just fine.
 One example for such a case is the command 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
ReferencedFile latex "$$AbsOrRelPathMaster$$Basename.pstex_t"
\end_layout

\end_inset

 in the XFig template above: We can't use the absolute name because the
 copier for 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
.pstex_t
\end_layout

\end_inset

 files needs the relative name in order to rewrite the file content.
\end_layout

\begin_layout Section
Sicherheitshinweise
\begin_inset CommandInset label
LatexCommand label
name "sec:Sicherheitshinweise"

\end_inset


\end_layout

\begin_layout Standard

\lang english
The external material feature interfaces with a lot of external programs
 and does so automatically, so we have to consider the security implications
 of this.
 In particular, since you have the option of including your own filenames
 and/or parameter strings and those are expanded into a command, it seems
 that it would be possible to create a malicious document which executes
 arbitrary commands when a user views or prints the document.
 This is something we definitely want to avoid.
\end_layout

\begin_layout Standard

\lang english
However, since the external program commands are specified in the template
 configuration file only, there are no security issues if \SpecialChar LyX
 is properly configure
d with safe templates only.
 This is so because the external programs are invoked with the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
execvp
\end_layout

\end_inset

-system call rather than the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
system
\end_layout

\end_inset

 system-call, so it's not possible to execute arbitrary commands from the
 filename or parameter section via the shell.
\end_layout

\begin_layout Standard

\lang english
This also implies that you are restricted in what command strings you can
 use in the external material templates.
 In particular, pipes and redirection are not readily available.
 This has to be so if \SpecialChar LyX
 should remain safe.
 If you want to use some of the shell features, you should write a safe
 script to do this in a controlled manner, and then invoke the script from
 the command string.
 
\end_layout

\begin_layout Standard

\lang english
It is possible to design a template that interacts directly with the shell,
 but since this would allow a malicious user to execute arbitrary commands
 by writing clever filenames and/or parameters, we generally recommend that
 you only use safe scripts that work with the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\lang english
execvp
\end_layout

\end_inset

 system call in a controlled manner.
 Of course, for use in a controlled environment, it can be tempting to just
 fall back to use ordinary shell scripts.
 If you do so, be aware that you 
\emph on
will
\emph default
 provide an easily exploitable security hole in your system.
 Of course it stands to reason that such unsafe templates will never be
 included in the standard \SpecialChar LyX
 distribution, although we do encourage people
 to submit new templates in the open source tradition.
 But \SpecialChar LyX
 as shipped from the official distribution channels will never have
 unsafe templates.
\end_layout

\begin_layout Standard

\lang english
Including external material provides a lot of power, and you have to be
 careful not to introduce security hazards with this power.
 A subtle error in a single line in an innocent looking script can open
 the door to huge security problems.
 So if you do not fully understand the issues, we recommend that you consult
 a knowledgeable security professional or the \SpecialChar LyX
 development team if you have
 any questions about whether a given template is safe or not.
 And do this before you use it in an uncontrolled environment.
\end_layout

\begin_layout Chapter
\start_of_appendix
Liste der Funktionen für die Verwendung in Layout-Dateien
\begin_inset CommandInset label
LatexCommand label
name "chap:Liste-von-Funktionen"

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="8">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
accents
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
booktabs
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
feyn
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
listings
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
natbib
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rotfloat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tfrupee
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wasysym
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
amsbsy
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
calc
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
fixltx2e
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
longtable
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
nomencl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rsphrase
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tipa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wrapfig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
amscd
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CJK
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
float
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lyxskak
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pdfcolmk
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
setspace
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tipx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
xargs
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
amsmath
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
color
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
framed
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
makeidx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pdfpages
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
shapepar
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tone
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
xcolor
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
amssymb
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
covington
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
graphicx
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
marvosym
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pifont
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
slashed
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
txfonts
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
xy
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
amstext
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
csquotes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hhline
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mathdesign
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pmboxdraw
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
soul
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ulem
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yhmath
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
amsthm
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dvipost
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hyperref
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mathdots
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
polyglossia
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
splitidx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
undertilde
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
array
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
endnotes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ifsym
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mathrsfs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
prettyref
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
subfig
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
units
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ascii
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
enumitem
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ifthen
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mhchem
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pxfonts
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
subscript
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
url
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bbding
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
esint
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
jurabib
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
multicol
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
refstyle
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
textcomp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
varioref
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
fancybox
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
latexsym
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
multirow
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rotating
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
textgreek
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
verbatim
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Chapter
Namen von verfügbaren Farben für die Verwendung in Layout-Dateien
\begin_inset CommandInset label
LatexCommand label
name "chap:Namen-von-Farben"

\end_inset


\end_layout

\begin_layout Standard
Die hier aufgelisteten Farben sind die Standardfarben und die, die man in
 den \SpecialChar LyX
-Voreinstellungen festlegen kann.
\end_layout

\begin_layout Description

\lang english
none
\lang ngerman
 Keine spezielle Farbe – entfernt Farbe oder setzt Farbe auf Voreinstellung
\end_layout

\begin_layout Description

\lang english
black
\end_layout

\begin_layout Description

\lang english
white
\end_layout

\begin_layout Description

\lang english
red
\end_layout

\begin_layout Description

\lang english
green
\end_layout

\begin_layout Description

\lang english
blue
\end_layout

\begin_layout Description

\lang english
cyan
\end_layout

\begin_layout Description

\lang english
magenta
\end_layout

\begin_layout Description

\lang english
yellow
\end_layout

\begin_layout Description

\lang english
added_space Added space marker color
\end_layout

\begin_layout Description

\lang english
addedtext Added text color
\end_layout

\begin_layout Description

\lang english
appendix Appendix marker color
\end_layout

\begin_layout Description

\lang english
background
\lang ngerman
 Hintergrundfarbe
\end_layout

\begin_layout Description

\lang english
bottomarea Bottom area color
\end_layout

\begin_layout Description

\lang english
branchlabel Label color for branches
\end_layout

\begin_layout Description

\lang english
buttonbg Color used for bottom background
\end_layout

\begin_layout Description

\lang english
buttonhoverbg Color used for button background under focus
\end_layout

\begin_layout Description

\lang english
buttonframe Color for inset button frames
\end_layout

\begin_layout Description

\lang english
changebar Changebar color
\end_layout

\begin_layout Description

\lang english
changedtextauthor1
\lang ngerman
 Geänderter Text des 1.
\begin_inset space \space{}
\end_inset

Autors
\end_layout

\begin_layout Description

\lang english
changedtextauthor2
\lang ngerman
 Geänderter Text des 2.
\begin_inset space \space{}
\end_inset

Autors
\end_layout

\begin_layout Description

\lang english
changedtextauthor3
\lang ngerman
 Geänderter Text des 3.
\begin_inset space \space{}
\end_inset

Autors
\end_layout

\begin_layout Description

\lang english
changedtextauthor4
\lang ngerman
 Geänderter Text des 4.
\begin_inset space \space{}
\end_inset

Autors
\end_layout

\begin_layout Description

\lang english
changedtextauthor5
\lang ngerman
 Geänderter Text des 5.
\begin_inset space \space{}
\end_inset

Autors
\end_layout

\begin_layout Description

\lang english
collapsable_inset_frame Collapsable insets framecolor
\end_layout

\begin_layout Description

\lang english
collapsable_inset_text Collapsable insets text color
\end_layout

\begin_layout Description

\lang english
command Text color for command insets
\end_layout

\begin_layout Description

\lang english
commandbg Background color for command insets
\end_layout

\begin_layout Description

\lang english
commandframe Frame color for command insets
\end_layout

\begin_layout Description

\lang english
comment color for comments
\end_layout

\begin_layout Description

\lang english
commentbg Background color of comments
\end_layout

\begin_layout Description

\lang english
cursor
\lang ngerman
 Cursorfarbe
\end_layout

\begin_layout Description

\lang english
deletedtext Deleted text color
\end_layout

\begin_layout Description

\lang english
deletedtextmodifier Deleted text modifying color
\end_layout

\begin_layout Description

\lang english
depthbar Color for the depth bars in the margin
\end_layout

\begin_layout Description

\lang english
eolmarker End of line marker color
\end_layout

\begin_layout Description

\lang english
error Color of the \SpecialChar LaTeX
 error box
\end_layout

\begin_layout Description

\lang english
footlabel Label color for footnotes
\end_layout

\begin_layout Description

\lang english
graphicsbg Graphics inset background color
\end_layout

\begin_layout Description

\lang english
greyedout Label color for greyedout insets
\end_layout

\begin_layout Description

\lang english
greyedoutbg Background color of greyedout inset
\end_layout

\begin_layout Description

\lang english
greyedouttext Color for greyedout inset text
\end_layout

\begin_layout Description

\lang english
indexlabel Label color for index insets
\end_layout

\begin_layout Description

\lang english
ignore The color is ignored
\end_layout

\begin_layout Description

\lang english
inherit The color is inherited
\end_layout

\begin_layout Description

\lang english
inlinecompletion Inline completion color
\end_layout

\begin_layout Description

\lang english
insetbg Inset marker background color
\end_layout

\begin_layout Description

\lang english
insetframe Inset marker frame color
\end_layout

\begin_layout Description

\lang english
language Color for marking foreign language words
\end_layout

\begin_layout Description

\lang english
latex Text color in \SpecialChar LaTeX
 mode
\end_layout

\begin_layout Description

\lang english
listingsbg Background color of listings inset
\end_layout

\begin_layout Description

\lang english
marginlabel Label color for margin notes
\end_layout

\begin_layout Description

\lang english
math Math inset text color
\end_layout

\begin_layout Description

\lang english
mathbg Math inset background color
\end_layout

\begin_layout Description

\lang english
mathcorners Math inset frame color not under focus
\end_layout

\begin_layout Description

\lang english
mathframe Math inset frame color under focus
\end_layout

\begin_layout Description

\lang english
mathline Math line color
\end_layout

\begin_layout Description

\lang english
mathmacrobg Macro math inset background color
\end_layout

\begin_layout Description

\lang english
mathmacroblend Macro math blended color
\end_layout

\begin_layout Description

\lang english
mathmacroframe Macro math frame color
\end_layout

\begin_layout Description

\lang english
mathmacrohoverbg Macro math inset background color hovered
\end_layout

\begin_layout Description

\lang english
mathmacrolabel Macro math label color
\end_layout

\begin_layout Description

\lang english
mathmacronewarg Macro template color for new parameters
\end_layout

\begin_layout Description

\lang english
mathmacrooldarg Macro template color for old parameters
\end_layout

\begin_layout Description

\lang english
newpage New page color
\end_layout

\begin_layout Description

\lang english
nonunique_inlinecompletion Inline completion color for the non-unique part
\end_layout

\begin_layout Description

\lang english
notebg Background color of notes
\end_layout

\begin_layout Description

\lang english
notelabel Label color for notes
\end_layout

\begin_layout Description

\lang english
pagebreak Page break/line break color
\end_layout

\begin_layout Description

\lang english
paragraphmarker Color used for the pilcrow sign to mark the end of a paragraph
\end_layout

\begin_layout Description

\lang english
phantomtext Text color for phantom insets
\end_layout

\begin_layout Description

\lang english
preview The color used for previews
\end_layout

\begin_layout Description

\lang english
previewframe Preview frame color
\end_layout

\begin_layout Description

\lang english
regexpframe Color for regexp frame
\end_layout

\begin_layout Description

\lang english
selection
\lang ngerman
 Hintergrundfarbe des ausgewählten Texts
\end_layout

\begin_layout Description

\lang english
selectiontext
\lang ngerman
 Vordergrundfarbe des ausgewählten Texts
\end_layout

\begin_layout Description

\lang english
shadedbg Background color of shaded box
\end_layout

\begin_layout Description

\lang english
special Special chars text color
\end_layout

\begin_layout Description

\lang english
tabularline Table line color
\end_layout

\begin_layout Description

\lang english
tabularonoffline Table line color
\end_layout

\begin_layout Description

\lang english
urllabel Label color for URL insets
\end_layout

\begin_layout Description

\lang english
urltext Color for URL inset text
\end_layout

\end_body
\end_document

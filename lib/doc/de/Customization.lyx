#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin /systemlyxdir/doc/de/
\textclass scrbook
\begin_preamble
% Präambel nicht verändern!!!
%
% Die Präambel stellt sicher, dass das Benutzerhandbuch korrekt
% in die Formate pdf, ps und dvi exportiert werden kann.
% Wenn Probleme beim Exportieren auftreten, können Sie sich
% an das LyX-Dokumentationsteam wenden.
% EMail: lyx-docs@lists.lyx.org

% Setzt den Link für Spruenge zu Gleitabbildungen
% auf den Anfang des Gelitobjekts und nicht aufs Ende
\usepackage[figure]{hypcap}

% Die Seiten des Inhaltsverzeichnisses werden römisch numeriert,
% ein PDF-Lesezeichen für das Inhaltsverzeichnis wird hinzugefügt
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \frontmatter
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
  \mainmatter }

\@ifpackageloaded{babel}{
 % Linkfläche für Querverweise vergrößern und automatisch benennen,
 \AtBeginDocument{\renewcommand{\ref}[1]{\mbox{\autoref{#1}}}}
 \addto\extrasngerman{%
  \renewcommand*{\equationautorefname}[1]{}%
  \renewcommand{\sectionautorefname}{Kap.\negthinspace}%
  \renewcommand{\subsectionautorefname}{Kap.\negthinspace}%
  \renewcommand{\subsubsectionautorefname}{Kap.\negthinspace}%
 }
}{}

% Improve line breaking
\tolerance 1414
\hbadness 1414
\emergencystretch 1.5em
\hfuzz 0.3pt
\end_preamble
\options bibliography=totoc,index=totoc,BCOR7.5mm,titlepage,captions=tableheading
\use_default_options false
\begin_modules
logicalmkup
\end_modules
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "FreeSerif"
\font_sans "lmss" "FreeSans"
\font_typewriter "lmtt" "FreeMono"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format pdf2
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "LyX-Anpassung: Möglichkeiten für fortgeschrittene Benutzer"
\pdf_author "LyX Team, deutsche Übersetzung: Peter Sütterlin, Leif Albers und Hartmut Haase"
\pdf_subject "LyX-Dokumentation, Anpassung"
\pdf_keywords "LyX, Dokumentation"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "linkcolor=black, citecolor=black, urlcolor=blue, filecolor=blue,  pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\notefontcolor #0000ff
\branch OutDated
\selected 0
\filename_suffix 0
\color #faf0e6
\end_branch
\index Stichwortverzeichnis
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 1
\math_indentation default
\math_numbering_side default
\quotes_style german
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle headings
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
\SpecialChar LyX
-Anpassung:
\begin_inset Newline newline
\end_inset

Möglichkeiten für fortgeschrittene Benutzer
\end_layout

\begin_layout Author
vom \SpecialChar LyX
-Team
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Übersetzung: 
\noun on
Peter Sütterlin
\noun default
, 
\noun on
Leif Albers
\noun default
 und 
\noun on
Hartmut
\noun default
 
\noun on
Haase
\noun default
 (
\noun on
HHa
\noun default
, bis März 2010).
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Version 2.3.x
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Einleitung
\end_layout

\begin_layout Standard
In diesem Teil der Dokumentation wird beschrieben, welche Möglichkeiten
 \SpecialChar LyX
 bietet, um es den eigenen Wünschen anzupassen.
 Es werden Dinge wie Tastaturkürzel, Vorschau am Bildschirm, Optionen zum
 Drucken, das Senden von Befehlen an \SpecialChar LyX
 durch den \SpecialChar LyX
-Server, Internationalisierung,
 Installation neuer \SpecialChar LaTeX
-Klassen und \SpecialChar LyX
-Layouts usw.
\begin_inset space \space{}
\end_inset

behandelt.
 Es kann hier nicht alles beschrieben werden, das an \SpecialChar LyX
 individuell eingestellt
 und verändert werden kann — die Entwickler fügen Neuerungen schneller ein,
 als wir sie dokumentieren können — doch werden die grundlegenden Fähigkeiten
 von \SpecialChar LyX
 dokumentiert sowie für einige der etwas obskuren Hinweise gegeben.
\end_layout

\begin_layout Chapter
Die Konfigurationsdateien von \SpecialChar LyX

\end_layout

\begin_layout Standard
Dieses Kapitel soll Ihnen dabei helfen, sich mit den Konfigurationsdateien
 von \SpecialChar LyX
 vertraut zu machen.
 Bevor Sie jedoch weiterlesen, sollten Sie herausfinden, wo sich das System-
 und das Benutzerverzeichnis von \SpecialChar LyX
 auf Ihrem Rechner befindet.
 Sie erfahren dies über den Menüpunkt 
\family sans
Hilfe\SpecialChar menuseparator
Über
\begin_inset space ~
\end_inset

LyX
\family default
.
 Im Systemverzeichnis speichert \SpecialChar LyX
 alle systemweiten Konfigurationsdateien;
 wir werden es im weiteren 
\family sans
LyX
\family typewriter
Dir
\family default
 nennen.
 Im Benutzerverzeichnis können Sie an Ihre Bedürfnisse angepasste Versionen
 ablegen; wir werden dieses im weiteren 
\family sans
UserDir
\family default
 nennen.
\end_layout

\begin_layout Section
Was befindet sich in 
\family sans
LyX
\family typewriter
Dir
\family default
?
\end_layout

\begin_layout Standard
Das Verzeichnis 
\family sans
LyX
\family typewriter
Dir
\family default
 sowie seine Unterverzeichnisse enthalten eine Anzahl Dateien, mit denen
 das Verhalten von \SpecialChar LyX
 beeinflusst werden kann.
 Diese Dateien können direkt von \SpecialChar LyX
 aus über den Dialog 
\family sans
Werkzeuge\SpecialChar menuseparator
Einstellungen
\family default
\SpecialChar ldots
 gelesen und geändert werden.
 Fast alles, was Sie möglicherweise an \SpecialChar LyX
 ändern wollen, können Sie hier einstelle
n.
 Darüber hinaus können auch viele interne Dinge in \SpecialChar LyX
 angepasst werden, indem
 man Dateien in 
\family sans
LyX
\family typewriter
Dir
\family default
 verändert.
 Die Dateien können in verschiedene Kategorien unterteilt werden, die in
 den folgenden Unterabschnitten behandelt werden.
\end_layout

\begin_layout Subsection
Automatisch erzeugte Dateien
\end_layout

\begin_layout Standard
Diese Dateien, die sich im 
\family sans
UserDir
\family default
 finden, werden automatisch bei der Konfiguration von \SpecialChar LyX
 erzeugt.
 Sie enthalten verschiedene Standardwerte, die durch Untersuchung des Systems
 ermittelt werden.
 Normalerweise sollte man sie nicht verändern, da sie jederzeit von \SpecialChar LyX
 überschrieb
en werden können.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
lyxrc.defaults
\family default
\series default
 enthält Standardwerte für diverse Befehle.
 Einstellungen, die Ihnen nicht zusagen, können einfach über 
\family sans
Werkzeuge\SpecialChar menuseparator
Einstellungen
\family default
\SpecialChar ldots
 verändert werden.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
packages.lst
\family default
\series default
 enthält eine Auf\SpecialChar ligaturebreak
listung aller \SpecialChar LaTeX
-Pakete, die von \SpecialChar LyX
 erkannt wurden.
 Derzeit wird diese Liste von \SpecialChar LyX
 selber nicht benutzt, jedoch ist die Information,
 zusammen mit einigem anderen, über den Menüpunkt 
\family sans
Hilfe\SpecialChar menuseparator
LaTeX
\begin_inset space \space{}
\end_inset

Konfiguration
\family default
 zugänglich.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
textclass.lst
\family default
\series default
 ist eine Liste mit den im Verzeichnis 
\family typewriter
layout
\family default
 gefundenen Textklassen, zusammen mit den entsprechenden \SpecialChar LaTeX
-Dokumentklassen
 und einer kurzen Beschreibung.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
lyxmodules.lst
\end_layout

\end_inset

 ist eine Liste mit den im Verzeichnis 
\family typewriter
layout
\family default
 gefundenen Modulen.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
*Files.lst
\end_layout

\end_inset

 sind Listen von verschiedenen \SpecialChar LaTeX
-bezogenen Dateien, die auf Ihrem System
 gefunden wurden.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
doc/La
\family sans
TeX
\family typewriter
Config.lyx
\family default
 wird bei der Konfiguration aus der Datei 
\family typewriter
La
\family sans
TeX
\family typewriter
Config.lyx.in
\family default
 erzeugt.
 Das Dokument enthält Informationen über Ihre \SpecialChar LaTeX
-Konfiguration (bspw.
 darüber, welche Pakete Sie installiert haben).
\end_layout

\begin_layout Subsection
Verzeichnisse
\end_layout

\begin_layout Standard
Diese Verzeichnisse finden sich sowohl in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyXDir
\end_layout

\end_inset

 als auch in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UserDir
\end_layout

\end_inset

.
 Wenn eine bestimme Datei beiden Verzeichnissen gefunden wird, wird jene
 in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UserDir
\end_layout

\end_inset

 verwendet.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
bind/
\family default
\series default
 Dieses Verzeichnis enthält Dateien mit der Endung 
\family typewriter
.bind
\family default
.
 In ihnen werden die Tastenkürzel festgelegt, die in \SpecialChar LyX
 verwendet werden können.
 Falls eine Datei 
\family typewriter
$LANG_xxx.bind
\family default
 mit einer an die internationalisierte Version von \SpecialChar LyX
 angepassten Tastenbelegung
 existiert, wird diese bevorzugt geladen.
 Näheres dazu finden Sie in 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Internationales-LyX"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
citeengines/
\end_layout

\end_inset

 enthält Dateien mit der Endung 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.citeengine
\end_layout

\end_inset

, in welchen die verschiedenen Literaturverweis-Methoden (Natbib, Biblatex
 usw.) spezifiziert werden.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Cite-Engine-Dateien"
plural "false"
caps "false"
noprefix "false"

\end_inset

 für weitere Informationen.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
clipart/
\family default
\series default
 Hier sind einige Grafiken gespeichert, die Sie in Ihre Dokumente einbinden
 können.
 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
doc/
\family default
\series default
 enthält die Dateien der \SpecialChar LyX
-Dokumentation (einschließlich jener, die Sie gerade
 lesen).
 Eine Besonderheit stellt die bereits beschriebene Datei 
\family typewriter
La
\family sans
TeX
\family typewriter
Config.lyx
\family default
 dar, da Sie bei der Konfiguration von \SpecialChar LyX
 jeweils neu erzeugt wird.
 Die Übersetzungen der Dokumente (falls vorhanden) findet sich in Unterverzeichn
issen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
doc/xx
\end_layout

\end_inset

, wobei 
\begin_inset Quotes gld
\end_inset

xx
\begin_inset Quotes grd
\end_inset

 jeweils des ISO-Sprachcode ist (für Deutsch: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
de
\end_layout

\end_inset

).
 Sie werden in der jeweiligen Lokalisierung automatisch bevorzugt.
 Siehe dazu 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Internationales-LyX"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
examples/
\family default
\series default
 enthält Beispieldateien, die erläutern, wie Sie die unterschiedlichen Möglichke
iten von \SpecialChar LyX
 nutzen können.
 Verwenden Sie die Schaltfläche 
\family sans
Beispiele
\family default
 im Dateiauswahlmenü, um in dieses Verzeichnis zu gelangen.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
images/
\family default
 enthält Bilddateien, die im Dialog 
\family sans
Do\SpecialChar softhyphen
ku\SpecialChar softhyphen
ment
\family default
\SpecialChar menuseparator

\family sans
Einstellungen
\family default
 verwendet werden.
 Außerdem finden Sie hier die unterschiedlichen Symbole für die Werkzeugleisten
 sowie das Bild für den Startbildschirm.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
kbd/
\family default
\series default
 Hier sind die Definitionsdateien für die Tastaturbelegung gespeichert.
 Näheres dazu finden Sie im 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Internationale-Tastaturtabellen"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
layouts/
\family default
\series default
 Hier werden die in 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Installieren-neuer-Textklassen"

\end_inset

 beschriebenen Layoutdateien für die unterschiedlichen Dokumentenklassen
 sowie die Module gespeichert.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
lyx2lyx
\family default
/ enthält Python-Skripte, die für die Konvertierung zwischen verschiedenen
 \SpecialChar LyX

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"=
\end_layout

\end_inset

Versionen benötigt werden.
 Diese können auch von der Kommandozeile aus aufgerufen werden, etwa, wenn
 Sie mehrere Dateien gebündelt konvertieren wollen.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
scripts
\family default
/ Hier sind einige Python-Skripte abgelegt, die \SpecialChar LyX
 für bestimmte interne Operation
en benötigt.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
templates
\family default
/ enthält die Vorlagendateien, die Ihnen bei 
\family sans
Datei\SpecialChar menuseparator
Neu
\begin_inset space \space{}
\end_inset

von
\begin_inset space \space{}
\end_inset

Vorlage
\family default
 präsentiert werden, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Vorlagen-erstellen"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
ui/
\family default
 Hier finden Sie Dateien mit der Endung 
\family typewriter
.ui
\family default
, in denen die Benutzerschnittstelle von \SpecialChar LyX
 genauer definiert ist, insbesondere,
 welche Einträge in welchen Menüs und Werkzeugleisten zu finden sind.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
xtemplates/
\end_layout

\end_inset

 enthält Dateien mit der Endung 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.xtemplate
\end_layout

\end_inset

, in welchen Vorlagen für die Einfügung von 
\begin_inset Quotes gld
\end_inset

externem Material
\begin_inset Quotes grd
\end_inset

 in \SpecialChar LyX
-Dokumente definiert werden; siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Externes-Material-einfügen"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Dateien, die Sie nicht verändern sollten
\end_layout

\begin_layout Standard
Die folgenden Dateien werden intern von \SpecialChar LyX
 verwendet.
 Sie sollten im Normalfall nur von den Entwicklern editiert werden.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
CREDITS
\family default
\series default
 Diese Datei enthält eine Liste der Entwickler.
 Ihr Inhalt wird über die Menüauswahl 
\family sans
Hilfe\SpecialChar menuseparator
Über
\begin_inset space \space{}
\end_inset

LyX
\family default
 angezeigt.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
chkconfig.ltx
\family default
\series default
 ist ein \SpecialChar LaTeX
-Skript, das bei der Konfiguration verwendet wird.
 Starten Sie es nie direkt.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\series medium
configure.py
\family default
\series default
 ist ein Python-Skript, das zur Neukonfiguration von \SpecialChar LyX
 verwendet wird.
 Es erzeugt die Konfigurationsdateien in dem Verzeichnis, von dem aus es
 aufgerufen wurde.
\end_layout

\begin_layout Subsection
Andere Dateien
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
encodings
\family default
 beschreibt, wie die unterschiedlichen Zeichenkodierungen in Unicode dargestellt
 werden.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
languages
\family default
 Eine Liste mit allen derzeit von \SpecialChar LyX
 unterstützten Sprachen.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
latexfonts
\end_layout

\end_inset

 enthält Informationen über die unterstützen \SpecialChar LaTeX
-Schriften.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
layouttranslations
\end_layout

\end_inset

 enthält Übersetzungen für lokalisierbare Absatzstile (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:I18n"

\end_inset

).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
unicodesymbols
\end_layout

\end_inset

 enthält Informationen über Unicode-kodierte Glyphen (Zeichen) und die Art
 und Weise, wie diese in \SpecialChar LyX
 mit Hilfe von \SpecialChar LaTeX
 unterstützt werden.
\end_layout

\begin_layout Section
Das lokale Konfigurationsverzeichnis
\begin_inset CommandInset label
LatexCommand label
name "sec:Das-lokale-Konfigurationsverz"

\end_inset


\end_layout

\begin_layout Standard
Eventuell benutzen Sie \SpecialChar LyX
 als normaler Benutzer und wollen dennoch einige
 Einstellungen der Konfiguration ändern.
 Zu diesem Zweck gibt es das Verzeichnis 
\family typewriter
UserDir
\family default
, in dem Ihre gesamte persönliche Konfiguration gespeichert wird.
 Dieses Verzeichnis wird als Klon des systemweiten Verzeichnisses verwendet.
 Das bedeutet, dass jede Datei, die Sie dort speichern, die entsprechende
 Datei im Systemverzeichnis ersetzt.
 Jede der im vorigen Abschnitt beschriebenen Konfigurationsdateien kann
 sich entweder im Systemverzeichnis 
\family sans
LyX
\family typewriter
Dir
\family default
 oder aber in Ihrem privaten Verzeichnis 
\family typewriter
UserDir
\family default
 befinden.
 Im ersten Fall gelten die Einstellungen für alle Benutzer, im zweiten Fall
 nur für Sie.
\end_layout

\begin_layout Standard
Dies lässt sich an einigen Beispielen leichter erklären:
\end_layout

\begin_layout Itemize
Alle Änderungen, die über den Dialog 
\family sans
Werkzeuge\SpecialChar menuseparator
Einstellungen
\family default
 gemacht werden, werden in der Datei 
\family typewriter
preferences
\family default
 gespeichert, die sich im 
\family typewriter
UserDir
\family default
 findet.
 
\end_layout

\begin_layout Itemize
Wenn Sie mit dem Menüpunkt 
\family sans
Werkzeuge\SpecialChar menuseparator
Neu
\begin_inset space \space{}
\end_inset

konfigurieren
\family default
 eine Neukonfiguration von \SpecialChar LyX
 durchführen, werden die dabei erzeugten Dateien
 in Ihrem privaten Konfigurationsverzeichnis 
\family typewriter
UserDir
\family default
 gespeichert.
 Das bedeutet, dass etwaige neue Dokumentenklassen, die Sie in Ihrem Verzeichnis
 
\family typewriter
UserDir/layouts
\family default
 gespeichert haben, im Feld 
\family sans
Dokumentklasse
\family default
 des Dialoges 
\family sans
Dokument
\family default
\SpecialChar menuseparator

\family sans
Einstellungen
\family default
\SpecialChar ldots
 erscheinen.
\end_layout

\begin_layout Itemize
Wenn Sie sich von einem \SpecialChar LyX
-FTP-Server eine aktuellere Version (oder zum Beispiel
 diese deutsche Version) der Dokumentation besorgt haben, sie aber nicht
 
\emph on
offiziell
\emph default
 installieren können, da Sie keine Systemadministratorrechte haben, können
 Sie diese Dateien einfach nach 
\family typewriter
UserDir/doc
\family default
 kopieren, und sie werden automatisch über das 
\family sans
Hilfe
\family default
-Menü geöffnet.
\end_layout

\begin_layout Section
\SpecialChar LyX
 mit mehreren Konfigurationen
\end_layout

\begin_layout Standard
Die hochgradige Konfigurierbarkeit von \SpecialChar LyX
 durch das lokale Verzeichnis wird
 für diejenigen nicht ausreichend sein, die parallel mehrere unterschiedliche
 Konfigurationen verwenden wollen, zum Beispiel unterschiedliche Tastaturkürzel
 und\SpecialChar breakableslash
oder Druckerkonfigurationen.
 Sie können dies durch das Anlegen von mehreren Konfigurationsverzeichnissen
 erreichen und \SpecialChar LyX
 jeweils beim Start mitteilen, welches davon verwendet werden
 soll.
\end_layout

\begin_layout Standard
Indem Sie \SpecialChar LyX
 mit der Option 
\family typewriter
-userdir
\family default
 
\family typewriter
\emph on
<Verzeichnis>
\family default
\emph default
 starten, erreichen Sie, dass die Konfiguration aus diesem Verzeichnis anstelle
 des Standardverzeichnisses gelesen wird (das Standardverzeichnis ermitteln
 Sie, indem Sie \SpecialChar LyX
 ohne diese Option starten).
 Falls das so angegebene Verzeichnis noch nicht existiert, fragt \SpecialChar LyX
, ob es
 angelegt werden soll.
 Die Konfiguration in diesem Verzeichnis können Sie dann entsprechend verändern.
 Sie ist unabhängig von der Standardkonfiguration (aber lesen Sie weiter!).
 Anstelle der Kommandozeilenoption können Sie übrigens auch die Umgebungsvariabl
e 
\family typewriter
LYX_USERDIR_VER
\family default
 auf das zu verwendende Verzeichnis setzen.
\end_layout

\begin_layout Standard
Unterschiedliche Konfigurationsverzeichnisse bedeuten aber auch zusätzlichen
 Wartungsaufwand: Wenn Sie etwa eine neue Layoutdatei in 
\family typewriter
UserDir/layouts
\family default
 hinzufügen und diese für alle Konfigurationen sichtbar sein soll, müssen
 Sie sie in 
\emph on
allen
\emph default
 Verzeichnissen separat hinzufügen.
 Sie können das jedoch mit einem Trick umgehen: Nachdem \SpecialChar LyX
 das neue 
\family sans
UserDir
\family default
 angelegt hat, sind praktisch alle Unterverzeichnisse (siehe oben) leer.
 Sie können also all diese Verzeichnis durch einen symbolischen Link auf
 das entsprechende Verzeichnis im originalen 
\family typewriter
UserDir
\family default
 ersetzen.
 Lediglich mit dem Verzeichnis 
\family typewriter
doc
\family default
 müssen Sie vorsichtig sein, denn dort wird eine Datei durch das Konfigurationss
kript (
\family sans
Werkzeuge\SpecialChar menuseparator
Neu
\begin_inset space \space{}
\end_inset

konfigurieren
\family default
) abgelegt, die konfigurationsabhängig ist.
\end_layout

\begin_layout Chapter
Der Dialog Werkzeuge
\family sans
\SpecialChar menuseparator

\family default
Ei
\family sans
nstellungen
\end_layout

\begin_layout Standard
Alle Optionen im Dialog 
\family sans
Werkzeuge\SpecialChar menuseparator
Einstellungen
\family default
 sind im Anhang 
\emph on
Der Einstellungen-Dialog
\emph default
 des Benutzerhandbuchs beschrieben.
 Hier finden Sie darüber hinaus gehende Informationen für einige Dinge.
\end_layout

\begin_layout Section
Formate
\begin_inset CommandInset label
LatexCommand label
name "sec:Formate"

\end_inset


\end_layout

\begin_layout Standard
Hier können Sie existierende Dateiformate verändern oder neue definieren.
 Für Letzteres öffnen Sie 
\family sans
Werkzeuge\SpecialChar menuseparator
Einstellungen\SpecialChar menuseparator
Datei-Handhabung\SpecialChar menuseparator
Dateiformate
\family default
 und klicken auf 
\family sans
Neu
\family default
.
 Das 
\family sans
Format
\family default
-Feld enthält den Namen, unter dem das Format in \SpecialChar LyX
 erscheint.
 Im Feld 
\family sans
Einsortieren
\begin_inset space \space{}
\end_inset

als
\family default
 steht der Name, mit dem das Format intern identifiziert wird.
 Außerdem muss eine 
\family sans
Dateiendung
\family default
 festgelegt werden.
 Diese drei Felder sind erforderlich.
 Zusätzlich kann ein 
\family sans
Tastenkürzel
\family default
 definiert werden.
 Zum Beispiel ruft 
\family sans
Strg+D
\family default
 das Menü 
\family sans
Dokument\SpecialChar menuseparator
Ansicht\SpecialChar menuseparator
DVI
\family default
 auf.
\end_layout

\begin_layout Standard
Ein Format kann ein 
\family sans
Bearbeitungsprogramm
\family default
 und ein 
\family sans
Anzeigeprogramm
\family default
 haben.
 Sie können zum Beispiel für JPEG-Dateien 
\family sans
gimp
\family default
 als Bearbeitungsprogramm und 
\family sans
xv
\family default
 als Betrachter angeben.
 Zum Definieren des Befehls können auch die vier Variablen, die im nächsten
 Abschnitt beschrieben werden, benutzt werden.
 Das Anzeigeprogramm wird verwendet, wenn Sie ein Bild in \SpecialChar LyX
 ansehen oder
 das Menü 
\family sans
Dokument\SpecialChar menuseparator
Ansicht
\family default
 verwenden.
 Das 
\family sans
Bearbeitungsprogramm
\family default
 wird aufgerufen, wenn Sie nach einem Rechtsklick auf ein Bild 
\family sans
Datei
\begin_inset space \space{}
\end_inset

extern
\begin_inset space \space{}
\end_inset

bearbeiten
\family default
 auswählen.
\end_layout

\begin_layout Standard
Der MIME-Typ
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
MIME (
\emph on
\lang english
Multipurpose Internet Mail Extensions
\emph default
\lang ngerman
) ist ein Kodierstandard, der ursprünglich entwickelt wurde, um die Struktur
 und den Aufbau von E-Mails festzulegen.
 Er wird mittlerweile aber auch zur generellen Bestimmung von Dateiformaten
 eingesetzt.
\end_layout

\end_inset

 eines Formats muss nicht zwingend angegeben werden, wenn er aber angegeben
 wird, dann sollte dies einheitlich über alle Formatvarianten hinweg geschehen.
 Der MIME-Typ wird verwendet, um ein Dateiformat über den Dateiinhalt zu
 erkennen.
 Für einige wichtige Dateiformate wurde von der zuständigen Organisation
 (
\begin_inset CommandInset href
LatexCommand href
name "IANA"
target "http://www.iana.org/assignments/media-types/"
literal "false"

\end_inset

) noch kein offizielles MIME-Typ festgelegt.
 \SpecialChar LyX
 verwendet daher die erweiterte inoffizielle Liste, die von 
\begin_inset CommandInset href
LatexCommand href
name "freedesktop.org"
target "http://www.freedesktop.org/wiki/Specifications/shared-mime-info-spec"
literal "false"

\end_inset

 festgelegt wurde.
\end_layout

\begin_layout Standard
Wenn 
\family sans
Dokumentformat
\family default
 angekreuzt ist, weiß \SpecialChar LyX
, dass das Format für den Dokumentexport geeignet
 ist.
 Wenn dann auch noch ein geeigneter Konverter existiert (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Konverter"

\end_inset

), erscheint das Format unter 
\family sans
Datei\SpecialChar menuseparator
Exportieren
\family default
.
 Außerdem erscheint es im Menü 
\family sans
Dokument\SpecialChar menuseparator
Ansicht
\family default
, wenn ein 
\family sans
Anzeigeprogramm
\family default
 angegeben wurde.
 Für reine Grafikformate wie 
\family typewriter
PNG
\family default
 sollten Sie diese Option nicht benutzen, dagegen aber für Formate, die
 sowohl Vektorgrafiken als auch Dokumente repräsentieren (etwa 
\family typewriter
PDF
\family default
).
\end_layout

\begin_layout Standard
Die Option 
\family sans
Vektorgrafik-Format
\family default
 sagt \SpecialChar LyX
, dass ein Format Vektorgrafiken ent\SpecialChar softhyphen
halten kann.
 Diese Information wird benutzt, um ein geeignetes Zielformat für eingefügte
 Grafiken für den 
\family typewriter
PDF\SpecialChar LaTeX

\family default
-Export zu bestimmen.
 Eingefügte Grafiken müs\SpecialChar softhyphen
sen gegebenenfalls in 
\family typewriter
PDF
\family default
, 
\family typewriter
PNG
\family default
 oder 
\family typewriter
JPG
\family default
 konvertiert werden, weil 
\family typewriter
PDF\SpecialChar LaTeX

\family default
 keine anderen Grafikformate handhaben kann.
 Hat eine eingefügte Grafik nicht bereits eines dieser Formate, wird sie
 nach 
\family typewriter
PDF
\family default
 konvertiert, falls 
\family sans
Vektorgrafik-Format
\family default
 angekreuzt ist, andernfalls nach 
\family typewriter
PNG
\family default
.
\end_layout

\begin_layout Section
Kopierer
\end_layout

\begin_layout Standard
Weil alle Konvertierungen im temporären Verzeichnis von \SpecialChar LyX
 stattfinden, muss
 eine Datei manchmal geändert werden bevor sie ins temporäre Verzeichnis
 kopiert wird, damit die Konvertierung durchgeführt werden kann.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Wenn die Datei beispielsweise auf andere Dateien mit relativen Pfaden verweist
 – vielleicht Bilder – und diese Pfade beim Kopieren ungültig werden.
\end_layout

\end_inset

 Das macht ein Kopierer: Er kopiert eine Datei ins (oder vom) temporären
 Verzeichnis und verändert sie gegebenenfalls dabei.
\end_layout

\begin_layout Standard
Die Definitionen der Kopierer können acht Variablen benutzen:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$s
\end_layout

\end_inset

 ist das Systemverzeichnis von \SpecialChar LyX
 (zum Beispiel 
\family typewriter
/usr/local/share/lyx
\family default
).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$i
\end_layout

\end_inset

 ist die Eingabedatei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$o
\end_layout

\end_inset

 ist die Ausgabedatei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$b
\end_layout

\end_inset

 Der Basisname (ohne Dateinamenerweiterung), wie er im temporären \SpecialChar LyX
-Verzeichnis
 verwendet wird.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$p
\end_layout

\end_inset

 ist der vollständige Dateipfad des temporären \SpecialChar LyX
-Verzeichnisses.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$r
\end_layout

\end_inset

 ist der vollständige Dateipfad zur \SpecialChar LyX
-Datei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$f
\end_layout

\end_inset

 ist der Dateiname der \SpecialChar LyX
-Datei (ohne Verzeichnispfad).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$l
\end_layout

\end_inset

 ist der 
\emph on
\SpecialChar LaTeX
-Name
\emph default
.
 Dies sollte der Dateiname sein, den Sie in \SpecialChar LaTeX
 im 
\family typewriter

\backslash
include
\family default
-Befehl benutzen würden.
 Er ist nur dann relevant, wenn die expor\SpecialChar softhyphen
tier\SpecialChar softhyphen
ten Dateien für diesen Befehl
 geeignet sind.
\end_layout

\begin_layout Standard
Kopierer können benutzt werden, um 
\emph on
fast
\emph default
 alles mit Ausgabedateien zu machen.
 Wenn Sie zum Beispiel 
\family typewriter
PDF
\family default
-Dateien in ein spezielles Verzeichnis (bspw.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
/home/ich/pdf/
\end_layout

\end_inset

) kopieren wollen, können Sie ein Shell-Skript wie das folgende schreiben:
\end_layout

\begin_layout LyX-Code
#!/bin/bash
\end_layout

\begin_layout LyX-Code
FROMFILE=$1
\end_layout

\begin_layout LyX-Code
TOFILE=`basename $2`
\end_layout

\begin_layout LyX-Code
cp $FROMFILE /home/ich/pdf/$TOFILE
\end_layout

\begin_layout Standard
Speichern Sie das Skript ausführbar in Ihrem lokalen \SpecialChar LyX
-Verzeichnis (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UserDir
\end_layout

\end_inset

) – etwa 
\family typewriter
/home/ich/.lyx/scripts/pdfkopierer.sh
\family default
.
 Dann wählen Sie in 
\family sans
Werkzeuge\SpecialChar menuseparator
Ein\SpecialChar softhyphen
stel\SpecialChar softhyphen
lun\SpecialChar softhyphen
gen\SpecialChar menuseparator
Datei-Handhabung\SpecialChar menuseparator
Dateiformate
\family default
 das Format 
\family sans
PDF
\begin_inset space \space{}
\end_inset

(pdflatex)
\family default
 und tragen im Kopierer-Feld 
\family typewriter
pdfkopierer.sh $$i $$o
\family default
 ein.
\end_layout

\begin_layout Standard
Kopierer werden von \SpecialChar LyX
 in vielen eigenen Konvertierungsprozessen benutzt.
 So erzeugt \SpecialChar LyX
, wenn auf Ihrem Rechner geeignete Programme installiert sind,
 automatisch Kopierer für die Formate 
\family sans
HTML
\family default
 und 
\family sans
HTML
\begin_inset space \space{}
\end_inset

(MS
\begin_inset space \space{}
\end_inset

Word)
\family default
.
 Wenn diese Formate exportiert werden, sieht der Kopierer, dass nicht nur
 die Haupt-HTML-Datei, sondern auch verschiedene zugehörige Dateien (Stildateien
, Bilder usw.) kopiert werden müssen.
 All diese Dateien werden in ein Unterverzeichnis des Verzeichnisses geschrieben
, in dem die \SpecialChar LyX
-Datei steht.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Kopierer können angepasst werden.
 Der optionale Parameter 
\family typewriter
-e
\family default
 kann eine durch Kommata getrennte Liste von Erweiterungen enthalten, die
 mit kopiert werden sollen.
 Wenn es fehlt, werden alle Dateien kopiert.
 Der Parameter 
\family typewriter
-t
\family default
 bestimmt die Namenserweiterung, die an den erzeugten Verzeichnisnamen angehängt
 werden soll.
 Standardmäßig ist es 
\family sans
LyXconv
\family default
, so dass die aus 
\family typewriter
/Pfad/nach/Datei.lyx
\family default
 erzeugte HTML-Datei im Verzeichnis 
\family typewriter
/Pfad/nach/Datei.html.
\family sans
LyX
\family typewriter
conv
\family default
 landet.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Konverter
\begin_inset CommandInset label
LatexCommand label
name "sec:Konverter"

\end_inset


\end_layout

\begin_layout Standard
Sie können eigene Konverter in 
\family sans
Werkzeuge\SpecialChar menuseparator
Ein\SpecialChar softhyphen
stel\SpecialChar softhyphen
lun\SpecialChar softhyphen
gen\SpecialChar menuseparator
Datei-Handhabung\SpecialChar menuseparator
Kon\SpecialChar softhyphen
verter
\family default
 definieren.
 Dazu wählen aus 
\family sans
Von
\begin_inset space \space{}
\end_inset

Format
\family default
 und 
\family sans
In
\begin_inset space \space{}
\end_inset

Format
\family default
 jeweils ein Format aus, schreiben den benötigten Befehl ins Feld 
\family sans
Konverter
\family default
 und klicken auf 
\family sans
Hinzufügen
\family default
 rechts oben.
 Sie können im Befehl mehrere Variablen benutzen:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$s
\family default
 ist das Systemverzeichnis von \SpecialChar LyX

\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$i
\family default
 ist die Eingabedatei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$o
\family default
 ist die Ausgabedatei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$b
\family default
 ist der Dateiname der Eingabedatei ohne Erweiterung.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$p
\family default
 ist der Pfad zur Eingabedatei.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$r
\family default
 ist der Pfad zur ursprünglichen Eingabedatei.
 Wenn eine Kette von Konvertern aufgerufen wird, weicht er von 
\family typewriter
$$p
\family default
 ab.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
$$e
\family default
 Der 
\family typewriter
Iconv
\family default
-Name der Kodierung des Dokuments.
\end_layout

\begin_layout Standard
Ins Feld 
\family sans
Zusatz-Flag
\family default
 können Sie folgende durch Kommata getrennte Flags schreiben:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
latex
\family default
 teilt \SpecialChar LyX
 mit, dass der Konverter eine Variante von \SpecialChar LaTeX
 darstellt.
 Dies macht die \SpecialChar LaTeX
-Fehlermeldungen von \SpecialChar LyX
 verfügbar.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
needaux
\family default
 teilt \SpecialChar LyX
 mit, dass der Konverter eine \SpecialChar LaTeX
-Hilfsdatei (Dateiendung 
\family typewriter
.aux
\family default
) zur Konvertierung benötigt.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
nice
\end_layout

\end_inset

 teilt \SpecialChar LyX
 mit, dass der Konverter eine 
\begin_inset Quotes gld
\end_inset

schöne
\begin_inset Quotes grd
\end_inset

 Datei benötigt, also eine, die so aussieht, wie die, die man über das Menü
 exportiert (ohne interne Hilfsbefehle wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
input@path
\end_layout

\end_inset

).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
xml
\family default
 teilt \SpecialChar LyX
 mit, dass der Konverter ein XML-Format ausgibt.
\end_layout

\begin_layout Standard
Die folgenden Flags sind keine richtigen, weil sie ein Argument der Form
 
\family typewriter
key=value
\family default
 benutzen:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
parselog
\family default
 Wenn das gesetzt ist, werden der Standardfehler des Konverters in die Datei
 
\family typewriter
Eingabedatei.out
\family default
 umgeleitet, und das Skript wird so ausgeführt: 
\family typewriter
script
\begin_inset space \space{}
\end_inset

<
\begin_inset space \space{}
\end_inset

Eingabedatei.out
\begin_inset space \space{}
\end_inset

>
\begin_inset space \space{}
\end_inset

Eingabedatei.log
\family default
.
 Das Argument kann 
\family typewriter
$$s
\family default
 ent\SpecialChar softhyphen
halten.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
resultdir
\family default
 ist der Name des Verzeichnisses, in dem der Konverter die erzeugten Dateien
 ablegen soll.
 \SpecialChar LyX
 legt das Verzeichnis nicht an und kopiert auch nichts hinein, aber es
 kopiert dieses Verzeichnis an seinen Bestimmungsort.
 Das Argument kann 
\family typewriter
$$b
\family default
 enthalten, was durch die Basisnamen von Ein- oder Ausgabedatei ersetzt
 wird, wenn das Verzeichnis kopiert wird.
\begin_inset Newline newline
\end_inset

Beachten Sie, das 
\family typewriter
resultdir
\family default
 und 
\family typewriter
usetempdir
\family default
 zusammen keinen Sinn ergeben.
 Wenn das erste definiert wurde, wird das zweite ignoriert.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
resultfile
\family default
 ist der Name der Ausgabedatei und kann 
\family typewriter
$$b
\family default
 enthalten.
 Er wird nur zusammen mit 
\family typewriter
resultdir
\family default
 benutzt und ist auch dann nur optional.
 Wenn er nicht angegeben wird, wird 
\family typewriter
index
\family default
 benutzt.
\end_layout

\begin_layout Standard
Keines dieser Flags wird zur Zeit in einem Konverter benutzt, der zusammen
 mit \SpecialChar LyX
 installiert wird.
\end_layout

\begin_layout Standard
Sie müssen nicht für alle Formate, zwischen denen Sie konvertieren wollen,
 Konverter definieren.
 Zum Beispiel gibt es keinen Konverter von \SpecialChar LyX
 nach PostScript, aber \SpecialChar LyX
 kann
 dennoch PostScript exportieren.
 Dies geschieht, indem zunächst eine \SpecialChar LaTeX
-Datei erzeugt wird – dafür wird auch
 kein Konverter benötigt –, die dann mit dem Konverter von \SpecialChar LyX
 nach DVI in
 eine DVI-Datei konvertiert wird, die schließlich nach PostScript konvertiert
 wird.
 \SpecialChar LyX
 findet solche Konverter-Ketten automatisch und wird immer die kürzeste
 wählen.
\end_layout

\begin_layout Standard
Sie können auch mehrere Konversionsvarianten zwischen Dateiformaten definieren.
 Zum Beispiel liefert die Standardkonfiguration von \SpecialChar LyX
 fünf Möglichkeiten,
 um von \SpecialChar LaTeX
 nach PDF zu konvertieren:
\end_layout

\begin_layout Enumerate
direkt mit 
\family typewriter
pdflatex
\end_layout

\begin_layout Enumerate
mit 
\family typewriter
ps2pdf
\family default
 über DVI und PostScript
\end_layout

\begin_layout Enumerate
mit 
\family typewriter
dvipdfm(x)
\family default
 über DVI
\end_layout

\begin_layout Enumerate
direkt mit 
\family typewriter
Xe\SpecialChar TeX

\end_layout

\begin_layout Enumerate
direkt mit 
\family typewriter
Lua\SpecialChar TeX

\end_layout

\begin_layout Standard
Um solche alternativen Ketten zu definieren, müssen Sie alternative Ziel-
\emph on
Dateiformate
\emph default
 definieren, wie in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Formate"

\end_inset

 beschrieben.
 Zum Beispiel enthält die Standardkonfiguration verschiedene Formate für
 PDF-Dateien, die 
\family sans
pdf
\family default
 (für 
\family typewriter
ps2pdf
\family default
), 
\family sans
pdf2
\family default
 (für 
\family typewriter
pdflatex
\family default
), 
\family sans
pdf3
\family default
 (für 
\family typewriter
dvipdfm
\family default
), 
\family sans
pdf4
\family default
 (für 
\family typewriter
Xe\SpecialChar TeX

\family default
) und 
\family sans
pdf5
\family default
 (für 
\family typewriter
Lua\SpecialChar TeX

\family default
) heißen.
\end_layout

\begin_layout Chapter
Internationales \SpecialChar LyX

\begin_inset CommandInset label
LatexCommand label
name "cha:Internationales-LyX"

\end_inset


\end_layout

\begin_layout Standard
\SpecialChar LyX
 unterstützt die Übersetzung der Benutzerschnittstelle in beliebige Sprachen.
 Als dieser Text erstellt wurde, wurden neben dem Englischen bereits 32
 Sprachen (in unterschiedlichem Ausmaß) unterstützt.
 Die jeweils benutze Sprache nennt man 
\emph on
\lang english
locale
\emph default
\lang ngerman
 (Lokalisierung).
 (Für weitere Informationen über Lokalisierungseinstellungen lesen Sie bitte
 die entsprechende Dokumentation Ihres Betriebssystems.
 Im Fall von Linux ist die Manpage 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
locale (5)
\end_layout

\end_inset

 ein guter Startpunkt.)
\end_layout

\begin_layout Standard
Bitte beachten Sie, dass die Übersetzungen zwar funktionieren, aber zuweilen
 ein paar Einschränkungen unterliegen.
 Insbesondere wurde das Design der Popup-Menüs auf den englischen Text zugeschni
tten.
 Das bedeutet, dass der übersetzte Text an einigen Stellen mehr Platz benötigt
 als dort zur Verfügung steht.
 Dies ist natürlich nur ein Darstellungsproblem und schränkt nicht die Funktions
weise von \SpecialChar LyX
 ein.
 Sie werden auch feststellen, dass einige Übersetzungen nicht für alle Menüpunkt
e Tastenkürzel definieren.
 Manchmal stehen einfach nicht genügend freie Buchstaben zur Verfügung,
 manchmal hatte der Übersetzer bisher keine Zeit, sich darum zu kümmern.
 Unser Lokalisierungsteam, dem Sie vielleicht beitreten möchten,
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Wenn Sie eine andere Sprache als Englisch gut beherrschen, ist dies ein
 guter Weg, der \SpecialChar LyX
-Gemeinschaft etwas zurückzugeben.
\end_layout

\end_inset

 ist natürlich bemüht, diese Dinge in einer späteren Version zu korrigieren.
\end_layout

\begin_layout Section
\SpecialChar LyX
 übersetzen
\end_layout

\begin_layout Subsection
Die Benutzerschnittstelle übersetzen (Textmeldungen)
\end_layout

\begin_layout Standard
\SpecialChar LyX
 verwendet die 
\family typewriter
GNU-Gettext
\family default
-Bibliothek, um die Internationalisierung der Benutzerschnittstelle zu verwalten.
 Um \SpecialChar LyX
 dazu zu bringen, in allen Menüs und Dialogen Ihre bevorzugte Sprache
 zu verwenden, müssen Sie eine 
\family typewriter
po
\family default
-Datei für diese Sprache erstellen.
 Anschließend müssen Sie daraus eine 
\family typewriter
mo
\family default
-Datei erzeugen und diese installieren.
 Eine umfassende Anleitung dazu finden Sie in der Dokumentation für 
\family typewriter
GNU Gettext
\family default
.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Natürlich nur auf englisch.
 Die Veränderungen, die an der 
\family typewriter
po
\family default
-Datei durchgeführt werden müssen, sind allerdings recht intuitiv.
\end_layout

\end_inset

 Natürlich können Sie das einfach nur für sich selbst tun, aber wenn Sie
 es schon tun, können Sie die Früchte Ihres Fließes auch mit dem Rest der
 \SpecialChar LyX
-Gemeinschaft teilen.
 Schicken Sie einfach eine Nachricht an die \SpecialChar LyX
-Entwicklerliste, um weitere
 Informationen zum Vorgehen zu erhalten.
 
\end_layout

\begin_layout Standard
Kurz gesagt müssen Sie folgendes tun (
\family typewriter
xx
\family default
 bezeichnet den Sprachcode der neuen Sprache):
\end_layout

\begin_layout Itemize
Laden Sie den \SpecialChar LyX
-Quellcode herunter.
 (Siehe die 
\begin_inset CommandInset href
LatexCommand href
name "Informationen im Netz"
target "http://www.lyx.org/HowToUseGIT"
literal "false"

\end_inset

.)
\end_layout

\begin_layout Itemize
Kopieren Sie die Datei 
\family typewriter
lyx.pot
\family default
 in das Verzeichnis der .po-Dateien.
 Benennen Sie anschließend die Datei in 
\family typewriter
\series bold
xx
\series default
.po
\family default
 um.
 (Falls 
\family typewriter
lyx.pot
\family default
 nicht existiert, kann sie mit dem Befehl 
\family typewriter
make
\begin_inset space \space{}
\end_inset

lyx.pot
\family default
 neu erzeugt werden.
 Sie können alternativ auch eine beliebige existierende 
\family typewriter
po
\family default
-Datei als Vorlage verwenden.)
\end_layout

\begin_layout Itemize
Bearbeiten Sie 
\family typewriter
xx.po
\family default
.
\family typewriter

\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Für diese Aufgabe gibt es spezielle Programme, wie 
\family typewriter
Poedit
\family default
 (für alle Plattformen) oder 
\family typewriter
KBabel
\family default
 (für KDE).
 
\family typewriter
Emacs
\family default
 hat ebenfalls einen Modus, der Sie bei dieser Arbeit unterstützt, siehe
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.gnu.org/software/gettext/manual/html_node/PO-Mode.html
\backslash
#PO-Mode
\end_layout

\end_inset

.
\end_layout

\end_inset


\family default
 Für einige Menüeinträge und Dialogelemente gibt es Tastenkürzel, die ebenfalls
 angepasst werden sollten.
 Diese Kürzel werden mit '
\family typewriter
|
\family default
' markiert und sollten so übersetzt werden, dass Sie zum übersetzten Ausdruck
 passen.
 Sie sollten auch das Informationsfeld am Anfang der neuen 
\family typewriter
po
\family default
-Datei ausfüllen (mit Ihrer E-Mail-Adresse usw.), damit Sie für andere Leute
 erreichbar sind, die Ihnen Vorschläge oder unterhaltsame Kommentare schicken
 möchten.
\end_layout

\begin_layout Standard
Wenn Sie dies alles nur für den eigenen Gebrauch tun, dann:
\end_layout

\begin_layout Itemize
Erzeugen Sie in die Datei 
\family typewriter
xx.mo
\family default
 mithilfe des Befehls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
msgfmt -o xx.mo < xx.po
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Kopieren Sie diese Datei in ihr Lokalisierungsverzeichnis, in das entsprechende
 Unterverzeichnis für die Sprach 
\family typewriter
xx
\family default
 und unter dem Namen 
\family typewriter
lyx.mo
\family default
 (bspw.
\begin_inset space \space{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
/usr/local/share/locale/xx/LC_MESSAGES/lyx.mo
\end_layout

\end_inset

).
\end_layout

\begin_layout Standard
Wie gesagt wäre es aber besser, wenn Sie die neue 
\family typewriter
po
\family default
-Datei zur \SpecialChar LyX
-
\emph on
Distribution
\emph default
 beisteuern würden, damit auch andere sie verwenden können.
 Wenden Sie sich an die \SpecialChar LyX
-Entwicklerliste, wenn Sie das tun möchten.
\end_layout

\begin_layout Subsubsection
Mehrdeutige Texte
\end_layout

\begin_layout Standard
Manchmal muss ein- und derselbe englische Ausdruck in verschiedene Varianten
 übersetzt werden.
 Ein Beispiel ist der englische Ausdruck 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
To
\end_layout

\end_inset

, der im Deutschen je nach Kontext entweder 
\emph on
Nach
\emph default
 oder 
\emph on
Bis
\emph default
 lauten muss.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
GNU Gettext
\end_layout

\end_inset

 unterstützt solche ambigen Übersetzungen nicht.
 Daher werden in \SpecialChar LyX
 Kontextinformationen beigefügt.
 Statt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
To
\end_layout

\end_inset

 heißt es 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
To[[as in 'From format x to format y']]
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
To[[as in 'From page x to page y']].
\end_layout

\end_inset

 Diese beiden Varianten werden von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
gettext
\end_layout

\end_inset

 als zwei verschiedene Nachrichten behandelt, sie können daher jeweils wie
 gewünscht als 
\emph on
Nach
\emph default
 bzw.
 
\emph on
Bis
\emph default
 übersetzt werden (die Kontextinformationen werden in der Übersetzung weggelasse
n).
\end_layout

\begin_layout Standard
Natürlich müssen diese Kontextinformationen auch von der ursprünglichen
 Nachricht getilgt werden, wenn diese (in der englischen Lokalisierung)
 verwendet wird.
 Deshalb erscheinen sie in doppelten eckigen Klammern am Ende des Textes.
 Der Übersetzungsmechanismus von \SpecialChar LyX
 unterdrückt alles in doppelten eckigen
 Klammern am Ende von Nachrichten, wenn die Nachricht selbst angezeigt wird.
\end_layout

\begin_layout Subsection
Die Dokumentation übersetzen
\end_layout

\begin_layout Standard

\emph on
[Anmerkung des Übersetzers:
\emph default
 wenn 
\emph on
Sie die Dokumentation übersetzen wollen, benutzen Sie als Vorlage auf jeden
 Fall das englische Original.
 Übersetzungen – diese eingeschlossen – sind oft nicht ganz auf dem neuesten
 Stand.]
\end_layout

\begin_layout Standard
Auch die \SpecialChar LyX
-Dokumentation (die Sie im Menü 
\family sans
Hilfe
\family default
 finden) kann (und sollte!) übersetzt werden.
 Wenn übersetzte Versionen verfügbar sind und die Lokalisierung entsprechend
 eingestellt wurde, werden diese automatisch von \SpecialChar LyX
 benutzt.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Zurzeit sind Übersetzungen in etwa 20 Sprachen vorhanden.
\end_layout

\end_inset

 \SpecialChar LyX
 sucht nach übersetzten Versionen in 
\family sans
LyX
\family typewriter
Dir/doc/xx/DocName.lyx
\family default
, wobei 
\family typewriter
xx
\family default
 wiederum für den Code der aktuellen Sprache steht.
\end_layout

\begin_layout Standard
Falls solche Dateien nicht existieren, wird die englische Version verwendet.
 Die übersetzten Versionen müssen den gleichen Dateinamen (im Beispiel oben
 
\family typewriter
DocName
\family default
) tragen wie die englischen Originale.
 Wenn Sie gerne die Dokumentation übersetzen möchten (übrigens ein guter
 Weg, um die Originale Korrektur zu lesen!), geben wir Ihnen hier ein paar
 Tipps, die Ihnen möglicherweise etwas Arbeit ersparen:
\end_layout

\begin_layout Itemize
Werfen Sie einen Blick auf die Seiten des Übersetzungsteams auf der Homepage
 des \SpecialChar LyX
-Entwickler-Teams: 
\begin_inset CommandInset href
LatexCommand href
name "http://www.lyx.org/Translation"
target "http://www.lyx.org/Translation"
literal "false"

\end_inset

.
 Dort erfahren Sie, welche Texte bereits in Ihre Sprache übersetzt sind,
 auch sehen Sie, ob jemand (und wenn ja, wer) die Übersetzungsaktivitäten
 koordiniert.
 Wenn niemand dies tut, lassen Sie uns bitte wissen, falls Sie an dieser
 Aufgabe interessiert sind.
\end_layout

\begin_layout Standard
Wenn Sie dann mit der eigentlichen Übersetzungsarbeit beginnen, sind hier
 einige Tipps, die Ihnen vielleicht helfen, einige Schwierigkeiten zu überwinden
:
\end_layout

\begin_layout Itemize
Machen Sie im Dokumentationsteam mit! Informationen dazu gibt es in 
\family sans
Hilfe\SpecialChar menuseparator
Einführung
\family default
.
 Dies ist übrigens das erste Dokument, das Sie übersetzen sollten.
\end_layout

\begin_layout Itemize
Machen Sie sich mit den typographischen Konventionen der Sprache vertraut,
 in die Sie übersetzen möchten.
 Typographie ist eine alte Kunst, und in verschiedenen Teilen der Welt wurden
 verschiedene Konventionen eingeführt.
 Auch sollten Sie die typographische Terminologie in Ihrem Land lernen.
 Eine eigene Terminologie würde nur die Leser verwirren.
 
\emph on
(Warnung: Typographie macht süchtig!)
\end_layout

\begin_layout Itemize
Legen Sie eine Kopie des Originaldokumentes an.
 Dies wird Ihre Arbeitskopie.
 Sie können diese auch als persönliche Hilfe-Datei in \SpecialChar LyX
 verwenden, indem
 Sie sie in den Ordner 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UserDir/doc/xx/
\end_layout

\end_inset

 kopieren.
\begin_inset Newline newline
\end_inset


\begin_inset Note Greyedout
status open

\begin_layout Plain Layout

\series bold
Achtung:
\series default
 Für komplexe Dokumente mit externem Material (Bilder usw.) werden die Dateipfade
 von relativ auf absolut geändert, wenn man das Dokument verschiebt.
 Daher ist es das Beste, \SpecialChar LyX
 mittels Git zu beziehen (siehe 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.lyx.org/HowToUseGIT
\end_layout

\end_inset

) und das Dokument im Verzeichnis zu belassen.
 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Manchmal wird das Originaldokument (vom \SpecialChar LyX
-Team) aktualisiert.
 Verwenden Sie den Quelltextbetrachter unter 
\begin_inset CommandInset href
LatexCommand href
name "http://www.lyx.org/trac/timeline"
target "http://www.lyx.org/trac/timeline"
literal "false"

\end_inset

, um nachzuvollziehen, was verändert wurde.
 So können Sie leicht erkennen, welche Teile des Dokuments bearbeitet wurden.
\end_layout

\begin_layout Standard
Wann immer Sie einen Fehler im Originaltext entdecken, korrigieren Sie ihn
 bitte und teilen Sie dem Rest des Dokumentationsteams Ihre Veränderungen
 mit.
 (Sie haben nicht vergessen, dem Dokumentationsteam beizutreten, oder?)
\end_layout

\begin_layout Standard
\begin_inset Branch OutDated
inverted 0
status collapsed

\begin_layout Section
Internationale Tastaturbelegung
\begin_inset CommandInset label
LatexCommand label
name "sec:Internationale-Tastaturbelegung"

\end_inset


\end_layout

\begin_layout Subsection
Eigene Tastaturtabellen definieren: das 
\emph on
Keymap
\emph default
-Dateiformat
\end_layout

\begin_layout Standard
Sehen wir uns einmal die 
\emph on
Keymap
\emph default
-Datei ein wenig näher an.
 Es handelt sich um eine ASCII-Datei, in der folgendes definiert wird:
\end_layout

\begin_layout Itemize
Taste-Taste- oder Taste-String-Transformationen
\end_layout

\begin_layout Itemize

\emph on
Tote
\emph default
 Tasten – sogenannte 
\emph on
dead keys
\end_layout

\begin_layout Itemize
Ausnahmen für tote Tasten.
\end_layout

\begin_layout Standard
Zur Definition einer Taste-Taste- oder Taste-String-Transformation dient
 folgender Befehl:
\end_layout

\begin_layout Quotation

\family typewriter

\backslash
kmap Taste Ausgabe
\end_layout

\begin_layout Standard
wobei 
\family typewriter
Taste
\family default
 die zu übersetzende Taste bezeichnet und 
\family typewriter
Ausgabe
\family default
 die Taste oder den String, der dafür in das Dokument eingefügt werden soll.
 Eine tote Taste definiert man mit:
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Quotation

\family typewriter

\backslash
kmod
\family default
 
\family typewriter
Taste Tote-Taste
\end_layout

\begin_layout Standard
wobei 
\family typewriter
Taste
\family default
 wieder eine Taste auf der Tastatur bezeichnet und 
\family typewriter
Tote-Taste
\family default
 der Name einer toten Taste ist.
 \SpecialChar LyX
 unterstützt folgende toten Tasten (Abkürzungen in Klammern):
\end_layout

\begin_layout Quotation

\emph on
Name
\begin_inset space \hfill{}
\end_inset

Beispiel
\end_layout

\begin_layout Quotation
acute (acu)
\begin_inset space \hfill{}
\end_inset

áéíóú
\end_layout

\begin_layout Quotation
grave (gra)
\begin_inset space \hfill{}
\end_inset

àèìòù
\end_layout

\begin_layout Quotation
macron (mac)
\begin_inset space \hfill{}
\end_inset

 ō
\end_layout

\begin_layout Quotation
tilde (til)
\begin_inset space \hfill{}
\end_inset

ñÑ
\end_layout

\begin_layout Quotation
underbar (underb)
\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
b o
\end_layout

\end_inset


\end_layout

\begin_layout Quotation
cedilla (ced)
\begin_inset space \hfill{}
\end_inset

çÇ
\end_layout

\begin_layout Quotation
underdot (underd)
\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
d o
\end_layout

\end_inset


\end_layout

\begin_layout Quotation
circumflex (circu)
\begin_inset space \hfill{}
\end_inset

âêîôû
\end_layout

\begin_layout Quotation
circle (circl)
\begin_inset space \hfill{}
\end_inset

ÅůŮ
\end_layout

\begin_layout Quotation
tie (tie)
\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
t oo
\end_layout

\end_inset


\end_layout

\begin_layout Quotation
breve (bre)
\begin_inset space \hfill{}
\end_inset

ă
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
u o
\end_layout

\end_inset


\end_layout

\begin_layout Quotation
caron (car)
\begin_inset space \hfill{}
\end_inset

čšž
\end_layout

\begin_layout Quotation
hungarian umlaut (hug)
\begin_inset space \hfill{}
\end_inset

őű
\end_layout

\begin_layout Quotation
umlaut (uml)
\begin_inset space \hfill{}
\end_inset

äöü
\end_layout

\begin_layout Quotation
dot (dot)
\begin_inset space \hfill{}
\end_inset

ż
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
.s
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Da es auf vielen internationalen Tastaturen Ausnahmen dafür gibt, wie eine
 bestimmte tote Taste das folgende Zeichen verändern soll, können diese
 definiert werden, und zwar mit:
\end_layout

\begin_layout Quotation

\family typewriter

\backslash
kxmod
\family default
 
\family typewriter
Tote-Taste Taste Ausgabe
\end_layout

\begin_layout Standard
Zum Beispiel soll caron-o auf einer slowakischen Tastatur ein circumflex-o
 erzeugen.
 Dies erreicht man mit:
\end_layout

\begin_layout Quotation

\family typewriter

\backslash
kxmod
\family default
 
\family typewriter
caron o "
\backslash
^o"
\end_layout

\begin_layout Standard
Auch müssen für die Buchstaben i und j Ausnahmen definiert werden, um den
 Punkt zu löschen, bevor ein Akzent eingefügt wird.
 Ich werde dies beizeiten ändern, hatte aber bisher noch keine Zeit dazu.
\end_layout

\begin_layout Standard
Ach so, zur Definition der Ausgabe: Der Backslash 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash

\family default

\begin_inset Quotes grd
\end_inset

 ist ein Sonderzeichen.
 Um ihn einzugeben, muss man einen doppelten Backslash 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash

\backslash

\family default

\begin_inset Quotes grd
\end_inset

 eingeben.
 Auch das Anführungszeichen 
\begin_inset Quotes gld
\end_inset

"
\begin_inset Quotes grd
\end_inset

 und das Doppelkreuz 
\begin_inset Quotes gld
\end_inset


\family typewriter
#
\family default

\begin_inset Quotes grd
\end_inset

 haben eine andere Bedeutung.
 
\family typewriter
#
\family default
 bezeichnet einen Kommentar, Anführungszeichen markieren den Anfang und
 das Ende eines Strings (das heißt einer \SpecialChar LaTeX
-Befehlssequenz).
 Um diese Zeichen einzugeben, muss ein Backslash vorangestellt werden (also:
 
\family typewriter

\backslash
"
\family default
 und 
\family typewriter

\backslash
#
\family default
).
 Wenn Sie eine funktionierende Keymap-Datei für eine neue Sprache angefertigt
 haben, mailen Sie diese bitte an das Entwickler-Team, damit sie in die
 nächste Distribution integriert werden kann.
\end_layout

\begin_layout Standard
In Zukunft werden auch noch folgende Befehle unterstützt:
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
kinclude Dateiname
\family default
\emph on

\begin_inset space \hfill{}
\end_inset


\emph default
bindet eine andere Datei ein 
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
kprog
\family default
 
\family typewriter
Programm
\family default
\emph on

\begin_inset space \hfill{}
\end_inset


\emph default
 definiert ein externes Keymap-Programm 
\end_layout

\begin_layout Standard
Auch sollte es die 
\family typewriter
lyxrc-D
\family default
atei nach Voreinstellungen durchsuchen (zum Beispiel nach einer Option 
\family typewriter

\backslash
kinclude
\family default
, um eine Standardtastatur zu verwenden).
\end_layout

\end_inset


\end_layout

\begin_layout Section
Internationale Tastaturtabellen: 
\emph on
Keymaps
\emph default

\begin_inset CommandInset label
LatexCommand label
name "sec:Internationale-Tastaturtabellen"

\end_inset


\end_layout

\begin_layout Standard
Die nächsten beiden Abschnitte beschreiben detailliert die Syntax der 
\family typewriter
.kmap
\family default
- und 
\family typewriter
.cdef
\family default
-Dateien.
 Diese Abschnitte sollten Ihnen dabei helfen, Ihre eigene Tastaturtabelle
 zu entwerfen, wenn die vorhandenen nicht ganz Ihren Bedürfnissen entsprechen.
\end_layout

\begin_layout Subsection
Die 
\family typewriter
.kmap
\family default
-Datei
\begin_inset CommandInset label
LatexCommand label
name "subsec:Die-.kmap-Datei"

\end_inset


\end_layout

\begin_layout Standard
Eine 
\family sans
\shape up
.
\family typewriter
kmap
\family default
\shape default
-Datei transformiert gedrückte Tasten zu Buchstaben oder Zeichenketten –
 es definiert ein 
\emph on
\lang english
keyboard mapping
\emph default
\lang ngerman
.
 Im Folgenden werden die Schlüsselwörter 
\family typewriter
kmap
\family default
, 
\family typewriter
kmod
\family default
, 
\family typewriter
kxmod
\family default
 und 
\family typewriter
kcomb
\family default
 beschrieben.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\shape up
kmap
\family default
\shape default
 transformiert einen Buchstaben zu einer Zeichenkette
\end_layout

\begin_layout LyX-Code

\backslash
kmap 
\family roman
\emph on
Zeichen Zeichenkette
\end_layout

\begin_layout Standard
Dieser Ausdruck definiert, dass 
\emph on
Zeichen
\emph default
 zu 
\emph on
Zeichenkette
\emph default
 transformiert werden soll.
 Dabei müssen in 
\emph on
Zeichenkette
\emph default
 die Zeichen Backslash 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash

\family default

\begin_inset Quotes grd
\end_inset

 und Anführungszeichen 
\begin_inset Quotes gld
\end_inset


\family typewriter
"
\family default

\begin_inset Quotes grd
\end_inset

 mit einem vorangehenden Backslash versehen werden.
 
\end_layout

\begin_layout Standard
Als Beispiel ein Ausdruck, der das Zeichen 
\begin_inset Quotes gld
\end_inset


\family typewriter
/
\family default

\begin_inset Quotes grd
\end_inset

 ausgibt, wenn die Taste 
\begin_inset Quotes gld
\end_inset


\family typewriter
&
\family default

\begin_inset Quotes grd
\end_inset

 gedrückt wurde:
\end_layout

\begin_layout LyX-Code

\backslash
kmap & /
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
\shape up
kmod
\family default
\shape default
 spezifiziert ein Akzentzeichen 
\end_layout

\begin_layout LyX-Code

\backslash
kmod 
\family roman
\emph on
Zeichen Akzent erlaubt
\end_layout

\begin_layout Standard
Dieser Ausdruck sorgt dafür, dass 
\emph on
Zeichen
\emph default
 als ein bestimmter 
\emph on
Akzent
\emph default
 interpretiert wird, und zwar bei allen Zeichen, die in 
\emph on
erlaubt
\emph default
 aufgeführt sind.
 Dies ist der Mechanismus toter Tasten 
\emph on
(
\lang english
dead keys
\lang ngerman
).
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Der Ausdruck 
\emph on
tote
\emph default
 
\emph on
Taste
\emph default
 kommt daher, dass diese Taste allein kein Zeichen erzeugt, aber, gefolgt
 von einer anderen Taste, akzentuierte Zeichen erzeugt.
 Zum Beispiel kann auf diese Weise é
\begin_inset Quotes grd
\end_inset

 erzeugt werden.
\end_layout

\end_inset


\emph default
 
\end_layout

\begin_layout Standard
Wenn Sie die Taste 
\emph on
Zeichen
\emph default
 drücken, gefolgt von einem Zeichen, das 
\emph on
nicht
\emph default
 in 
\emph on
erlaubt
\emph default
 aufgeführt wurde, werden einfach beide Zeichen einzeln ausgegeben.
 Beachten Sie, dass die Rücktaste eine vorangehende tote Taste nivelliert;
 wenn Sie also 
\emph on
Zeichen Rücktaste
\emph default
 eingeben, wird der Cursor nicht eine Position rückwärts gehen, sondern
 wird statt dessen den Effekt nivellieren, den Zeichen auf den folgenden
 Buchstaben gehabt hätte.
\end_layout

\begin_layout Standard
Der folgende Ausdruck definiert, dass die Taste 
\begin_inset Quotes gld
\end_inset


\family typewriter
^
\family default

\begin_inset Quotes grd
\end_inset

 zum Zirkumflex-Akzent wird, wenn er von einem der Buchstaben a, e, i, o,
 u, A, E, I ,O oder U gefolgt wird:
\end_layout

\begin_layout LyX-Code

\backslash
kmod ^ circumflex aeiouAEIOU
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
kxmod
\family default
 definiert eine Ausnahme zu einem Akzentzeichen
\end_layout

\begin_layout LyX-Code

\backslash
kxmod  
\family roman
\emph on
Akzent Zeichen Ausgabe
\end_layout

\begin_layout Standard
Dieser Ausdruck definiert eine Ausnahme für die Wirkung, die 
\emph on
Akzent
\emph default
 in Verbindung mit 
\emph on
Zeichen
\emph default
 haben soll.
 Dabei muss 
\emph on
Akzent
\emph default
 vorher mit Hilfe einer 
\family typewriter

\backslash
kmod
\family default
-Zeile einer Taste zugewiesen worden sein.
 Wenn Sie die Sequenz 
\emph on
Akzent Zeichen
\emph default
 drücken, wird 
\emph on
Ausgabe
\emph default
 produziert.
 Falls solch eine Definition 
\emph on
nicht
\emph default
 existiert und Sie 
\emph on
Akzent Zeichen
\emph default
 eingeben, erhalten Sie das 
\emph on
Akzent
\emph default
 
\emph on
Zeichen
\emph default
 als Ergebnis, wobei Akzent das erste Argument der 
\family typewriter

\backslash
kmod
\family default
-Definition ist.
\end_layout

\begin_layout Standard
Der folgende Ausdruck sorgt dafür, dass \SpecialChar LaTeX
 bei einem 
\begin_inset Quotes gld
\end_inset

i
\begin_inset Quotes grd
\end_inset

 mit circumflex den I-Punkt entfernt, bevor das Akzentsymbol eingefügt wird:
\end_layout

\begin_layout LyX-Code

\backslash
kxmod circumflex i "
\backslash

\backslash
^{
\backslash

\backslash
i}"
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
kcomb
\family default
 kombiniert zwei Akzentsymbole
\end_layout

\begin_layout LyX-Code

\backslash
kcomb 
\family roman
\emph on
Akzent1 Akzent2 erlaubt
\end_layout

\begin_layout Standard
Hier wird es ziemlich esoterisch.
 Dieser Ausdruck erlaubt die Kombination der Effekte von 
\emph on
Akzent1
\emph default
 und 
\emph on
Akzent2
\emph default
 (in dieser Reihenfolge!) bei allen 
\emph on
erlaubten
\emph default
 Zeichen.
 Die Bedeutungen von 
\emph on
Akzent1
\emph default
 und 
\emph on
Akzent2
\emph default
 müssen zuvor mit Hilfe von 
\family typewriter

\backslash
kmod
\family default
 definiert worden sein.
\end_layout

\begin_layout Standard
Folgendes Beispiel stammt aus der Datei 
\family typewriter
greek.kmap
\family default
:
\end_layout

\begin_layout LyX-Code

\size footnotesize

\backslash
kmod ; acute aeioyvhAEIOYVH 
\backslash
kmod : umlaut iyIY 
\backslash
kcomb acute umlaut iyIY
\end_layout

\begin_layout Standard
Diese Zeilen erlauben es, 
\begin_inset Quotes gld
\end_inset


\family typewriter
;:i
\family default

\begin_inset Quotes grd
\end_inset

 einzugeben und auf diese Weise 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash
'{
\backslash
"{i}}
\family default

\begin_inset Quotes grd
\end_inset

 zu erzeugen (
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
'{
\backslash
"{i}}
\end_layout

\end_inset


\end_layout

\end_inset

).
 In diesem Fall löscht die Backspace-Taste das letzte gedrückte Zei\SpecialChar softhyphen
chen.
 Wenn Sie also 
\family typewriter
;:
\family default
 
\family sans
Backspace
\family default
 
\family typewriter
i
\family default
 eingeben, erhalten Sie 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash
'(i)
\family default

\begin_inset Quotes grd
\end_inset

 (
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
'i
\end_layout

\end_inset


\end_layout

\end_inset

).
 
\end_layout

\begin_layout Subsection
Die 
\family typewriter
.cdef
\family default
-Datei
\end_layout

\begin_layout Standard
Nachdem \SpecialChar LyX
 die 
\family typewriter
.kmap
\family default
-Datei verarbeitet hat, legt eine 
\family typewriter
.cdef
\family default
-Datei fest, wie die einzelnen Symbole im gegenwärtigen Zeichensatz dargestellt
 werden sollen.
 Die \SpecialChar LyX

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\begin_inset Quotes gld
\end_inset

=
\end_layout

\end_inset

Distribution enthält wenigstens die Dateien 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

iso8859-1.cdef
\end_layout

\end_inset

 und 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

iso8859-2.cdef
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Generell besteht eine 
\family typewriter
.
\shape up
cdef
\family default
\shape default
-Datei aus einer Reihe von Deklarationen der folgenden Form:
\end_layout

\begin_layout LyX-Code

\family roman
\emph on
Position_im_Zeichensatz Zeichenkette
\end_layout

\begin_layout Standard
Um beispielsweise der Zeichenkette (
\emph on
Ausgabe
\emph default
 im vorigen Abschnitt) 
\begin_inset Quotes gld
\end_inset


\family typewriter
'{e}
\family default

\begin_inset Quotes grd
\end_inset

 das entsprechende Zeichen im Zeichensatz ISO-8859-1 (233) zuzuweisen, benutzt
 man folgenden Ausdruck:
\end_layout

\begin_layout LyX-Code
233 "
\backslash

\backslash
'{e}"
\end_layout

\begin_layout Standard
Wieder müssen den Zeichen 
\begin_inset Quotes gld
\end_inset


\family typewriter

\backslash

\family default

\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset


\family typewriter
"
\family default

\begin_inset Quotes grd
\end_inset

 ein Backslash vorangestellt werden.
 Beachten Sie, dass es durchaus möglich ist, dass dasselbe Zeichen (sinnvoll)
 zwei verschiedene Strings repräsentieren kann.
 Zum Beispiel gibt es in 
\family typewriter
i
\shape up
so-8859-7.cdef
\family default
\shape default
 die Zeilen:
\end_layout

\begin_layout LyX-Code
192 "
\backslash

\backslash
'{
\backslash

\backslash

\backslash
"{i}}"
\begin_inset Newline newline
\end_inset

192 "
\backslash

\backslash

\backslash
"{
\backslash

\backslash
'{i}}"
\end_layout

\begin_layout Standard
Wenn \SpecialChar LyX
 kein passendes Zeichen für einen String finden kann, der durch eine
 Tastensequenz erzeugt wurde, wird es versuchen, falls der String wie ein
 akzentuierter Buchstabe aussieht, auf dem Bildschirm den Buchstaben mit
 Akzent selbst zu zeichnen.
\end_layout

\begin_layout Subsection
Tote Tasten definieren
\end_layout

\begin_layout Standard
Es gibt noch eine zweite Möglichkeit, internationale Buchstaben mit Hilfe
 von 
\emph on
toten
\emph default
 
\emph on
Tasten (
\lang english
dead keys
\lang ngerman
)
\emph default
 zu erzeugen.
 Eine tote Taste erzeugt in Kombination mit einem Buchstaben ein akzentuiertes
 Zeichen.
 Im Folgenden erläutern wir für Illustrationszwecke, wie man eine wirklich
 simple tote Taste definiert.
\end_layout

\begin_layout Standard
Nehmen wir an, Sie benötigen das Zirkumflex-Zeichen (
\begin_inset Quotes gld
\end_inset

 ̂
\begin_inset Quotes grd
\end_inset

).
 Hierzu können Sie der Taste 
\family typewriter
^
\family default
 den \SpecialChar LyX
-Befehl 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
accent-circumflex
\end_layout

\end_inset

 zuweisen.
 Wann immer Sie danach diese Taste gefolgt von einem Buchstaben drücken,
 wird dieser Buchstabe einen Zirkumflex haben.
 Die Sequenz 
\family typewriter
^E
\family default
 produziert also den Buchstaben ê.
 Wenn Sie nach der Taste 
\family typewriter
^
\family default
 die Leertaste drücken, wird nur der Akzent ausgegeben.
 Beachten Sie diesen letzten Punkt! Wenn Sie eine Taste an eine tote Taste
 anbinden, müssen Sie das Zeichen, das diese Taste normalerweise erzeugt,
 an eine andere Taste anbinden (oder immer zusätzlich die Leertaste drücken).
 Daher ist es keine gute Idee, die Taste 
\family typewriter
,
\family default
 an 
\family typewriter
accent-cedilla
\family default
 anzubinden, da Sie dann Kommata sehr mühsam eingeben müssen.
\end_layout

\begin_layout Standard
Ein üblicher Weg, tote Tasten zu belegen, ist es, die Modifizierungstasten
 (
\family typewriter
Meta\SpecialChar breakableslash
Alt
\family default
, 
\family typewriter
Strg
\family default
 oder 
\family typewriter
Umschalt
\family default
) mit einem Zeichen (wie 
\family typewriter
~
\family default
 oder 
\family typewriter
,
\family default
 oder 
\family typewriter
^
\family default
) zu kombinieren.
 Ein anderer setzt die Verwendung der Linux-Programme 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
xmodmap
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
xkeycaps
\end_layout

\end_inset

 voraus, mit denen die spezielle Taste 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Mode_Switch
\end_layout

\end_inset

 definiert wird.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Mode_Switch
\end_layout

\end_inset

 verhält sich ähnlich wie 
\family typewriter
Umschalt
\family default
 und erlaubt es Ihnen, Tasten an Akzentzeichen zu binden.
 Sie können damit auch Tasten in tote Tasten umwandeln, indem Sie diese
 Tasten an Tastensymbole wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
usldead_cedilla
\end_layout

\end_inset

 anbinden und diese dann an einen entsprechenden \SpecialChar LyX
-Befehl.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Hinweis von 
\noun on
John Weiss
\noun default
: Genau das mache ich in meinen Dateien 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
~/.lyx/lyxrc
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
~/.xmodmap
\end_layout

\end_inset

.
 I habe meine Taste 
\family typewriter
Scroll
\begin_inset space ~
\end_inset

Lock
\family default
 (
\family typewriter
Rollen
\family default
) als 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Mode_Shift
\end_layout

\end_inset

 definiert und eine Reihe der Tastensymbole mit dem Präfix 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
usldead_
\end_layout

\end_inset

 an Prozesse wie die folgenden gebunden: 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
Scroll
\begin_inset space ~
\end_inset

Lock-^
\end_layout

\end_inset

 und 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
Scroll
\begin_inset space ~
\end_inset

Lock-~
\end_layout

\end_inset

.
 So komme ich zu meinen Akzentbuchstaben.
\end_layout

\end_inset

 Sie können im Grunde jede Taste als 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Mode_Switch
\end_layout

\end_inset

 definieren: Eine der 
\family typewriter
Strg
\family default
-Tasten, eine freie Funktionstaste usw.
 Die \SpecialChar LyX
-Befehle, die Akzente produzieren, sind im Handbuch \SpecialChar LyX
-Funktionen dokumentier
t.
 Schauen Sie nach dem Eintrag 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
accent-acute
\end_layout

\end_inset

.
 Sie finden dort eine komplette Liste.
\end_layout

\begin_layout Subsection
Ihre Sprachkonfiguration einstellen
\end_layout

\begin_layout Standard
Über 
\begin_inset Info
type  "menu"
arg   "dialog-show prefs"
\end_inset

 können Sie die Sprache der Benutzeroberfläche konfigurieren.
\end_layout

\begin_layout Chapter
Installieren neuer Textklassen, Layouts und Vorlagen
\begin_inset CommandInset label
LatexCommand label
name "cha:Installieren-neuer-Textklassen"

\end_inset


\end_layout

\begin_layout Standard
In diesem Kapitel wird beschrieben, wie Sie beim Installieren neuer Layout-
 und Vorlagendateien vorgehen müssen.
 Außerdem geben wir eine kleine Auf\SpecialChar ligaturebreak
frischung, wie man neue Dokumentenklassen
 für \SpecialChar LaTeX
 korrekt installiert.
\end_layout

\begin_layout Standard
Zunächst möchten wir noch einmal ein paar Worte darüber verlieren, wie \SpecialChar LyX

 und \SpecialChar LaTeX
 miteinander verbunden sind, da dies für das Folgende wichtig ist.
 Wichtig zu wissen ist vor allem, dass \SpecialChar LyX
 selbst im Grunde sehr wenig Konkretes
 über \SpecialChar LaTeX
 weiß.
 Tatsächlich ist \SpecialChar LaTeX
 aus der Sicht von \SpecialChar LyX
 nur eines mehrerer 
\begin_inset Quotes gld
\end_inset

Backend-Formate
\begin_inset Quotes grd
\end_inset

 für die es eine Ausgabe erzeugen kann.
 Andere solche Formate sind DocBook, einfacher Text und XHTML.
 Nun ist \SpecialChar LaTeX
 aber natürlich ein besonders wichtiges Format.
 Der Punkt jedoch ist, dass sehr wenig der Informationen, die \SpecialChar LyX
 über \SpecialChar LaTeX
 hat,
 im Programm selbst festgeschrieben sind.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Manche Befehle sind so komplex, dass sie in \SpecialChar LyX
 festgeschrieben sind.
 Aber die Entwickler betrachten dies allgemein schlechte Lösung.
\end_layout

\end_inset

 Vielmehr bezieht es diese Informationen, selbst im Fall der Standardklassen
 wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
article.cls
\end_layout

\end_inset

, aus so genannten 
\begin_inset Quotes gld
\end_inset

Layout-Dateien
\begin_inset Quotes grd
\end_inset

.
 Genauso wenig weiß \SpecialChar LyX
 über DocBook oder XHTML.
 Was es weiß, bezieht es aus Layout-Dateien.
\end_layout

\begin_layout Standard
Eine Layout-Datei können Sie sich als eine Art Übersetzungshandbuch vorstellen,
 in dem für eine bestimmte Dokumentklasse festgelegt wird, wie \SpecialChar LyX
-Konstrukte
 – Absätze mit den entsprechenden Stilen, bestimmte Einfügungen usw.
 – und \SpecialChar LaTeX
- DocBook- oder XHTML-Konstrukte korrespondieren.
 Fast alles, was \SpecialChar LyX
 beispielsweise über die Standard-Artikelklasse von \SpecialChar LaTeX
 (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
article.cls
\end_layout

\end_inset

) weiß, ist in der Layout-Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
article.layout
\end_layout

\end_inset

 und in verschiedenen anderen Dateien, die diese einbindet, festgeschrieben.
 Daher sollten Sie, wenn Sie vorhaben, selbst eine Layout-Datei zu schreiben,
 zuallererst die vorhandenen Layout-Dateien studieren.
 Am Besten beginnen Sie mit der Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdsections.inc
\end_layout

\end_inset

, die in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
article.layout
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
book.layout
\end_layout

\end_inset

 und vielen anderen Layout-Dateien für Dokumentklassen eingebunden wird.
 Dort werden die Abschnittsüberschriften und ähnliches definiert: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdsections.inc
\end_layout

\end_inset

 informiert also \SpecialChar LyX
 darüber, wie Absätze, die als Abschnitt, Unterabschnitt
 usw.
 markiert sind, in \SpecialChar LaTeX
, DocBook und XHTML ausgegeben werden sollen.
 Die Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
article.layout
\end_layout

\end_inset

 bindet im Grunde einfach nur verschiedene solcher 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
std*.inc
\end_layout

\end_inset

-Dateien ein.
\end_layout

\begin_layout Standard
Layout-Dateien definieren aber nicht nur die \SpecialChar LyX
-\SpecialChar LaTeX
-Korrespondenz, sondern sie
 legen auch fest, wie die \SpecialChar LyX
 in \SpecialChar LyX
 selbst (auf dem Bildschirm) dargestellt werden.
 Die Tatsache, dass Layout-Dateien diese beiden Aufgaben gleichzeitig haben,
 führt häufig zu Verwirrung, denn die Aufgaben sind strikt getrennt.
 Wenn Sie \SpecialChar LyX
 sage, wie ein bestimmtes Konstrukt in \SpecialChar LaTeX
 dargestellt werden soll,
 haben Sie dem Programm noch nicht gesagt, wie das Konstrukt in \SpecialChar LyX
 dargestellt
 werden soll.
 Umgekehrt weiß \SpecialChar LyX
, wenn Sie festlegen, wie ein Konstrukt in \SpecialChar LyX
 darzustellen
 ist, damit nicht, wie es in \SpecialChar LaTeX
 übersetzt werden muss (und erst recht nicht
 \SpecialChar LaTeX
, wie es darzustellen ist).
 Das heißt, Sie müssen, wenn Sie ein neuen \SpecialChar LyX
-Konstrukt definieren, immer
 zwei verschiedene und getrennte Dinge tun: (1.) \SpecialChar LyX
 instruieren, wie dieses
 in \SpecialChar LaTeX
 übersetzt werden soll und (2.) \SpecialChar LyX
 instruieren, wie es das Konstrukt darstellen
 soll.
\end_layout

\begin_layout Standard
Analoges gilt natürlich für die anderen 
\begin_inset Quotes gld
\end_inset

Backend-Formate
\begin_inset Quotes grd
\end_inset

, die \SpecialChar LyX
 unterstützt.
 Allerdings ist XHTML in mancher Hinsicht eine Ausnahme, denn in diesem
 Fall 
\emph on
ist
\emph default
 \SpecialChar LyX
 bis zu einem gewissen Grad in der Lage, aus den Informationen über die
 Darstellung in \SpecialChar LyX
 Informationen über die Ausgabe in einem Browser (über CSS)
 abzuleiten.
 Aber auch in diesem Fall bleibt die prinzipielle Trennung in Kraft und
 sollte berücksichtigt werden.
 Weitere Ausführungen dazu finden Sie in Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:XHTML-Spezifikationen"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Section
Installation eines neuen \SpecialChar LaTeX
-Paketes
\end_layout

\begin_layout Standard
Bei manchen \SpecialChar TeX
-Installationen fehlt möglicherweise das eine oder andere Paket,
 das Sie gerne mit \SpecialChar LyX
 verwenden würden.
 Zum Beispiel wollen Sie vielleicht Foil\SpecialChar TeX
 verwenden, ein Paket zur Erstellung
 von Dias und Folien für Overheadprojektoren.
 Moderne \SpecialChar LaTeX
-Distributionen wie \SpecialChar TeX
Live (2008 oder neuer) oder MiK\SpecialChar TeX
 besitzen ein
 grafisches Programm, um solche Pakete zu installieren.
 Bei MiK\SpecialChar TeX
 etwa starten Sie das Programm 
\begin_inset Quotes gld
\end_inset

Package
\begin_inset space ~
\end_inset

Manager
\begin_inset Quotes grd
\end_inset

, um eine Liste mit den verfügbaren Paketen zu bekommen.
 Um eines davon zu installieren, rechtsklicken Sie oder benutzen den entsprechen
den Werkzeugleistenknopf.
\end_layout

\begin_layout Standard
Falls Ihre \SpecialChar LaTeX
-Distribution keinen Paketmanager besitzt, oder falls das Paket
 nicht direkt über Ihre Distribution verfügbar ist, folgen Sie diesen Schritten
 um es manuell zu installieren:
\end_layout

\begin_layout Enumerate
Besorgen Sie sich das Paket von 
\begin_inset CommandInset href
LatexCommand href
name "CTAN"
target "http://www.ctan.org/"
literal "false"

\end_inset

 oder einer anderen Quelle.
\end_layout

\begin_layout Enumerate
Falls das Paket eine Datei mit der Endung 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.ins
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 enthält (was bei Foil\SpecialChar TeX
 der Fall ist), dann öffnen sie eine Kommandozeile
 wechseln in das Verzeichnis der Datei und führen den Befehl 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
latex foiltex.ins
\end_layout

\end_inset

 aus.
 Sie haben damit dass Paket entpackt und haben alle Dateien, um es zu installier
en.
 Die meisten \SpecialChar LaTeX
-Pakete sind nicht gepackt und man kann direkt mit dem nächsten
 Schritt weitermachen.
\end_layout

\begin_layout Enumerate
Nun müssen Sie entscheiden, ob das Paket für alle Nutzer oder nur für Sie
 verfügbar sein soll.
\end_layout

\begin_deeper
\begin_layout Enumerate
Bei *nix Systemen (Linux, OSX, etc.) installieren Sie, wenn Sie das Paket
 für alle Nutzer installieren möchten, dieses in den 
\begin_inset Quotes gld
\end_inset

lokalen
\begin_inset Quotes grd
\end_inset

 \SpecialChar TeX
 Ordner; anderenfalls installieren Sie es in den eigenen 
\begin_inset Quotes gld
\end_inset

Benutzer
\begin_inset Quotes grd
\end_inset

-\SpecialChar TeX
-Ordner.
 Wo man diese Ordner anlegt, sofern sie nicht schon existieren, hängt von
 Ihrem System ab.
 Dazu schauen Sie in die Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
texmf.cnf
\end_layout

\end_inset

.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Diese befindet sich normalerweise im Ordner 
\family sans
$TEXMF/web2c
\family default
.
 Falls nicht, führen Sie den Befehl 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
kpsewhich texmf.cnf
\end_layout

\end_inset

 aus, um sie zu lokalisieren.
\end_layout

\end_inset

 Der Ort des lokalen \SpecialChar TeX
-Ordners ist in der Variable 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TEXMFLOCAL
\end_layout

\end_inset

 definiert; es ist üblicherweise der Pfad 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

/usr/local/share/texmf/
\end_layout

\end_inset

 oder 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

/usr/local/texlive/XXXX
\end_layout

\end_inset

, wobei XXXX das Jahr der installierten \SpecialChar TeX
Live-Distribution ist.
 Der Ort des Benutzer-\SpecialChar TeX
-Ordners ist in der Variable 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TEXMFHOME
\end_layout

\end_inset

 definiert und ist üblicherweise der Pfad 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

$HOME/texmf/
\end_layout

\end_inset

 oder 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

$HOME/.texliveXXXX
\end_layout

\end_inset

.
 (Wenn diese Variablen nicht vordefiniert sind, müssen Sie diese selbst
 definieren.) Sie brauchen wahrscheinlich Administrator-Rechte um in den
 lokalen \SpecialChar TeX
-Ordner zu schreiben, beim Benutzer-\SpecialChar TeX
-Ordner ist die nicht nötig.
\begin_inset Newline newline
\end_inset

Allgemein empfiehlt es sich, Pakete in den Benutzer-\SpecialChar TeX
-Ordner zu installieren,
 da dieser nicht verändert oder gar überschrieben wird, wenn Sie ihr System
 aktualisieren.
 Des Weiteren wird er zusammen mit Ihren Nutzerdaten gesichert, wenn Sie
 ein Backup machen (was Sie natürlich regelmäßig tun).
\end_layout

\begin_layout Enumerate
Unter Windows gehen Sie, wenn Sie das Paket für alle Nutzer installieren
 möchten, in den Ordner, in dem \SpecialChar LaTeX
 installiert ist und wechseln dort in das
 Verzeichnis 
\family typewriter
~tex
\backslash
latex
\family default
 (verwendet man MiK\SpecialChar TeX
, wäre es standardmäßig der Ordner 
\family typewriter
~:
\backslash
Programme
\backslash
MiKTeX
\backslash
tex
\backslash
latex
\family default
).
 Legen Sie dort einen neuen Ordner mit dem Namen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
foiltex
\end_layout

\end_inset

 an und kopieren Sie alle Dateien des Pakets hinein.
 Wenn das Paket nur für den aktuellen Benutzer verfügbar sein soll bzw.
 Sie keine Administrator-Rechte haben, tun Sie dasselbe, aber im lokalen
 \SpecialChar LaTeX
-Ordner.
 Bei MiK\SpecialChar TeX

\begin_inset space ~
\end_inset

2.9 wäre das unter WinXP der Ordner
\begin_inset Newline newline
\end_inset


\family sans
~:
\backslash
Dokumente und Einstellungen
\backslash
<Benutzername>
\backslash
Anwendungsdaten
\backslash

\begin_inset Newline newline
\end_inset


\begin_inset Phantom HPhantom
status open

\begin_layout Plain Layout

\family sans
~:
\backslash

\end_layout

\end_inset

MiKTeX
\backslash
2.9
\backslash
tex
\backslash
latex
\family default

\begin_inset Newline newline
\end_inset

, unter WinVista wäre es der Ordner
\begin_inset Newline newline
\end_inset


\family sans
~:
\backslash
Users
\backslash
<Benutzername>
\backslash
AppData
\backslash
Roaming
\backslash
2.9
\backslash
MiKTeX
\backslash
tex
\backslash
latex
\family default
 .
\end_layout

\end_deeper
\begin_layout Enumerate
Jetzt muss man \SpecialChar LaTeX
 nur noch mitteilen, dass es neue Dateien gibt.
 Die ist je nach \SpecialChar LaTeX
-Distribution anders:
\end_layout

\begin_deeper
\begin_layout Enumerate
Bei \SpecialChar TeX
Live führen Sie von einer Kommandozeile den Befehl 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
texhash
\end_layout

\end_inset

 aus.
 Wenn Sie das Paket für alle Nutzer installiert haben, brauchen sie dazu
 wahrscheinlich Administrator-Rechte.
\end_layout

\begin_layout Enumerate
Bei MiK\SpecialChar TeX
 starten Sie, wenn Sie das Paket für alle Nutzer installiert haben,
 das Programm 
\begin_inset Quotes gld
\end_inset

Settings
\begin_inset space ~
\end_inset

(Admin)
\begin_inset Quotes grd
\end_inset

 und drücken dann auf den Kopf 
\begin_inset Quotes gld
\end_inset

Refresh FNDB
\begin_inset Quotes grd
\end_inset

.
 Anderenfalls starten Sie das Programm 
\begin_inset Quotes gld
\end_inset

Settings
\begin_inset Quotes grd
\end_inset

 und machen dasselbe.
\end_layout

\end_deeper
\begin_layout Enumerate
Nun muss man \SpecialChar LyX
 noch mitteilen, dass es neue Pakete gibt.
 Verwenden Sie dazu in \SpecialChar LyX
 das Menü 
\begin_inset Info
type  "menu"
arg   "reconfigure"
\end_inset

 und starten \SpecialChar LyX
 danach neu.
\end_layout

\begin_layout Standard
Nun ist das Paket installiert.
 In unserem Beispiel wird nun die Dokumentklasse 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FoilTeX
\end_layout

\end_inset

 im Menü 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen\SpecialChar menuseparator
Dokumentklasse
\family default
 (unter 
\begin_inset Quotes gld
\end_inset

Präsentationen
\begin_inset Quotes grd
\end_inset

) verfügbar sein.
\end_layout

\begin_layout Standard
Möchten sie eine \SpecialChar LaTeX
-Dokumentklasse verwenden, die generell nicht im Menü 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen\SpecialChar menuseparator
Dokumentklasse
\family default
 gelistet ist, müssen Sie dafür selbst eine Layout-Datei erstellen.
 Dies ist das Thema des nächsten Abschnitts.
\end_layout

\begin_layout Section
Layout-Dateitypen
\end_layout

\begin_layout Standard
Dieser Abschnitt beschreibt die verschiedenen Arten von \SpecialChar LyX
-Dateien, die Layout-Inf
ormationen enthalten können.
 Dort werden verschiedene Absatz- und Zeichenstile definiert, es wird bestimmt,
 wie \SpecialChar LyX
diese darstellt und wie sie in \SpecialChar LaTeX
, DocBook, XHTML oder sonstige Formate
 exportiert werden sollen.
\end_layout

\begin_layout Standard
Wir bieten Ihnen hier eine umfassende Dokumentation zum Verfassen von Layout-Dat
eien.
 Da es aber so viele verschiedene nur schon von \SpecialChar LaTeX
 unterstütze Dokumenttypen
 gibt, können wir nicht jedes Problem, vor dem Sie vielleicht stehen, behandeln.
 Die \SpecialChar LyX
-Benutzer-Mailingliste wird aber von vielen Leuten gelesen, die Erfahrung
 mit dem Layout-Design haben und die Ihnen gerne helfen.
 Zögern Sie also nicht, offene Fragen dort zu stellen.
\end_layout

\begin_layout Standard
Wenn Sie vor der Aufgabe stehen, eine neue Layout-Datei zu schreiben, ist
 es zunächst einmal sehr hilfreich, die Layouts zu studieren, die \SpecialChar LyX
 bereits
 enthält.
 Wenn Sie eine Layout-Datei für eine \SpecialChar LaTeX
-Dokumentklasse geschrieben haben,
 die auch von andern verwendet wird, sollten Sie überlegen, dieses Layout
 auf der 
\begin_inset CommandInset href
LatexCommand href
name "Seite ,Layouts` des LyX-Wiki"
target "http://wiki.lyx.org/Layouts/Layouts"
literal "false"

\end_inset

 zu verlinken oder es vielleicht sogar an die \SpecialChar LyX
-Entwicklerliste zu schicken,
 damit es in \SpecialChar LyX
 selbst aufgenommen wird.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Beachten Sie, dass \SpecialChar LyX
 der 
\emph on
\lang english
General Public License
\emph default
\lang ngerman
 (GPL) unterliegt.
 Ihr Beitrag müsste auch dieser Lizenz unterworfen werden.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Layout-Module
\begin_inset CommandInset label
LatexCommand label
name "subsec:Layout-Module"

\end_inset


\end_layout

\begin_layout Standard
Wir haben bislang immer von 
\begin_inset Quotes gls
\end_inset

Layout-Dateien
\begin_inset Quotes grs
\end_inset

 gesprochen, tatsächlich gibt es aber unterschiedliche Arten von Dateien,
 die Layout-Informationen enthalten.
 Layout-Dateien im engeren Sinn haben die Endung 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.layout
\end_layout

\end_inset

 und stellen \SpecialChar LyX
 Information über Dokumentklassen zur Verfügung.
 Seit \SpecialChar LyX
 1.6 gibt es jedoch auch so genannte Layout-Module, die zusätzliche
 Layout-Informationen enthalten können.
 Sie haben die Endung 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.module
\end_layout

\end_inset

.
 Module verhalten sich, grob gesprochen, so zu \SpecialChar LaTeX
-Paketen, wie sich Layout-Dateien
 zu \SpecialChar LaTeX
-Klassen verhalten, und manche Module – wie etwa das Modul 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
endnotes
\end_layout

\end_inset

 – bieten spezifische Unterstützung für ein bestimmtes Paket.
 In einiger Hinsicht sind Module ganz ähnlich wie die von Layout-Dateien
 eingebundene, Dateien
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Diese haben normalerweise die Endung 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.inc
\end_layout

\end_inset

.
\end_layout

\end_inset

 – bspw.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdsections.inc
\end_layout

\end_inset

.
 So sind sie nicht an eine bestimmte Dokumentklasse gebunden, sondern können
 in verschiedenen Klassen genutzt werden.
 Ein wichtiger Unterschied ist jedoch, dass die eingebundenen Dateien nur
 genutzt werden können, wenn die Layout-Datei hierfür bearbeitet wird.
 Module hingegen können einfach im Dialog 
\begin_inset Info
type  "menu"
arg   "dialog-show document"
\end_inset

 ausgewählt werden.
\end_layout

\begin_layout Standard
Die Erstellung eines Moduls ist der einfachste Weg, um mit dem Verfassen
 von Layouts zu beginnen, denn Module können sehr einfach sein und etwa
 nur einen einzelnen Absatzstil oder eine benutzerdefinierte Einfügung definiere
n.
 Auf der anderen Seite können Module im Prinzip aber alles enthalten, was
 auch Layout-Dateien enthalten.
\end_layout

\begin_layout Standard
Nachdem Sie ein neues Modul geschrieben und dieses in den Ordner 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
layouts/
\end_layout

\end_inset

 in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UserDir
\end_layout

\end_inset

 kopiert haben, müssen Sie \SpecialChar LyX
 rekonfigurieren (
\begin_inset Info
type  "menu"
arg   "reconfigure"
\end_inset

) und dann neu starten, damit das Modul in der Benutzeroberfläche zugänglich
 wird.
 Falls Sie existierende Module modifizieren, ist diese Prozedur nicht nötig:
 Änderungen werden verfügbar, sobald Sie in 
\begin_inset Info
type  "menu"
arg   "dialog-show document"
\end_inset

 irgend etwas ändern und OK drücken.
 
\emph on
Wir raten aber dringend, dass Sie Ihre Dokumente sichern, bevor Sie dies
 tun.
 
\emph default
Um sicherzugehen, 
\emph on
sollten Sie lieber nicht an Dokumenten arbeiten, während Sie dort verwendete
 Module edieren
\emph default
.
 Obwohl die Entwickler natürlich alles tun, um \SpecialChar LyX
 in solchen Situationen stabil
 zu halten, können Fehler in Ihren Modulen manchmal ungewollte Effekte haben.
\end_layout

\begin_layout Subsubsection
Lokales Format
\end_layout

\begin_layout Standard
Module sind für \SpecialChar LyX
 das, was Pakete für \SpecialChar LaTeX
 sind.
 Manchmal braucht man jedoch möglicherweise eine spezifische Einfügung oder
 einen Absatzstil nur für ein bestimmtes Dokument.
 Hierfür extra ein Modul zu schreiben, ist mit Kanonen auf Spatzen geschossen.
 Viel besser für solche Zwecke ist das, was wir 
\begin_inset Quotes gld
\end_inset

lokales Format
\begin_inset Quotes grd
\end_inset

 nennen.
\end_layout

\begin_layout Standard
Sie finden dieses in 
\begin_inset Info
type  "menu"
arg   "dialog-show document"
\end_inset

 unter 
\family sans
Lokales Format
\family default
.
 In das große Eingabefeld dort können Sie alles eingeben, was Sie in eine
 Layout-Datei oder ein Modul eingeben können.
 Das lokale Format eines Dokuments können Sie sich im Grunde als Modul vorstelle
n, das nur dem entsprechenden Dokument zugänglich ist (alle Definitionen
 werden direkt im Dokument gespeichert und können so auch leicht mit dem
 Dokument weitergegeben werden).
 Wie in Layout-Dateien und Modulen auch sollten Sie das 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Format
\end_layout

\end_inset

 spezifizieren (s.
\begin_inset space \thinspace{}
\end_inset

u.).
 Dabei ist jedes (bekannte) Format möglich, sinnvollerweise sollten Sie
 aber das jeweils aktuelle verwenden (das aktuelle Format in \SpecialChar LyX
 2.3 ist 63).
\end_layout

\begin_layout Standard
Sobald Sie etwas in das Eingabefeld in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Lokales Format
\end_layout

\end_inset

 eingegeben haben, aktiviert \SpecialChar LyX
 den Knopf 
\begin_inset Quotes gld
\end_inset

Validieren
\begin_inset Quotes grd
\end_inset

 unter diesem Feld.
 Wenn Sie darauf klicken (was Sie tun müssen, bevor Sie OK klicken können),
 überprüft \SpecialChar LyX
, ob das, was Sie eingegeben haben, im spezifizierten Format
 auch korrekt ist.
 \SpecialChar LyX
 meldet, ob dies der Fall ist, aber leider nicht, 
\emph on
was
\emph default
 gegebenenfalls falsch ist.
 Wenn Sie \SpecialChar LyX
 von einer Konsole gestartet haben, wird dies aber dort ausgegeben.
 Solange es Fehler in der Definition gibt, können Sie Ihr lokales Format
 nicht speichern.
\end_layout

\begin_layout Standard
Die Warnungen, die wir am Ende des vorherigen Abschnitts ausgesprochen haben,
 gelten auch hier: Spielen Sie nicht mit dem lokalen Format herum, während
 Sie am Dokument arbeiten, besonders nicht, wenn Sie ungesicherte Änderungen
 haben.
 Wenn Sie dies beachten, kann das lokale Format (in einem Testdokument)
 aber als sehr hilfreiche Methode dienen, um Layout-Ideen auszuprobieren
 oder etwa Modulideen auszuprobieren.
\end_layout

\begin_layout Subsection
Layout für 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
.sty
\end_layout

\end_inset

-Dateien
\end_layout

\begin_layout Standard
Wenn Sie eine neue \SpecialChar LaTeX
-Klasse unterstützen wollen, heißt das in der Regel,
 dass Sie entweder einen \SpecialChar LaTeX
-Stil (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.sty
\end_layout

\end_inset

) oder eine \SpecialChar LaTeX2e
-Klasse (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.cls
\end_layout

\end_inset

) vorliegen haben, für den es ein \SpecialChar LyX
-Layout zu schreiben gilt.
 Ersteres ist normalerweise relativ einfach.
 Letzteres ist zumeist etwas anspruchsvoller.
 Wenn Sie eine neue DocBook-DTD unterstützen wollen, können Sie die Anmerkungen
 teilweise übertragen.
\end_layout

\begin_layout Standard
Der einfachere Fall ist, wie gesagt, dass die Dokumentklasse, die Sie unterstütz
en wollen, als Stildatei vorliegt, die ihrerseits auf eine bereits unterstützte
 \SpecialChar LaTeX
-Klasse aufsetzt.
 Zur Illustration nehmen wir an, dass die Stildatei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
myclass.sty
\end_layout

\end_inset

 heißt und dass Sie zusammen mit der \SpecialChar LaTeX
-Klasse 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
report.cls
\end_layout

\end_inset

, die eine Standardklasse ist, verwendet werden soll.
 
\end_layout

\begin_layout Standard
Beginnen Sie damit, dass Sie eine Kopie der existierenden Layout-Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
report.layout
\end_layout

\end_inset

 in Ihrem lokalen Verzeichnis unter dem Namen der neuen Klasse, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
myclass.layout
\end_layout

\end_inset

, ablegen:
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Mit dem lokalen Verzeichnis meinen wir das 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UserDir
\end_layout

\end_inset

, siehe oben Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Das-lokale-Konfigurationsverz"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
cp report.layout ~/.lyx/layouts/myclass.layout
\end_layout

\begin_layout Standard
Dann bearbeiten Sie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
myclass.layout
\end_layout

\end_inset

 und ändern die Zeile
\end_layout

\begin_layout LyX-Code

\backslash
DeclareLaTeXClass{Report (Standard Class)}
\end_layout

\begin_layout Standard
in
\end_layout

\begin_layout LyX-Code

\backslash
DeclareLaTeXClass[report, myclass.sty]{Report (My Class)}
\end_layout

\begin_layout Standard
Dann fügen Sie gegen Anfang der Datei ein:
\end_layout

\begin_layout LyX-Code
Preamble 
\begin_inset Newline newline
\end_inset

    
\backslash
usepackage{myclass}
\begin_inset Newline newline
\end_inset

EndPreamble
\end_layout

\begin_layout Standard
Starten Sie \SpecialChar LyX
 und wählen Sie 
\begin_inset Info
type  "menu"
arg   "reconfigure"
\end_inset

.
 Dann starten Sie \SpecialChar LyX
 neu und beginnen ein neues Dokument.
 Sie sollten nun 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
Report (My Class)
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 in der Liste der auswählbaren Dokumentklassen in 
\begin_inset Info
type  "menu"
arg   "dialog-show document"
\end_inset

 finden.
 Es ist wahrscheinlich, dass sich einige der Überschriftenbefehle und andere
 Dinge in Ihrer neuen Klasse anders verhalten als in der Basisklasse (hier:
 Report).
 Sie können mit den vorhandenen Definitionen spielen, um dies anzupassen.
 Die Layout-Informationen für Überschriften sind nicht in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
report.layout
\end_layout

\end_inset

 selbst, sondern in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdsections.inc
\end_layout

\end_inset

 enthalten, aber Sie müssen deren Inhalt nicht kopieren, um die Definitionen
 zu verändern.
 Statt dessen können Sie Änderungen einfach in Ihrer neuen Layout-Datei
 vornehmen, und zwar nach der Zeile 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Input stdclass.inc
\end_layout

\end_inset

, die ihrerseits 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdsections.inc
\end_layout

\end_inset

 einbindet.
 Sie können zum Beispiel folgenden Zeilen einfügen:
\end_layout

\begin_layout LyX-Code
Style Chapter
\end_layout

\begin_layout LyX-Code
    Font
\end_layout

\begin_layout LyX-Code
        Family Sans
\end_layout

\begin_layout LyX-Code
    EndFont
\end_layout

\begin_layout LyX-Code
End
\end_layout

\begin_layout Standard
Dies ändert die Schrift, die in \SpecialChar LyX
 zur Darstellung von Kapitelüberschriften
 verwendet wird, in eine serifenlose.
 Die bestehende Definition des Kapitelstils wird so überschrieben (bzw.
 ergänzt).
 
\end_layout

\begin_layout Standard
Ihr neues Paket stellt vielleicht auch neue Befehle oder Umgebungen bereit,
 die nicht in der Basisklasse enthalten sind.
 In diesem Fall können Sie diese zur Layout-Datei hinzufügen Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Das-Layout-Dateiformat"

\end_inset

 erläutert dies genauer.
\end_layout

\begin_layout Standard
Falls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
myclass.sty
\end_layout

\end_inset

 mit verschiedenen Dokumentklassen verwendet werden kann, und vielleicht
 auch falls nicht, ist es vielleicht noch einfacher, statt einer Layout-Datei
 ein Modul zu schreiben.
 Das einfachst mögliche Modul würde so aussehen:
\end_layout

\begin_layout LyX-Code
#
\backslash
DeclareLyXModule{My Class} 
\end_layout

\begin_layout LyX-Code
#DescriptionBegin 
\end_layout

\begin_layout LyX-Code
#Support for myclass.sty.
\end_layout

\begin_layout LyX-Code
#DescriptionEnd
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout LyX-Code
Format 63
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout LyX-Code
Preamble
\begin_inset Newline newline
\end_inset

    
\backslash
usepackage{mypkg}
\begin_inset Newline newline
\end_inset

EndPreamble
\end_layout

\begin_layout Standard
Komplexere Module modifizieren vielleicht die Definition vorhandener Konstrukte
 oder ergänzen neue.
 Auch dies wird in Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Das-Layout-Dateiformat"

\end_inset

 ausführlicher besprochen.
\end_layout

\begin_layout Subsection
Layout für 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
.cls
\end_layout

\end_inset

-Dateien
\end_layout

\begin_layout Standard
Hier gibt es zwei Möglichkeiten.
 Eine ist, dass die \SpecialChar LaTeX
-Klasse selbst auf einer bestehenden anderen \SpecialChar LaTeX
-Klasse
 basiert.
 Viele Klassen für Dissertationen basieren etwa auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
book.cls
\end_layout

\end_inset

.
 Um zu prüfen, ob das in Ihrem Fall so ist, schauen Sie in Ihrer Klasse,
 ob es eine Zeile wie diese gibt:
\end_layout

\begin_layout LyX-Code

\backslash
LoadClass{book}
\end_layout

\begin_layout Standard
Falls ja, können Sie im Großen und Ganzen wie im vorherigen Abschnitt beschriebe
n vorgehen, mit Ausnahme der Zeile 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Declare\SpecialChar LaTeX
Class
\end_layout

\end_inset

.
 Falls Ihre neue Klasse 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
thesis
\end_layout

\end_inset

 heißt und auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
book
\end_layout

\end_inset

 basiert, sollte diese Zeile lauten:
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Und am einfachsten ist es, wenn Sie die Layout-Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
thesis.layout
\end_layout

\end_inset

 nennen: \SpecialChar LyX
 nimmt an, wenn nicht anders angegeben (siehe unten), dass die
 Layout-Datei denselben Namen hat wie die \SpecialChar LaTeX
-Klasse, die sie unterstützt.
 
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code

\backslash
DeclareLaTeXClass[thesis,book]{Thesis}
\end_layout

\begin_layout Standard
Die zweite Möglichkeit ist, dass die neue Klasse auf keiner anderen basiert.
 Dann müssen Sie wohl ein komplett neues Layout erstellen.
 Aber auch dann können Sie Bestandteile aus anderen Layouts übernehmen,
 die sich (partiell) ähnlich verhalten und diese dann gegebenenfalls modifiziere
n.
 Zumindest sollten Sie eine existierende Layout-Datei als Startpunkt nehmen,
 damit Sie sehen, um was Sie sich alles kümmern müssen.
 Die Einzelheiten folgen unten.
\end_layout

\begin_layout Subsection
Vorlagen erstellen
\begin_inset CommandInset label
LatexCommand label
name "subsec:Vorlagen-erstellen"

\end_inset


\end_layout

\begin_layout Standard
Sobald Sie eine Layout-Datei für eine neue Dokumentklasse geschrieben haben,
 werden Sie vielleicht auch eine Vorlage dafür schreiben wollen.
 Eine Vorlage ist eine Art Tutorium
\emph on
 
\emph default
für Ihr Layout, sie zeigt, wie diese verwendet wird (unter Verwendung von
 Blindtext).
 Schauen Sie sich einfach bestehende Vorlagen an, um zu sehen, wie man dies
 gestalten kann.
\end_layout

\begin_layout Standard
Vorlagen sind im Grunde normale \SpecialChar LyX
-Dokumente und werden auch so erstellt.
 Der einzige Unterschied ist, dass normale \SpecialChar LyX
-Dokumente alle möglichen Einstellung
en enthalten, beispielsweise hinsichtlich Schriftarten und Seitengrößen.
 Vorlagen enthalten diese oft nicht, um die Anwender nicht zu sehr einzuschränke
n.
 Daher werden bei Vorlagen die entsprechenden Befehle oft entfernt (wie
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
font_roman
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
papersize
\end_layout

\end_inset

).
 Dies können Sie mit einem einfachen Text-Editor, etwa 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
vi
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
notepad
\end_layout

\end_inset

, erledigen.
\end_layout

\begin_layout Standard
Legen Sie die fertige Vorlage in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UserDir/templates/
\end_layout

\end_inset

 ab, kopieren Sie ggf.
 die, die Sie verwenden, von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyXDir/templates/
\end_layout

\end_inset

 in dasselbe Verzeichnis und ändern Sie den Pfad zu den Vorlagen in 
\begin_inset Info
type  "menu"
arg   "dialog-show prefs"
\end_inset

 unter 
\family sans
Pfade
\family default
.
\end_layout

\begin_layout Standard
Beachten Sie übrigens, dass es eine Vorlage mit besonderer Funktion gibt:
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
defaults.lyx
\end_layout

\end_inset

.
 Diese wird jedes Mal geladen, wenn Sie mit 
\begin_inset Info
type  "menu"
arg   "buffer-new"
\end_inset

 ein neues Dokument erstellen, um sinnvolle Voreinstellungen vorzunehmen.
 Um diese Vorlage zu verändern, müssen Sie nur ein Dokument mit den gewünschten
 Einstellungen öffnen und in 
\begin_inset Info
type  "menu"
arg   "dialog-show document"
\end_inset

 den Knopf 
\family sans
Als Dokument-Voreinstellung speichern
\family default
 betätigen.
\end_layout

\begin_layout Subsection
Alte Layout-Dateien auf den neuesten Stand bringen
\end_layout

\begin_layout Standard
Das Format der Layout-Dateien ändert sich mit jeder \SpecialChar LyX
-Version.
 Daher müssen die Layout-Dateien in das neue Format konvertiert werden.
 Wenn \SpecialChar LyX
 eine Layout-Datei eines älteren Formats liest, ruft es automatisch
 das Skript 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
layout2layout.py
\end_layout

\end_inset

 auf um es in eine temporäre Datei im aktuellen Format zu konvertieren.
 Die Originaldatei wird nicht verändert.
 Wenn Sie die Layout-Datei öfter verwenden, dann können Sie sie permanent
 in das neue Format konvertieren, so dass \SpecialChar LyX
 dies nicht jedes Mal tun muss.
 Um das zu tun, machen sie Folgendes:
\end_layout

\begin_layout Enumerate
Benennen Sie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeineKlasse.layout
\end_layout

\end_inset

 in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeineKlasse.alt
\end_layout

\end_inset

 um.
\end_layout

\begin_layout Enumerate
Rufen Sie den Befehl
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
python LyXDir/scripts/layout2layout.py myclass.old myclass.layout
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

auf, wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyXDir
\end_layout

\end_inset

 der Name Ihres \SpecialChar LyX
-Systemverzeichnisses ist.
\end_layout

\begin_layout Standard
Beachten Sie, das manuelle Konvertierungen keine eingefügten Dateien mit
 konvertieren.
 Diese müssen separat konvertiert werden.
\end_layout

\begin_layout Subsection
Cite-Engine-Dateien
\begin_inset CommandInset label
LatexCommand label
name "subsec:Cite-Engine-Dateien"

\end_inset


\end_layout

\begin_layout Standard
Cite-Engine-Dateien (Endung 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
*.citeengine
\end_layout

\end_inset

) stellen eine besondere Form von Layout-Dateien dar.
 Sie finden diese im Unterordner 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
citeengines/
\end_layout

\end_inset

.
 Sie dienen dazu, die Spezifika von \SpecialChar LaTeX
-Paketen zu definieren, welche zur Erstellun
g von Literaturverzeichnissen verwendet werden (etwa 
\family sans
Natbib
\family default
,
\family sans
 Jurabib
\family default
 oder 
\family sans
Biblatex
\family default
), legen aber auch fest, wie normale Bib\SpecialChar TeX
-Literaturverweise (ohne zusätzliche
 Pakete) in \SpecialChar LyX
 dargestellt werden.
 
\end_layout

\begin_layout Standard
Genauer wird dort spezifiziert, welche Pakete \SpecialChar LyX
 laden muss, welche Befehle
 für Literaturverweise verfügbar sind, wie diese in \SpecialChar LyX
 dargestellt werden
 (im Arbeitsbereich, den Dialogen oder im Kontextmenü) und wie sie in der
 XHTML- und Textausgabe erscheinen.
 Außerdem legen diese Dateien Stilvarianten (Autor-Jahr, Nummerisch etc.)
 und deren Spezifika fest.
 Die Cite-Engine-Dateien werden auch verwendet, um die Optionen zu bestimmten,
 die in 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen\SpecialChar menuseparator
Literaturverzeichnis
\family default
 erscheinen.
\end_layout

\begin_layout Standard
Auch wenn eine Cite-Engine-Datei im Grunde eine normale Layout-Datei ist,
 die theoretisch jede beliebige Layout-Information enthalten könnte, enthält
 sie üblicherweise nur literaturspezifische Parameter wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MaxCiteNames
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CiteFramework
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CiteEngine
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CiteFormat
\end_layout

\end_inset

-Blöcke.
 Die Syntax der letzten beiden wird in Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Citation-Engine-Beschreibung"
plural "false"
caps "false"
noprefix "false"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Literaturverweisformat"

\end_inset

 sowie auch in den Dateien selbst beschrieben.
\end_layout

\begin_layout Section
Das Layout-Dateiformat
\begin_inset CommandInset label
LatexCommand label
name "sec:Das-Layout-Dateiformat"

\end_inset


\end_layout

\begin_layout Standard
Die folgenden Abschnitte beschreiben wie Layout-Dateien aufgebaut sind und
 erstellt werden.
 Wir empfehlen bei der Erstellung von Layouts langsam zu beginnen und sich
 Stück für Stück vorzuarbeiten.
 Es ist nicht wirklich schwer, jedoch sind die möglichen Optionen manchmal
 etwas erschlagend, besonders wenn man zu viele davon auf einmal ausprobiert.
 Am einfachsten ist es, wenn man bestehende Layout-Dateien von \SpecialChar LyX
 als Beispiel
 nimmt oder diese umgestaltet.
\end_layout

\begin_layout Standard
Beachten Sie dass alle Marken in Layout-Dateien nicht durch Groß- und Kleinschre
ibung zu unterscheiden sind.
 Das bedeutet dass 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Style
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
style
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
StYlE
\end_layout

\end_inset

 dieselbe Marke sind.
 Die möglichen Argumente für die Marken sind hinter ihnen in eckigen Klammern
 angegeben.
 Das voreingestellte Argument ist 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
hervorgehoben
\end_layout

\end_inset

.
 Wenn das Argument einen Datentyp hat wie 
\begin_inset Quotes gld
\end_inset

string
\begin_inset Quotes grd
\end_inset

 oder 
\begin_inset Quotes gld
\end_inset

float
\begin_inset Quotes grd
\end_inset

, wird die Voreinstellung so angezeigt: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=
\emph on
default
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Deklaration einer neuen Textklasse und Klassifikation
\end_layout

\begin_layout Standard
Zeilen, die mit einem 
\family typewriter
#
\family default
 beginnen, sind Kommentare.
 Mit einer Ausnahme: alle Textklassen sollten mit Zeilen ähnlich wie den
 folgenden beginnen:
\end_layout

\begin_layout LyX-Code

\size small
#% Do not delete the line below; configure depends on this
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
zu Deutsch: Löschen Sie die folgenden Zeilen nicht, da die Konfiguration
 davon abhängt
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareLaTeXClass{Article (Standard Class)}
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareCategory{Articles}
\end_layout

\begin_layout Standard
Die zweite und dritte Zeile wird benötigt, wenn Sie \SpecialChar LyX
 konfigurieren.
 Die Textklassen-Datei wird von dem \SpecialChar LaTeX
-Skript 
\family sans
chkconfig.ltx
\family default
 gelesen, und zwar in einem speziellen Modus, in dem 
\family typewriter
#
\family default
-Zeichen ignoriert werden.
 Die erste Zeile ist einfach ein \SpecialChar LaTeX
-Kommentar, in der zweiten muss die Textklasse
 deklariert werden und die dritte Zeile enthält die optionale Klassifikation
 der Klasse.
 Eine Datei namens 
\family typewriter
article.layout
\family default
, die mit diesen beiden Zeilen beginnt, definiert eine Textklasse mit dem
 Namen 
\family sans
article
\family default
 (der Name der Layout-Datei) und benutzt die \SpecialChar LaTeX
-Dokumentenklasse 
\family typewriter
article.cls
\family default
 (Standard ist, denselben Namen wie das Layout zu verwenden).
 Die Zeichenkette 
\begin_inset Quotes gld
\end_inset


\lang english
Article (Standard Class)
\lang ngerman

\begin_inset Quotes grd
\end_inset

, die oben erscheint, ist auch die Beschreibung, die später im Popup-Menü
 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen
\family default
 auftaucht.
 Die Kategorie (
\begin_inset Quotes gld
\end_inset


\lang english
Articles
\lang ngerman

\begin_inset Quotes grd
\end_inset

 im Beispiel) wird auch im Dialog 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen
\family default
 verwendet: Die Textklassen werden nach diesen Kategorien gruppiert (was
 üblicherweise Genres sind, typische Kategorien sind also 
\begin_inset Quotes gld
\end_inset

Artikel
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Quotes gld
\end_inset

Bücher
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Quotes gld
\end_inset

Berichte
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Quotes gld
\end_inset

Briefe
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Quotes gld
\end_inset

Präsentationen
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Quotes gld
\end_inset

Lebensläufe
\begin_inset Quotes grd
\end_inset

 usw.).
 Wenn keine Kategorie deklariert wurde, wird die Klasse in die Gruppe 
\begin_inset Quotes gld
\end_inset

Nicht
\begin_inset space ~
\end_inset

kategorisiert
\begin_inset Quotes grd
\end_inset

 getan.
\end_layout

\begin_layout Standard
Angenommen, Sie möchten Ihre eigene Textklasse schreiben, welche die \SpecialChar LaTeX

\begin_inset ERT
status open

\begin_layout Plain Layout

\begin_inset Quotes gld
\end_inset

=
\end_layout

\end_inset

Dokumentklasse 
\family typewriter
article
\family default
 benutzt, in der Sie aber das Aussehen der Kopfzeile verändert haben.
 Wenn Sie dann Ihre Textklasse in eine Datei namens 
\family typewriter
myarticle.layout
\family default
 schreiben, sollten die ersten beiden Zeilen der Datei etwa so aussehen:
\end_layout

\begin_layout LyX-Code

\size small
#% Do not delete the line below; configure depends on this
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareLaTeXClass[article]{Article (with My Own Headings)}
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareCategory{Articles}
\end_layout

\begin_layout Standard
Auf diese Weise deklarieren Sie eine Textklasse 
\family typewriter
myarticle
\family default
, die die \SpecialChar LaTeX

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

"=
\end_layout

\end_inset

Dokumentklasse 
\family typewriter
article.cls
\family default
 verwendet und (im Popup-Menü) beschrieben wird mit: 
\family sans
\lang english
Article (with My Own Headings
\lang ngerman
)
\family default
.
 Falls Ihre Textklasse auch noch von weiteren Paketen abhängt, können Sie
 das so angeben:
\end_layout

\begin_layout LyX-Code

\size small
#% Do not delete the line below; configure depends on this
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareLaTeXClass[article,foo.sty]{Article (with My Own Headings)}
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareCategory{Articles}
\end_layout

\begin_layout Standard
Dadurch wird angezeigt, dass Ihre Klasse auch das Paket 
\family typewriter
foo.sty
\family default
 verwendet.
 Schließlich können Sie auch Klassen für DocBook festlegen.
 Eine typische Deklaration sieht so aus:
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\size small
#% Do not delete the line below; configure depends on this
\end_layout

\begin_layout LyX-Code

\size small
# 
\backslash
DeclareDocBookClass[article]{SGML (DocBook Article)}
\end_layout

\begin_layout Standard
Diesen Deklarationen kann außerdem ein optionaler Parameter zugefügt werden,
 der den Namen der Dokumentenklasse festlegt (hier ist aber keine Liste
 erlaubt).
\end_layout

\begin_layout Standard
Eine Layout-Deklaration hat demnach, noch einmal zusammengefasst, die Form
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareLaTeXClass[Klasse,Paket.sty]{Layout-Beschreibung}
\end_layout

\begin_layout LyX-Code

\size small
#  
\backslash
DeclareCategory{Kategorie}
\end_layout

\begin_layout Standard
Die Klasse muss nur dann explizit genannt werden, wenn der Name der \SpecialChar LaTeX
-Klasse
 und der der \SpecialChar LyX
-Layoutdatei divergieren, oder wenn Sie Pakete laden.
 Wenn kein optionales Argument angegeben ist, nimmt \SpecialChar LyX
 an, dass die Klasse
 denselben Namen wie die Layout-Datei hat.
\end_layout

\begin_layout Standard
Wenn Sie eine Textklasse nach Ihrem Geschmack erstellt haben, müssen Sie
 die Datei nur noch in das Verzeichnis 
\family sans
LyX
\family typewriter
Dir/layouts/
\family default
 oder nach 
\family typewriter
UserDir/layouts
\family default
 kopieren und unter \SpecialChar LyX
 den Menüpunkt 
\family sans
Werkzeuge\SpecialChar menuseparator
Neu
\begin_inset space \space{}
\end_inset

konfigurieren
\family default
 auswählen.
 Nach dem Neustart von \SpecialChar LyX
 sollte Ihre Textklasse im Popup-Menü 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen
\family default
 auswählbar sein.
\end_layout

\begin_layout Standard
Ist das Layout einmal von \SpecialChar LyX
 erkannt, können Sie Änderungen direkt auch ohne
 Neustart sehen.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Das ist erst ab \SpecialChar LyX
 1.6 der Fall.
 Vorher war die Bearbeitung von Layout-Dateien mühsam und zeitraubend, weil
 man \SpecialChar LyX
 ständig neu starten musste.
\end_layout

\end_inset

 Sie können ein Neuladen des Layouts mithilfe der \SpecialChar LyX
Funktion 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
layout-reload
\end_layout

\end_inset

 erzwingen.
 Für diese Funktion gibt es standardmäßig kein Tastenkürzel.
 Sie können selbst eines definieren oder aber einfach die Funktion in den
 
\emph on
Minibuffer
\emph default
 eingeben.
 
\end_layout

\begin_layout Standard

\emph on
Aber Achtung
\emph default
: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
layout-reload
\end_layout

\end_inset

 ist ein komplexes Feature.
 Wir ersuchen Sie dringend, Ihr Dokument zu speichern, bevor Sie die Funktion
 verwenden.
 Eigentlich sollten Sie keine Layout-Dateien bearbeiten, während Sie an
 einem wichtigen Dokument arbeiten.
 Verwenden Sie ein Textdokument.
 Fehler in der Layout-Datei können üble Effekte haben.
 Insbesondere können sie dazu führen, dass \SpecialChar LyX
 das aktuelle Layout für ungültig
 hält und in ein anderes wechselt.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Ganz schlimme Fehler können sogar dazu führen, dass \SpecialChar LyX
 abstürzt, da manche
 Fehler dazu führen, dass \SpecialChar LyX
 
\emph on
gar keine
\emph default
 Layout-Informationen mehr lesen kann.
 Seien Sie also bitte vorsichtig.
\end_layout

\end_inset

 Zwar tut das \SpecialChar LyX
-Team alles, um \SpecialChar LyX
 in solchen Situationen stabil zu halten,
 aber Vorsicht ist bekanntlich die Mutter der Porzellankiste.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Wo wir gerade beim Rat geben sind: Machen Sie regelmäßig Backups.
 Und seien Sie nett zu Ihren Nachbarn.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Die Modul-Deklaration
\end_layout

\begin_layout Standard
Ein Modul muss mit einer Zeile wie die folgende beginnen:
\end_layout

\begin_layout LyX-Code
#
\backslash
Declare
\family sans
LyX
\family default
Module[endnotes.sty]{Endnotes} 
\end_layout

\begin_layout Standard
Das benötigte Argument in geschweiften Klammern ist der Name des Moduls,
 wie es in 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen\SpecialChar menuseparator
Module
\family default
 erscheinen soll.
 Das Argument in eckigen Klammern ist optional: Es deklariert alle \SpecialChar LaTeX
-Pakete,
 die das Modul benötigt.
 Es ist außerdem möglich die Form 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
von->zu
\end_layout

\end_inset

 als optionales Argument zu verwenden, das angibt, dass das Modul nur verwendet
 werden kann, wenn es eine Konvertierungsmöglichkeit zwischen den Formaten
 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
von
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
zu
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 gibt.
\end_layout

\begin_layout Standard
Der Modul-Deklaration sollten Zeilen zur Beschreibung wie die folgenden
 folgen:
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Vorzugsweise in Englisch, wenn das Modul als Teil von \SpecialChar LyX
 veröffentlicht werden
 soll.
 Diese Beschreibung wird dann in \SpecialChar LyX
' Liste der zu übersetzenden Zeichenketten
 erscheinen und übersetzt werden.
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
#DescriptionBegin 
\end_layout

\begin_layout LyX-Code
#Adds an endnote command, in addition to footnotes.
 
\end_layout

\begin_layout LyX-Code
#You will need to add  
\backslash
theendnotes in TeX code where you 
\end_layout

\begin_layout LyX-Code
#want the endnotes to appear.
 
\end_layout

\begin_layout LyX-Code
#DescriptionEnd 
\end_layout

\begin_layout LyX-Code
#Requires: somemodule | othermodule
\end_layout

\begin_layout LyX-Code
#Excludes: badmodule
\end_layout

\begin_layout Standard
Die Beschreibung wird in 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen\SpecialChar menuseparator
Module
\family default
 verwendet, um dem Nutzer zu erläutern, was das Modul macht.
 Die Zeile mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requires
\end_layout

\end_inset

 wird verwendet, um andere Module anzugeben, die dieses Modul verwenden
 muss; die Zeile mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Excludes
\end_layout

\end_inset

 wird verwendet, um Module anzugeben, die mit diesem Modul nicht verwendet
 werden dürfen.
 Beide Zeilen sind optional und mehrere Module müssen , wie gezeigt, mit
 einem 
\begin_inset Quotes gld
\end_inset

|
\begin_inset Quotes grd
\end_inset

 getrennt werden.
 Beachten Sie dass die benötigten Module disjunktiv behandelt werden: 
\emph on
Mindestens eins
\emph default
 der benötigten Module muss verwendet werden.
 Dementsprechend darf 
\emph on
keines
\emph default
 der ausgeschlossenen Modul verwendet werden.
 Beachten Sie auch, dass Module durch ihren Dateinamen ohne die Dateiendung
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.module
\end_layout

\end_inset

 angegeben werden.
 Daher ist 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EinModul
\end_layout

\end_inset

 ist in Wirklichkeit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EinModul.module
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Die CiteEngine-Dateideklaration
\end_layout

\begin_layout Standard
Eine Cite-Engine-Datei muss mit einer Zeile wie dieser beginnen:
\end_layout

\begin_layout LyX-Code
#
\backslash
DeclareLyXCiteEngineModule[biblatex.sty]{Biblatex}
\end_layout

\begin_layout Standard
Das benötigte Argument in geschweiften Klammern ist der Name des Zitierstils,
 wie er in in 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen\SpecialChar menuseparator
Literaturverzeichnis
\family default
 erscheinen soll.
 Das Argument in eckigen Klammern ist optional: Es deklariert alle \SpecialChar LaTeX
-Pakete,
 die die Cite Engine benötigt.
\end_layout

\begin_layout Standard
Der CiteEngine-Deklaration sollten Zeilen zur Beschreibung wie die folgenden
 folgen:
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Vorzugsweise in Englisch, wenn die Cite Engine als Teil von \SpecialChar LyX
 veröffentlicht
 werden soll.
 Diese Beschreibung wird dann in \SpecialChar LyX
' Liste der zu übersetzenden Zeichenketten
 erscheinen und übersetzt werden.
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
# DescriptionBegin
\end_layout

\begin_layout LyX-Code
#   Biblatex supports many author-year and numerical styles.
\end_layout

\begin_layout LyX-Code
#   It is mainly aimed at the Humanities.
 It is highly
\end_layout

\begin_layout LyX-Code
#   customizable, fully localized and provides many features
\end_layout

\begin_layout LyX-Code
#   that are not possible with BibTeX.
 The use of 'biber' as
\end_layout

\begin_layout LyX-Code
#   bibliography processor is advised.
\end_layout

\begin_layout LyX-Code
# DescriptionEnd
\end_layout

\begin_layout Standard
Die Beschreibung wird in 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen\SpecialChar menuseparator
Literaturverzeichnis
\family default
 verwendet, um dem Nutzer zu erläutern, was der Stil bietet.
\end_layout

\begin_layout Subsection
Dateiformat
\end_layout

\begin_layout Standard
Die erste Zeile, die kein Kommentar ist, muss die Dateiformatnummer enthalten:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Format
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int
\end_layout

\end_inset

] Die Nummer des Formats der Layout-Datei.
\end_layout

\begin_layout Standard
Diese Marke wurde mit \SpecialChar LyX

\begin_inset space ~
\end_inset

1.4.0 eingeführt.
 Layout-Dateien älteren \SpecialChar LyX
-Versionen haben kein explizites Format und werden
 als 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Format
\begin_inset space ~
\end_inset

1
\end_layout

\end_inset

 behandelt.
 Das Format dieser \SpecialChar LyX
-Version ist 60.
 Aber jede \SpecialChar LyX
-Version kann ältere Versionen von Layout-Dateien lesen, so wie
 es ältere \SpecialChar LyX
-Dateien lesen kann.
 Es gibt jedoch keine Unterstützung in ältere Formate zu konvertieren.
\end_layout

\begin_layout Subsection
Allgemeine Parameter für Textklassen
\begin_inset CommandInset label
LatexCommand label
name "subsec:Allgemeine-Parameter-für"

\end_inset


\end_layout

\begin_layout Standard
Nachfolgend allgemeine Parameter, die die Form der gesamten Dokumentklasse
 beschrei\SpecialChar softhyphen
ben.
 (Dies bedeutet 
\emph on
nicht
\emph default
 dass sie nur in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.layout
\end_layout

\end_inset

-Dateien und nicht in Modulen erscheinen müssen.
 Ein Modul kann jede Layout-Marke enthalten.)
\end_layout

\begin_layout Description

\family typewriter
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToHTMLPreamble
\end_layout

\end_inset

 
\family default
fügt Informationen hinzu, die im 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<head>
\end_layout

\end_inset

-Block ausgegeben werden, wenn das Dokument als XHTML ausgegeben wird.
 Typischerweise wird dies verwendet werden, um CSS-Stilinformationen auszugeben,
 aber es kann auch für alles Andere verwendet werden, dass in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<head>
\end_layout

\end_inset

 zulässig ist.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndPreamble
\end_layout

\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToPreamble
\end_layout

\end_inset

 fügt Informationen zum \SpecialChar LaTeX
-Vorspann hinzu.
 Muss mit
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndPreamble
\end_layout

\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CiteEngine <engine>
\end_layout

\end_inset

 Definiert die Möglichkeiten der Darstellung von Literaturverweisen.
 Siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Citation-Engine-Beschreibung"
plural "false"
caps "false"
noprefix "false"

\end_inset

 für Details.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

 beendet werden.
 Vor allem von Cite-Engine-Dateien verwendet (siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Cite-Engine-Dateien"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Description

\family typewriter
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CiteFormat
\end_layout

\end_inset

 
\family default
Definiert Formate die in der Anzeige von Bibliographie-Informationen verwendet
 werden.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Literaturverweisformat"

\end_inset

 für Details.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

 beendet werden.
 Vor allem von Cite-Engine-Dateien verwendet (siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Cite-Engine-Dateien"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CiteFramework
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
bibtex
\end_layout

\end_inset

,
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
biblatex
\end_layout

\end_inset

] Bestimmt, ob 
\family sans
Biblatex
\family default
 oder Bib\SpecialChar TeX
 verwendet wird, um ein Literaturverzeichnis zu erzeugen.
 Vor allem von Cite-Engine-Dateien verwendet (siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Cite-Engine-Dateien"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ClassOptions
\end_layout

\end_inset

 Dieser Abschnitt beschreibt verschiedene globale Optionen, die von der
 Dokumentenklasse unterstützt werden.
 Eine detaillierte Beschreibung finden Sie in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Der-Abschnitt-ClassOptions"

\end_inset

.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Columns
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

] Gibt an, ob die Textklasse standardmäßig ein- oder zweispaltig gesetzt
 wird.
 Kann im Menü 
\begin_inset Info
type  "menu"
arg   "dialog-show document"
\end_inset

 geändert werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Counter
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] definiert die Eigenschaften für einen Zähler.
 Wenn der Zähler noch nicht existiert, wird er erstellt; wenn er bereits
 existiert, wird er modifiziert.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
\begin_inset Newline newline
\end_inset

Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Zähler"

\end_inset

 für Details zu Zählern.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultFont
\end_layout

\end_inset

 Definiert den Standardzeichensatz für die Anzeige des Dokuments.
 Eine genauere Beschreibung finden Sie in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndFont
\end_layout

\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultModule
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Modul>
\end_layout

\end_inset

] spezifiziert ein Modul, das standardmäßig zu dieser Dokumentklasse hinzugefügt
 wird.
 <Modul> ist der Dateiname ohne die Dateiendung 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.module
\end_layout

\end_inset

.
 Der Nutzer kann das Modul zwar immer noch entfernen, aber es bleibt von
 Beginn an aktiv.
 (Dies gilt nur für neue Dateien oder wenn diese Klasse für ein existierendes
 Dokument gewählt wird.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Stil>
\end_layout

\end_inset

] Dies ist das Layout bzw.
\begin_inset space \space{}
\end_inset

der Stil, der für neu angelegte Absätze verwendet wird.
 Normalerweise ist das 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
Standard
\end_layout

\end_inset

.
 Fehlt dieser Eintrag, wird das erste definierte Layout verwendet; dennoch
 ist es ratsam 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultStyle
\end_layout

\end_inset

 anzugeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ExcludesModule
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Modul>
\end_layout

\end_inset

] zeigt an, dass das genannte Modul (das durch den Dateinamen ohne die Endung
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.module
\end_layout

\end_inset

 angegeben wird) in dieser Dokumentklasse nicht benutzt werden kann.
 Dies könnte in einem Journal-spezifischen Layout benutzt werden, um zum
 Beispiel die Verwendung des Moduls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
theorems-sec
\end_layout

\end_inset

 zu verhindern, das Theoreme abschnittsweise nummeriert.
 Diese Marke darf 
\emph on
nicht
\emph default
 in einem Modul benutzt werden.
 Module haben ihre eigene Methode andere Module auszuschließen (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Layout-Module"

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Float
\end_layout

\end_inset

 definiert ein neues Gleitobjekt.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Gleitobjekte"

\end_inset

 für Details.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLPreamble
\end_layout

\end_inset

 Informationen, die im 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<head>
\end_layout

\end_inset

-Block ausgegeben werden, wenn das Dokument als XHTML ausgegeben wird.
 Beachten Sie, dass dies jede vorhergehende 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLPreamble
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToHTMLPreamble
\end_layout

\end_inset

-Deklaration überschreibt.
 (Verwenden Sie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToHTMLPreamble
\end_layout

\end_inset

 wenn Sie Material zum Vorspann hinzufügen wollen.) Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndPreamble
\end_layout

\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLTOCSection
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Stil>
\end_layout

\end_inset

] Das Layout bzw.
\begin_inset space \space{}
\end_inset

der Stil, der für das Inhaltsverzeichnis, das Literaturverzeichnis etc.
\begin_inset space \space{}
\end_inset

verwendet werden soll, wenn das Dokument als HTML exportiert wird.
 Für Artikel sollte dies normalerweise 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Section
\end_layout

\end_inset

 sein und für Bücher 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Chapter
\end_layout

\end_inset

.
 Wenn es nicht angegeben wird, wird \SpecialChar LyX
 versuchen herauszufinden, welches Layout
 zu benutzen ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
IfCounter
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Zähler>
\end_layout

\end_inset

] Ändert die Eigenschaften des angegebenen Zählers.
 Wenn dieser nicht existiert, wird die Anweisung ignoriert.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

 beendet werden.
\begin_inset Newline newline
\end_inset

Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Zähler"

\end_inset

 für Details zu Zählern.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Input
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Dateiname>
\end_layout

\end_inset

] Hiermit können Sie andere Dateien einbinden, die Definitionen für Textklassen
 enthalten.
 Damit können Sie unnötige Mehrfachdefinitionen vermeiden.
 Beispiele sind die Standard-Layout-Dateien, z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdclass.inc
\end_layout

\end_inset

, die ein Großteil der Standardlayouts enthalten.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

] Dieser Abschnitt definiert das Layout einer Einfügung (neu).
 Es kann auf eine vorhandene Einfügung angewendet werden oder eine neue,
 benutzerdefinierte, zum Beispiel einen neuen Zeichenstil.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

 beendet werden.
\begin_inset Newline newline
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Flexible-Einfügungen-und"

\end_inset

 enthält weitere Einzelheiten.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftMargin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] ist ein String dessen Länge die Breite des linken Randes festlegt, zum
 Beispiel 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MMMMM
\end_layout

\end_inset

.
 (Beachten Sie, dass hier keine Längenangabe wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
2ex
\end_layout

\end_inset

 eingegeben wird.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MaxCiteNames
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
integer
\end_layout

\end_inset

] Eine Ganzzahl, die festlegt, wie viele Autoren maximal in einem Autor-Jahr-Zit
at angezeigt werden, bevor der Verweis zu 
\begin_inset Quotes gld
\end_inset

Erstautor et al.
\begin_inset Quotes grd
\end_inset

 wechselt.
 Vor allem von Cite-Engine-Dateien verwendet (siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Cite-Engine-Dateien"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ModifyStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Stil>
\end_layout

\end_inset

] Ändert die Eigenschaften des angegebenen Absatzstils.
 Wenn dieser nicht existiert, wird die Anweisung ignoriert.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NoCounter
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Zähler>
\end_layout

\end_inset

] Löscht einen existierenden Zähler; üblicherweise einen, der in einer eingefügt
en Datei definiert wurde.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NoFloat
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Gleitobjekt>
\end_layout

\end_inset

] Löscht ein vorhandenes Gleitobjekt.
 Dies ist dann nützlich, wenn Sie ein Gleitobjekt, das in einer eingefügten
 Datei definiert wurde, nicht verwenden wollen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NoStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Stil>
\end_layout

\end_inset

] Löscht ein existierendes Layout bzw.
 einen Stil.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
OutputFormat
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Format>
\end_layout

\end_inset

] Das Dateiformat (wie es in den \SpecialChar LyX
-Voreinstellungen definiert ist) das von
 dieser Dokumentklasse erzeugt wird.
 Es ist hauptsächlich nützlich wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
OutputType
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
literate
\end_layout

\end_inset

 gesetzt ist und man einen neuen Typ eines 
\begin_inset Quotes gld
\end_inset

Literate
\begin_inset Quotes grd
\end_inset

-Dokuments definieren will.
 Das Format wird auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
docbook
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
latex
\end_layout

\end_inset

 zurückgesetzt wenn der entsprechende 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
OutputType
\end_layout

\end_inset

-Parameter gefunden wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
OutputType
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
lat
\emph default
ex
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
docbook
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
literate
\end_layout

\end_inset

] Gibt an welche Dokumentart diese Klasse erzeugt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PackageOptions
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Der zweite String gibt Optionen für das Paket im ersten String an.
 Zum Beispiel lädt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PackageOptions natbib square
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
natbib
\end_layout

\end_inset

 mit der Option 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
square
\end_layout

\end_inset

.
 (Für \SpecialChar TeX
perten: Dies bewirkt, dass \SpecialChar LyX
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
PassOptionsToPackage{natbib}{square}
\end_layout

\end_inset

 vor dem Laden von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
natbib
\end_layout

\end_inset

 ausgibt.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PageStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
plain
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
empty
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
headings
\end_layout

\end_inset

] Der Standard-Seitenstil.
 Kann im Menü 
\begin_inset Info
type  "menu"
arg   "dialog-show document"
\end_inset

 geändert werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Preamble
\end_layout

\end_inset

 Definiert den Vorspann für das \SpecialChar LaTeX
-Dokument.
 Beachten Sie, dass dies jede vorhergehende 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Preamble
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToPreamble
\end_layout

\end_inset

-Deklaration überschreibt.
 (Verwenden Sie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToPreamble
\end_layout

\end_inset

 wenn Sie Material zum Vorspann hinzufügen wollen.) Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndPreamble
\end_layout

\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Provides
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] zeigt an, ob die Klasse bereits die Funktion 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 liefert.
 Eine Funktion ist im Allgemeinen der Name eines Paketes (z.
\begin_inset space \thinspace{}
\end_inset

B.
\begin_inset space \space{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
amsmath
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
makeidx
\end_layout

\end_inset

) oder ein Makro (z.
\begin_inset space \thinspace{}
\end_inset

B.
\begin_inset space \space{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
url
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
boldsymbol
\end_layout

\end_inset

).
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Liste-von-Funktionen"

\end_inset

 für eine Liste der Funktionen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ProvidesModule
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] zeigt an, dass dieses Layout die Funktionalität des Moduls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 anbietet, das als Dateiname ohne die Erweiterung 
\family typewriter
.module
\family default
 angegeben wird.
 Dies wird typischerweise benutzt, wenn das Layout das Modul direkt benutzt
 statt die Marke 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultModule
\end_layout

\end_inset

 zu benutzen.
 Es könnte auch in einem Modul benutzt werden, das eine andere Implementation
 derselben Funktion liefert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ProvideStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Stil>
\end_layout

\end_inset

] Erstellt einen neuen Absatzstil, falls er noch nicht existiert.
 Existiert er bereits, wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ProvideStyle
\end_layout

\end_inset

 ignoriert.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requires
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

]
\family typewriter
 
\family default
zeigt an, ob die Klasse die Funktion 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 benötigt.
 Mehrfache Funktionen müssen durch Komma getrennt werden Beachten Sie, dass
 Sie nur unterstützte Funktionen anfordern können.
 (Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Liste-von-Funktionen"

\end_inset

 für eine Liste der Funktionen.) Wenn Sie ein Paket mit bestimmten Optionen
 anfordern müssen, können Sie zusätzlich 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PackageOptions
\end_layout

\end_inset

verwenden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RightMargin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] ist eine Zeichenkette, deren Länge die Breite des rechten Randes festlegt,
 zum Beispiel 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MMMMM
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
SecNumDepth
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int=3
\end_layout

\end_inset

] legt die Nummerierungstiefe fest; korrespondiert mit dem \SpecialChar LaTeX
-Zähler 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
secnumdepth
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Sides
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
2
\end_layout

\end_inset

] Gibt an, ob der Text standardmäßig für ein- oder für zweiseitigen Druck
 gesetzt wird.
 Kann im Dialog 
\begin_inset Info
type  "menu"
arg   "dialog-show document"
\end_inset

 geändert werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Style
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] definiert einen neuen Absatzstil.
 Wenn er bereits existiert, werden stattdessen einige seiner Parameter neu
 definiert.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

 beendet werden.
\begin_inset Newline newline
\end_inset

Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

 für mehr über Absatzstile.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexName
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string="maketitle"
\end_layout

\end_inset

] ist der Name des Befehls oder der Umgebung, der für 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexType
\end_layout

\end_inset

 benutzt werden soll.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexType
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
CommandAfter
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

] gibt an, wie der Dokumenttitel aussehen soll.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CommandAfter
\end_layout

\end_inset

 bedeutet, dass das Makro namens 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexName
\end_layout

\end_inset

 nach dem letzten Absatzstil mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InTitle
\begin_inset space ~
\end_inset

1
\end_layout

\end_inset

 gesetzt werden soll.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 ist für den Fall, dass alle Absatzstile mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InTitle
\begin_inset space ~
\end_inset

1
\end_layout

\end_inset

 in die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexName
\end_layout

\end_inset

-Umgebung gesetzt werden sollen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TocDepth
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int=3
\end_layout

\end_inset

] legt fest, bis zu welcher Tiefe das Inhaltsverzeichnis gehen soll; korrespondi
ert mit dem \SpecialChar LaTeX
-Zähler 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
tocdepth
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Der Abschnitt 
\family typewriter
ClassOptions
\family default

\begin_inset CommandInset label
LatexCommand label
name "subsec:Der-Abschnitt-ClassOptions"

\end_inset


\end_layout

\begin_layout Standard
Der Abschnitt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ClassOptions
\end_layout

\end_inset

 kann folgende Einträge enthalten:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FontSize
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string="10|11|12"
\end_layout

\end_inset

] Eine Liste verfügbarer Größen für den Hauptzeichensatz; die Einträge werden
 mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
|
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 getrennt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Header
\end_layout

\end_inset

 wird benutzt, um die DTD-Zeile mit XML-basierten Klassen zu setzen.
 Zum Beispiel PUBLIC 
\begin_inset Quotes gld
\end_inset

-//OASIS//DTD DocBook V4.2//EN
\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Other
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Sonstige Optionen für die Dokumentenklasse, die durch Komma getrennt werden.
 Sie werden in dem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
documentclass
\end_layout

\end_inset


\family typewriter
-
\family default
Befehl als optionales Argument übergeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PageStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string="empty|plain|headings|fancy"
\end_layout

\end_inset

] Eine Liste verfügbarer Seitenstile; die Einträge werden mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
|
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 getrennt.
\end_layout

\begin_layout Standard
Der Abschnitt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ClassOptions
\end_layout

\end_inset

 muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

 beendet werden.
\end_layout

\begin_layout Subsection
Einzelne Absatz-Layouts
\begin_inset CommandInset label
LatexCommand label
name "subsec:Einzelne-Absatz-Layouts"

\end_inset


\end_layout

\begin_layout Standard
Eine Layoutbeschreibung für einen Absatz sieht wie folgt aus:
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Sie können mit diesem Ausdruck entweder einen neuen Absatzstil definieren
 oder aber einen bereits definierten umdefinieren.
 
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
Style 
\family roman
\emph on
Name
\end_layout

\begin_layout LyX-Code
 ...
\end_layout

\begin_layout LyX-Code
End
\end_layout

\begin_layout Standard
Innerhalb des Blocks sind folgende Befehle erlaubt:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToToc
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=""] Dieser Abschnitt erscheint im Inhaltsverzeichnis des spezifizierten
 Typs.
 Eine leere Zeichenkette deaktiviert die Anzeige dort.
 Siehe auch 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
OutlinerName
\end_layout

\end_inset

 und den Befehl 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
IsTocCaption
\end_layout

\end_inset

.
 Voreinstellung: deaktiviert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Align
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
block
\emph default
, left, right, center
\end_layout

\end_inset

] Gibt an, ob der Text im Blocksatz linksbündig, rechtsbündig oder zentriert
 gesetzt wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AlignPossible
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
block
\emph default
, left, right, center
\end_layout

\end_inset

] Eine Liste von möglichen Textausrichtungen, die durch Kommata voneinander
 getrennt werden.
 (Einige \SpecialChar LaTeX
-Stile verbieten bestimmte Ausrichtungen, weil sie keinen Sinn
 machen.
 Beispielsweise sollte in einer nummerierten Aufzählung der Text nicht rechtsbün
dig oder zentriert gesetzt werden.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int
\end_layout

\end_inset

] Definiert Argument Nummer <int> eines Befehls\SpecialChar breakableslash
einer Umgebung, der\SpecialChar breakableslash
die im
 aktuellen Stil definiert ist.
 Dies ist nützlich für Dinge wie Abschnittsüberschriften.
 Jedes Argument (optional oder erforderlich) eines Befehls oder einer Umgebung
 hat eine eigene Definition (ausgenommen das erforderliche Haupt-Argument
 des Absatzes).
 Die Nummer gibt die Reihenfolge des Arguments an.
 Die Definition muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndArgument
\end_layout

\end_inset

 enden.
 Ein Befehl mit 2
\begin_inset space ~
\end_inset

optionalen Argumenten hat somit diese Struktur:
\end_layout

\begin_deeper
\begin_layout Quote

\family typewriter
Argument 1
\end_layout

\begin_layout Quote

\family typewriter
...
\end_layout

\begin_layout Quote

\family typewriter
EndArgument
\end_layout

\begin_layout Quote

\family typewriter
Argument 2
\end_layout

\begin_layout Quote

\family typewriter
...
\end_layout

\begin_layout Quote

\family typewriter
EndArgument
\end_layout

\begin_layout Standard
Innerhalb einer 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

-Definition sind die folgenden Spezifikationen möglich:
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[string]
\end_layout

\end_inset

 Die Zeichenkette, die sowohl im Menü (um dieses Argument einzufügen) als
 auch auf dem Einfügungsknopf des Arguments erscheint (falls Sie keinen
 separaten 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MenuString
\end_layout

\end_inset

 definieren).
 Für das Menü können Sie ein Tastenkürzel definieren, indem Sie das entsprechend
e Zeichen an die Zeichenkette mit 
\begin_inset Quotes gld
\end_inset

|
\begin_inset Quotes grd
\end_inset

 abgetrennt anhängen (z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Kurztitel|K
\end_layout

\end_inset

).
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MenuString
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[string]
\end_layout

\end_inset

 Eine separate Zeichenkette für das Menü.
 Sie können ein Tastenkürzel definieren, indem Sie das entsprechende Zeichen
 an die Zeichenkette mit 
\begin_inset Quotes gld
\end_inset

|
\begin_inset Quotes grd
\end_inset

 abgetrennt anhängen (z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Kurztitel|K
\end_layout

\end_inset

).
 Diese Spezifikation ist optional.
 Wenn Sie fehlt, wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 auch für das Menü verwendet.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Tooltip
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[string]
\end_layout

\end_inset

 Ein ausführlicherer erklärender Text, der im Werkzeughinweis erscheint,
 wenn man die Maus über die Argumenteinfügung bewegt.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Mandatory
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Deklariert, ob es sich um ein obligatorisches (1) oder ein optionales
 (0) Argument handelt.
 Obligatorische Argumente werden, wenn Sie nicht eingegeben werden, leer
 ausgegeben, optionale werden in dem Fall unterdrückt.
 Voreingestellt ist, dass obligatorische Argumente mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{...}
\end_layout

\end_inset

 begrenzt werden, optionale mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[...]
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requires
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[int=0]
\end_layout

\end_inset

 Definiert ein anderes Argument (mittels seiner Nummer), dass das vorliegende
 voraussetzt, wenn es selbst ausgegeben wird.
 So verlangen \SpecialChar LaTeX
-Befehle häufig, dass optionale Argumente in jedem Fall ausgegeben
 werden (notfalls leer), wenn ein weiteres optionales Argument folgt, wie
 in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
command[][Argument]{Text}
\end_layout

\end_inset

.
 Das erreicht man durch die Angabe 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requires 1
\end_layout

\end_inset

 innerhalb von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument 2
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftDelim
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[string]
\end_layout

\end_inset

 Definiert ein eigenes linkes Begrenzungszeichen (statt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[
\end_layout

\end_inset

).
 Ein Zeilenumbruch in der Ausgabe wird mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<br/>
\end_layout

\end_inset

 angegeben.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RightDelim
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[string]
\end_layout

\end_inset

 Definiert ein eigenes rechtes Begrenzungszeichen (statt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
}
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
]
\end_layout

\end_inset

).
 Ein Zeilenumbruch in der Ausgabe wird mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<br/>
\end_layout

\end_inset

 angegeben.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultArg
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[string]
\end_layout

\end_inset

 Definiert ein Argument, das nur eingefügt wird, wenn der Nutzer kein Argument
 eingefügt hat.
 Das heißt, wenn keine Argument-Einfügung eingefügt wurde oder sie eingefügt
 wurde, aber leer ist.
 Mehrere Argumente werden durch Kommas getrennt.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PresetArg
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[string]
\end_layout

\end_inset

 Definiert ein Argument, das in jedem Fall eingefügt wird (allein oder zusätzlic
h zu benutzerdefinierten Argumenten).
 Mehrere Argumente werden durch Kommas getrennt.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 Die Schrift, die für den Argumentinhalt verwendet wird; siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 Die Schrift, die für die Marke verwendet wird; siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Decoration
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
Classic
\emph default
, Minimalistic, Conglomerate
\end_layout

\end_inset

] legt den Anzeigestil für den Rahmen und Knopf der Einfügung fest.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AutoInsert
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[int=0]
\end_layout

\end_inset

 Wenn dies auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt wird, wird dieses Argument automatisch eingefügt, sobald der betreffend
e Absatzstil ausgewählt wird.
 Momentan ist es nur möglich, ein Argument pro Stil\SpecialChar breakableslash
Format automatisch einzufügen.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsertCotext
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[int=0]
\end_layout

\end_inset

 Wenn dies auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt wird, wird dieses Argument mit einer Kopie des umgebenden Texts
 (entweder der ausgewählte Text oder der ganze Absatz) als Inhalt eingefügt.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThru
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
inherited
\emph default
, true, false
\end_layout

\end_inset

] bestimmt, ob der Inhalt dieses Arguments in unbearbeiteter Form, ohne
 spezifische Bearbeitung, die \SpecialChar LaTeX
 verlangen würde, ausgegeben wird.
 In der Voreinstellung wird der Status von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThru
\end_layout

\end_inset

 von der Einfügung oder dem Absatzstil, zu dem das Argument gehört, übernommen.
 Wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
true
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
false
\end_layout

\end_inset

 angegeben ist, wird der Status für das Argument verändert.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThruChars
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Buchstabenkette
\end_layout

\end_inset

]
\family typewriter
 
\family default
bestimmt einzelne Zeichen, für die der Inhalt dieses Arguments in unbearbeiteter
 Form, ohne spezifische Bearbeitung, die \SpecialChar LaTeX
 verlangen würde, ausgegeben wird.
 Beachten Sie, dass anders als bei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThru
\end_layout

\end_inset

 ein Wert für Argumente explizit spezifiziert werden muss.
 Argumente übernehmen also nicht die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThruChars
\end_layout

\end_inset

 des zugehörigen Absatzstils oder der zugehörigen Einfügung.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
IsTocCaption
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wenn dies 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt wird, wird dieses Argument seinen Inhalt im zugehörigen Inhaltsverzeich
nis ausgeben.
 Siehe 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToToc
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Standardmäßig ist der Text, der in die \SpecialChar LyX
-Arbeitsumgebung (außerhalb von Argument-
Einfügungen) im entsprechenden Format eingegeben wird, zugleich das letzte
 (obligatorische) Argument eines Befehls, sofern der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Command
\end_layout

\end_inset

 gesetzt ist.
 Argumente mit dem Präfix 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
post:
\end_layout

\end_inset

 werden jedoch nach diesem Arbeitsumgebungs-Argument ausgegeben.
 Bachten Sie, dass die Nummerierung solcher Post-Argumente wieder bei 1
 beginnt.
 Das erste Argument, das dem Arbeitsumgebungs-Argument folgt, ist somit
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
post:1
\end_layout

\end_inset

.
 Post-Argumente werden in allen anderen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 außer 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Command
\end_layout

\end_inset

 ignoriert.
\end_layout

\begin_layout Standard
Argumente für Listen-
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
item
\end_layout

\end_inset

s (wie in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
item[foo]
\end_layout

\end_inset

) haben das Präfix 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
item:
\end_layout

\end_inset

 gefolgt von der Nummer (z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument item:1
\end_layout

\end_inset

)
\end_layout

\end_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BabelPreamble
\end_layout

\end_inset

 Beachten Sie, dass dies alle vorhergehenden 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BabelPreamble
\end_layout

\end_inset

-Deklaration für diesen Stil überschreibt.
 Muss mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndBabelPreamble
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beendet werden.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:I18n"

\end_inset

 für Details zur Verwendung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BottomSep
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=0
\end_layout

\end_inset

]
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Quotes gld
\end_inset

float
\begin_inset Quotes grd
\end_inset

 ist eine Gleitkommazahl, wie 
\begin_inset Quotes gld
\end_inset

1.5
\begin_inset Quotes grd
\end_inset

.
\end_layout

\end_inset

 Der vertikale Abstand, der die letzte Serie von Absätzen vom folgenden
 Text trennt.
 Wenn der nächste Paragraph einen anderen Stil hat, werden die Abstände
 nicht einfach addiert, sondern das Maximum wird verwendet.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Category
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] ist die Kategorie für diesen Stil.
 Sie wird benutzt, um zugehörige Stile im Absatzstil-Auswahlfeld der Werkzeuglei
ste zu gruppieren.
 Jede beliebige Zeichenkette kann benutzt werden, aber es ist sinnvoll,
 vorhandene Kategorien zu verwenden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CommandDepth
\end_layout

\end_inset

 ist die Tiefe des XML-Befehls und wird nur für XML-Formate benutzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CopyStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Kopiert alle Eigenschaften eines bereits definierten Layouts in das aktuelle.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DependsOn
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] ist der Name eines Stils, dessen Vorspann 
\emph on
vor
\emph default
 diesem ausgegeben werden soll.
 Dadurch wird eine Reihenfolge von Vorspannteilen bewirkt, wenn Makro-Definition
en voneinander abhängen.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Beachten Sie, dass es außer dieser Funktionalität keine andere Möglichkeit
 gibt, Vorspanne zu ordnen.
 Die Reihenfolge, die Sie in einer \SpecialChar LyX
-Version sehen, kann sich in späteren
 Versionen ohne Warnung ändern.
\end_layout

\end_inset


\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndLabeltype
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
No_Label
\emph default
, Box, Filled_Box, Static
\end_layout

\end_inset

]
\family typewriter
 
\family default
ist der Markentyp, der am Ende eines Absatzes steht (oder mehrerer Absätze,
 wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 auf
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Item_Environment
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
List_Environment
\end_layout

\end_inset

 gesetzt ist).
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
No_Label
\end_layout

\end_inset

 bedeutet 
\begin_inset Quotes gld
\end_inset

nichts
\begin_inset Quotes grd
\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Box
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Filled_Box
\end_layout

\end_inset

 ist ein weißes oder schwarzes Quadrat, das für das Markieren eines Beweis-Endes
 geeignet ist.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

 ist eine explizite Zeichenkette.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndLabelString
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] ist eine Zeichenkette, die für einen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndLabelType
\end_layout

\end_inset

 benutzt wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 Der Zeichensatz, der für den Textkörper 
\emph on
und
\emph default
 die Marke verwendet wird, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

.
 Wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 gesetzt, dann erhält 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 automatisch denselben Wert.
 Daher sollte 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 zuerst definiert werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceLocal
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int=0
\end_layout

\end_inset

] Wird benutzt um neue Stile für stabile \SpecialChar LyX
-Versionen zu konvertieren.
 Die erste stabile Version, die das unterstützt, ist \SpecialChar LyX
 2.1.0.
 Das Argument ist eine Nummer, die entweder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
-1
\end_layout

\end_inset

 oder irgend eine Zahl größer Null sein kann.
 Wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceLocal
\end_layout

\end_inset

 eines Stils größer als Null ist, wird er immer in den Dokumentkopf geschrieben.
 Wenn eine .lyx-Datei gelesen wird, werden die Stil-Definitionen aus dem
 Dokumentkopf zur Dokumentklasse hinzugefügt.
 Dadurch können sogar ältere \SpecialChar LyX
-Versionen den Stil handhaben.
 Das Argument von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceLocal
\end_layout

\end_inset

 ist eine Versionsnummer: Wenn der Stil gelesen wird, und die Versionsnummer
 ist kleiner als die Versionsnummer des bereits existierenden Stils der
 Dokumentklasse, wird der neue Stil ignoriert.
 Wenn die Versionsnummer größer ist, ersetzt der neue Stil den bestehenden.
 Der Wert 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
-1
\end_layout

\end_inset

 steht für eine unendliche Versionsnummer, das heißt der Stil wird immer
 benutzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FreeSpacing
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Normalerweise erlaubt es \SpecialChar LyX
 nicht, mehr als ein Leerzeichen zwischen Wörtern
 einzufügen.
 Diese Eigenschaft kann in bestimmten Fällen umständ\SpecialChar softhyphen
lich sein, zum Beispiel,
 wenn ein Programmcode eingegeben werden soll.
 In solchen Fällen kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FreeSpacing
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt werden.
 \SpecialChar LyX
 erzeugt in diesem Falls sich \SpecialChar LyX
 nicht im \SpecialChar LaTeX
-Modus befindet, erzeugt es für
 jedes zusätzliche Leerzeichen ein geschütztes Leerzeichen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTML*
\end_layout

\end_inset

 Diese Marken kontrollieren die XHTML-Ausgabe.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:XHTML-Spezifikationen"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InnerTag
\end_layout

\end_inset

 [FIXME] (Wird nur für XML-Formate benutzt.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InPreamble
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wenn auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt, wird der Stil in den \SpecialChar LaTeX
-Vorspann gesetzt und nicht in den eigentlichen
 Dokumenttext.
 Dies ist nützlich für Dokumentklassen, die Informationen wie den Titel
 und Autor im Vorspann erwarten.
 Beachten Sie, dass dies nur für Stile funktioniert, deren 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Command
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Paragraph
\end_layout

\end_inset

ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InTitle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wenn auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt, wird der Stil als Teil des Titel-Abschnitts behandelt (siehe auch
 die allgemeinen Textklassen-Parameter 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexType
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TitleLatexName
\end_layout

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
IsTocCaption
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wenn dies auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt ist und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToToc
\end_layout

\end_inset

 aktiviert ist, fügt der Absatz eine Zusammenfassung seines Inhalts zum
 Eintrag im Inhaltsverzeichnis.
 Ansonsten wird nur die Marke, falls existent, dort aufscheinen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ItemCommand
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string="item"
\end_layout

\end_inset

] Der \SpecialChar LaTeX
-Befehl, der ein Item in einer Liste definiert.
 Dieser Befehl muss ohne den Backslash am Anfang angegeben werden (die Voreinste
llung ist '
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
item
\end_layout

\end_inset

', was in der \SpecialChar LaTeX
-Ausgabe als 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
item
\end_layout

\end_inset

 erscheint).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ItemSep
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=0
\end_layout

\end_inset

] Ein zusätzlicher Abstand zwischen Absätzen desselben Layouts.
 Wenn in einer Umgebung andere Layouts integriert werden, so werden diese
 mit dem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParSep
\end_layout

\end_inset

 der Umgebung getrennt.
 Die kompletten Unterpunkte der Umgebung werden jedoch 
\emph on
zusätzlich
\emph default
 mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ItemSep
\end_layout

\end_inset

 getrennt.
 Man beachte, dass 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ItemSep
\end_layout

\end_inset

ein 
\emph on
Multiplikator
\emph default
 ist
\emph on
.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ItemTag
\end_layout

\end_inset

 [FIXME] (Wird nur für XML-Formate benutzt.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
KeepEmpty
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Normalerweise ist es in \SpecialChar LyX
 nicht möglich, einen Absatz leer zu lassen, da
 das zu einer leeren \SpecialChar LaTeX
-Ausgabe führen würde.
 In manchen Fällen ist das aber durchaus gewünscht: So können beispielsweise
 in einer Briefvorlage die benötigten Felder leer voreingestellt werden,
 damit keiner vergisst, sie anzugeben; in speziellen Klassen wird ein Absatz
 als Unterbrechung verwendet, der keinen Text enthält.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelBottomsep
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=0
\end_layout

\end_inset

] Der vertikale Abstand zwischen der Marke und dem folgenden Text.
 Wird nur für Marken benutzt, die über dem folgenden Text stehen (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Top_Environment
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Centered_Top_Environment
\end_layout

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelCounter
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] ist der Name des Zählers zur automatischen Nummerierung.
 Um den Zähler einer Marke zuzuordnen, muss er im 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 referenziert werden.
 Dies funktioniert zumindest mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelType
\end_layout

\end_inset

en, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Above
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Centered
\end_layout

\end_inset

.
\begin_inset Newline newline
\end_inset

Er 
\emph on
kann
\emph default
 angegeben werden, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Enumerate
\end_layout

\end_inset

 ist.
 In diesem Fall ist es etwas kompliziert: Angenommen Sie haben 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelCounter MeinZaehler
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 angegeben, dann lauten die eigentlichen Zähler 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeinZaehleri
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeinZaehlerii
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeinZaehleriii
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MeinZaehleriv
\end_layout

\end_inset

; so wie in \SpecialChar LaTeX
.
 Diese Zähler müssen alle separat deklariert werden.
\begin_inset Newline newline
\end_inset

Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Zähler"

\end_inset

 für Einzelheiten zu Zählern.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 Der Zeichensatz, der für die Marke verwendet wird.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelIndent
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Text der angibt, wie weit die Marke eingerückt werden soll.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Labelsep
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Text der den horizontalen Abstand zwischen der Marke und dem folgenden
 Text angibt.
 Wird nur für Marken benutzt, die nicht über dem folgenden Text stehen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Die Zeichenkette, die für den 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

 verwendet wird.
 Wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelCounter
\end_layout

\end_inset

 gesetzt wurde, kann die Zeichenkette spezielle Formatierungsbefehle enthalten,
 wie sie in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Zähler"

\end_inset

 beschrieben sind.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelStringAppendix
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] wird im Anhang anstatt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 benutzt.
 Beachten Sie, dass jede Definition von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 auch 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelStringAppendix
\end_layout

\end_inset

 zurücksetzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelTag
\end_layout

\end_inset

 [FIXME] (Wird nur für XML-Formate benutzt.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelType
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
No_Label
\emph default
, Manual, Static, Above,
\begin_inset Newline newline
\end_inset

Centered, Sensitive, Enumerate,
\begin_inset Newline newline
\end_inset

Itemize, Bibliography
\end_layout

\end_inset

]
\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Manual
\end_layout

\end_inset

 bedeutet: die Marke ist das erste Wort (bis zum ersten echten Leerzeichen).
 Verwenden Sie geschützte Leerzeichen wenn Sie mehr als ein Wort als Marke
 haben wollen.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

 bedeutet: die Marke ist, was als 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 definiert wurde.
 Die Marke wird interlinear zu Beginn des Absatzes angezeigt.
 Wenn der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 ist, wird sie nur im ersten Absatz von aufeinanderfolgenden Absätzen mit
 demselben 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Style
\end_layout

\end_inset

.
 angezeigt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Above
\end_layout

\end_inset


\begin_inset space ~
\end_inset

und
\begin_inset space ~
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Centered
\end_layout

\end_inset

 sind Spezialfälle von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

.
 Die Marke erscheint über dem Absatz, entweder am Anfang der Zeile oder
 zentriert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Sensitive
\end_layout

\end_inset

 ist ein Spezialfall für Beschriftungsmarken für Abbildungen und Tabellen-Gleito
bjekte.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Sensitive
\end_layout

\end_inset

 bedeutet, dass der gedruckte Text von der Art des Gleitobjekts abhängt:
 Er ist fest einprogrammiert als 
\begin_inset Quotes gls
\end_inset

GleitobjektTyp N
\begin_inset Quotes grs
\end_inset

, wobei N der Wert des Zählers des Gleitobjekttyps ist.
 Für den Fall, dass die Beschriftungsmarke außerhalb eines Gleitobjekts
 eingefügt wird, erscheint der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 als 
\begin_inset Quotes gld
\end_inset

Sinnlos!
\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Enumerate
\end_layout

\end_inset

 erzeugt die üblichen Marken für Nummerierungen.
 Momentan sind diese fest auf arabische Zahlen, Kleinbuchstaben, kleine
 römische Zahlen und Großbuchstaben (für die 4
\begin_inset space ~
\end_inset

möglichen Schachtelungstiefen) programmiert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Itemize
\end_layout

\end_inset

 erzeugt je nach Schachtelungstiefe verschiedene Auflistungszeichen, Diese
 sind ebenfalls fest programmiert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Bibliography
\end_layout

\end_inset

 sollte nur zusammen mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType BibEnvironment
\end_layout

\end_inset

 verwendet werden.
\end_layout

\end_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LangPreamble
\end_layout

\end_inset

 Beachten Sie, dass dies alle vorhergehenden 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LangPreamble
\end_layout

\end_inset

-Deklaration für diesen Stil überschreibt.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndLangPreamble
\end_layout

\end_inset

 beendet werden.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:I18n"

\end_inset

 für Details zur Verwendung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexName
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] Der \SpecialChar LaTeX
-Name für dieses Layout.
 Das bedeutet entweder der Name eines \SpecialChar LaTeX
-Befehls oder der einer \SpecialChar LaTeX
-Umgebung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexParam
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Parameter>
\end_layout

\end_inset

] Ein optionaler Parameter für den entsprechenden
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexName
\end_layout

\end_inset

.
 Dieser Parameter kann innerhalb von \SpecialChar LyX
 nicht mehr geändert werden (man verwendet
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

 für anpassbare Parameters).
 Dieser wird nach allen anderen \SpecialChar LaTeX
-
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

en ausgegeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
Paragraph
\emph default
, Command, Environment, Item_Environment,
\begin_inset Newline newline
\end_inset

List_Environment, Bib_Environment
\end_layout

\end_inset

] Legt fest, wie das Layout in \SpecialChar LaTeX
 übersetzt wird.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 mag irreführend sein, denn dessen Regeln gelten auch für DocBook-Klassen.
 Siehe die DocBook Klassendateien (Dateinames 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
db_*.inc
\end_layout

\end_inset

 ) für spezielle Beispiele.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Paragraph
\end_layout

\end_inset

 bewirkt nichts besonderes – der Text wird als 
\emph on
normaler
\emph default
 
\emph on
Absatz
\emph default
 übernommen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Command
\end_layout

\end_inset

 behandelt den Text als Argument eines \SpecialChar LaTeX
-Befehls
\begin_inset Newline newline
\end_inset

(
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash

\emph on
LatexName
\emph default
{\SpecialChar ldots
}
\end_layout

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 behandelt den Text als Kern einer \SpecialChar LaTeX
-Umgebung
\begin_inset Newline newline
\end_inset

(
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{
\emph on
LatexName
\emph default
}\SpecialChar ldots

\backslash
end{
\emph on
LatexName
\emph default
}
\end_layout

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Item_Environment
\end_layout

\end_inset

 bewirkt dasselbe wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

, nur dass vor jedem Absatz ein 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
item
\end_layout

\end_inset

 eingefügt wird.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
List_Environment
\end_layout

\end_inset

 funktioniert wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Item_Environment
\end_layout

\end_inset

, nur dass
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelWidthString
\end_layout

\end_inset

 als Argument an die Umgebung übergeben wird.
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelWidthString
\end_layout

\end_inset

 kann im Menü 
\family sans
Bearbeiten
\family default
\SpecialChar menuseparator

\family sans
Absatz-Einstellungen
\family default
 definiert werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Bib_Environment
\end_layout

\end_inset

 ist wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 aber fügt zusätzlich das notwendige Argument (die längste Marke) zum Startbefeh
l der Bibliografie-Umgebung ein:
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{thebibliography}{99}
\end_layout

\end_inset

 Es ist daher nur für die Bibliografie-Umgebung nützlich.
 Die voreingestellte längste Marke 
\begin_inset Quotes gld
\end_inset

99
\begin_inset Quotes grd
\end_inset

 kann vom Nutzer in den Absatzeinstellungen eines Bibliografie-Eintrags
 geändert werden.
\end_layout

\begin_layout Standard
Fasst man die letzten Sachen zusammen, wird die \SpecialChar LaTeX
-Ausgabe entweder so:
\end_layout

\begin_layout LyX-Code

\backslash
LatexName[LatexParam]{\SpecialChar ldots
}
\end_layout

\begin_layout Standard
oder so:
\end_layout

\begin_layout LyX-Code

\backslash
begin{LatexName}[LatexParam] \SpecialChar ldots
 
\backslash
end{LatexName}.
\end_layout

\begin_layout Standard
aussehen, abhängig vom \SpecialChar LaTeX
-Typ.
\end_layout

\end_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftDelim
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Eine Zeichenkette, die zu Beginn des Inhalts des Stils ausgegeben wird.
 Ein Zeilenumbruch in der Ausgabe wird mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<br/>
\end_layout

\end_inset

 angegeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftMargin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Wenn ein Layout in ein anderes Layout für Umgebungen eingefügt wird, werden
 die Breiten der verschiedenen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftMargin
\end_layout

\end_inset

 nicht einfach addiert, sondern vorher in Abhängigkeit zur Schachtelungstiefe
 mit dem Faktor 
\begin_inset Formula $\frac{4}{\mathrm{Tiefe}+4}$
\end_inset

 multipliziert.
 Dieser Parameter wird auch dann benutzt, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Margin
\end_layout

\end_inset

 als 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Manual
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Dynamic
\end_layout

\end_inset

 definiert wurde.
 In diesem Fall wird der Wert zu den gegebenen manuellen oder dynamischen
 Rändern hinzugefügt.
\begin_inset Newline newline
\end_inset

Zum Beispiel bedeutet 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MM
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

, dass der Absatz mit der Breite eingerückt wird, die die Buchstaben 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MM
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 in der normalen Schriftart haben.
 man kann negative Breite erzeugen, indem man den String mit 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
-
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 beginnt.
 Diese Art der Angabe wurde gewählt, damit der Text unabhängig von der verwendet
en Bildschirmschriftart wie vorgesehen aussieht.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Margin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
Static
\emph default
, Manual, Dynamic, First_Dynamic, Right_Address_Box
\end_layout

\end_inset

]
\begin_inset Newline newline
\end_inset

legt fest, wie der linke Rand des Textes bestimmt wird.
 
\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Static
\end_layout

\end_inset

 wählt feste Randbreiten.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Manual
\end_layout

\end_inset

 bedeutet, dass der Rand von der Einstellung der 
\family sans
Ausrichtung
\family default
 im Menü 
\family sans
Bearbeiten
\family default
\SpecialChar menuseparator

\family sans
Absatz-Einstellungen
\family default
 abhängt.
 Dies wird für hübsche Listen ohne Tabulatoren benutzt.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Dynamic
\end_layout

\end_inset

 bedeutet, der linke Rand hängt von der Größe der verwendeten Markierung
 ab.
 Dies wird zum Beispiel bei automatisch nummerierten Überschriften verwendet.
 Es leuchtet ein, dass die Überschrift 
\begin_inset Quotes gld
\end_inset

5.4.3.2.1 Sehr lange \SpecialChar ldots
 Überschrift
\begin_inset Quotes grd
\end_inset

 einen größeren linken Rand benötigt, als 
\begin_inset Quotes gld
\end_inset

3.2 Sehr lange \SpecialChar ldots
 Überschrift
\begin_inset Quotes grd
\end_inset

.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
First_Dynamic
\end_layout

\end_inset

 arbeitet ähnlich wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Dynamic
\end_layout

\end_inset

, aber nur die erste Zeile wird dynamisch gesetzt, die anderen statisch.
 Dies wird für die \SpecialChar LaTeX
-Umgebung 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
description
\end_layout

\end_inset

 benutzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Right_Address_Box
\end_layout

\end_inset

 bedeutet, dass der Rand so gewählt wird, dass die längste Zeile des Absatzes
 gerade den rechten Rand berührt.
 Dies wird zum Setzen einer Adresse am rechten Rand der Seite eingesetzt.
\end_layout

\end_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NeedProtect
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Gibt an, ob 
\begin_inset Quotes gld
\end_inset

zerbrechliche
\begin_inset Quotes grd
\end_inset

 \SpecialChar LaTeX
-Befehle innerhalb dieses Layouts durch 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
protect
\end_layout

\end_inset

 geschützt werden müssen.
 (Achtung: Diese Einstellung sagt nichts darüber aus, ob der Befehl an sich
 geschützt werden soll.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Newline
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Gibt an, ob Zeilenumbrüche in \SpecialChar LaTeX
 als 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash

\backslash

\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 dargestellt werden, oder nicht.
 Man kann dies ausschalten (Wert: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

), um \SpecialChar TeX
-Code in \SpecialChar LyX
 komfortabler editieren zu können.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NextNoIndent
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Gibt an, ob der nachfolgende Absatz einen Erstzeileneinzug haben darf
 oder nicht.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 heißt, der Absatz erhält auf keinen Fall einen Einzug (z.
\begin_inset space \thinspace{}
\end_inset

B.
 nach einer Überschrift), wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultStyle
\end_layout

\end_inset

- (normalerweise 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Standard
\end_layout

\end_inset

-) Paragraphen einen Einzug haben.
 (Daher beeinflusst die Einstellung nur 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Standard
\end_layout

\end_inset

-Paragraphen.)
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ObsoletedBy
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] Der Name eines Layouts, das durch dieses ersetzt wurde.
 So können Sie ein Layout umbenennen und die Rückwärtskompatibilität erhalten.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParagraphGroup
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Legt fest ob aufeinanderfolgende Absätze desselben Typs als zusammengehörend
 behandelt werden.
 Das hat den Effekt, dass 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
GuiLabel
\end_layout

\end_inset

 nur einmalig vor einer solchen Gruppe ausgegeben wird.
 Dies ist standardmäßig der Fall für 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LaTeXType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Bib_Environment
\end_layout

\end_inset

 und nicht der Fall für alle anderen Typen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParbreakIsNewline
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Gibt an, dass ein Paragraph nicht durch eine leere Zeile in der \SpecialChar LaTeX
-Ausgabe
 abgesetzt wird, sondern nur durch einen Zeilenumbruch.
 Zusammen mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThru 1
\end_layout

\end_inset

 erlaubt dies die Emulation eines reinen Texteditors (so wie die \SpecialChar TeX
-Code Einfügung
).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParIndent
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Der Einzug der ersten Zeile eines Absatzes.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parindent
\end_layout

\end_inset

 bleibt für ein bestimmtes Layout fest.
 Eine Ausnahme ist das Standard-Layout, denn dort kann der Einzug vom vorherigen
 Layout mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NextNoIndent
\end_layout

\end_inset

 verboten werden.
 Außerdem benutzt das 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Standard
\end_layout

\end_inset

-Layout innerhalb von Umgebungen den 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parindent
\end_layout

\end_inset

 der Umgebung und nicht den eigenen.
 Zum Beispiel haben 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Standard
\end_layout

\end_inset

-Absätze innerhalb einer Aufzählung keinen Einzug.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParSep
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=0
\end_layout

\end_inset

] Der vertikale Anstand zwischen den Absätzen dieses Layouts.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parskip
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float=0
\end_layout

\end_inset

] Benutzer können in \SpecialChar LyX
 wählen, ob Absätze durch 
\family sans
Einrückung
\family default
 oder 
\family sans
Vertikaler
\begin_inset space \space{}
\end_inset

Abstand
\family default
 getrennt werden.
 Wenn 
\family sans
Einrückung
\family default
 gewählt ist, wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parskip
\end_layout

\end_inset

 ignoriert.
 Ist 
\family sans
Vertikaler
\begin_inset space \space{}
\end_inset

Abstand
\family default
 gewählt wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParIndent
\end_layout

\end_inset

 ignoriert und alle Absätze durch den vertikalen Abstand von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parskip
\end_layout

\end_inset

 getrennt.
 Die Länge dieses Abstands berechnet sich mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Parskip
\begin_inset space ~
\end_inset

* DefaultHeight
\end_layout

\end_inset

 wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
DefaultHeight
\end_layout

\end_inset

 die Höhe einer Zeile in der normalen Schrift ist.
 Dadurch bleibt das Aussehen mit verschiedenen Schriften gleich.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThru
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

]
\family typewriter
 
\family default
Legt fest, ob der Absatzinhalt unverändert ausgegeben werden soll, also
 ohne diverse von \SpecialChar LaTeX
 benötigte Ersetzungen durchzuführen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThruChars
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Definiert Zeichen, die unverändert ausgegeben werden sollen.
 Das bedeutet, dass sie nicht in einen \SpecialChar LaTeX
-Befehl übersetzt werden, falls das
 normalerweise der Fall wäre.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Preamble
\end_layout

\end_inset

 Befehle und Definitionen, die in die Präambel (vor 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{docu\SpecialChar softhyphen
ment}
\end_layout

\end_inset

) eingefügt werden, wenn dieses Layout benutzt wird.
 Kann verwendet werden um Pakete zu laden, Makros zu definieren usw.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndPreamble
\end_layout

\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RefPrefix
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Der Präfix, der verwendet werden soll, wenn auf Marken dieses Absatzes
 verwiesen wird.
 Dies erlaubt die Verwendung von formatierten Querverweisen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requires 
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] legt fest, dass das Layout die Funktion 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 benötigt (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Liste-von-Funktionen"

\end_inset

 für eine List der Funktionen).
 Wenn Sie ein Paket mit bestimmten Optionen anfordern müssen, können Sie
 zusätzlich 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PackageOptions
\end_layout

\end_inset

als allgemeiner Textklassen-Parameter verwenden (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Allgemeine-Parameter-für"

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ResetArgs
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Setzt die \SpecialChar LaTeX
-Argumente dieses Stils zurück (der via 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

 definiert wurde).
 Dies ist nützlich, wenn man einen Stil mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CopyStyle
\end_layout

\end_inset

 kopiert hat, aber nicht dessen (benötigte und optionale) Argumente übernehmen
 will.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ResumeCounter
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Behält den letzten Zählerstand bei Zählern bei, die normalerweise am Beginn
 einer neuen Sequenz von Absatzstilen zurückgesetzt würde.
 Momentan ist das nur sinnvoll, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelType
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Enumerate
\end_layout

\end_inset

 gesetzt ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RightDelim
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Eine Zeichenkette, die am Ende des Inhalts des Stils ausgegeben wird.
 Ein Zeilenumbruch in der Ausgabe wird mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<br/>
\end_layout

\end_inset

 angegeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RightMargin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string=""
\end_layout

\end_inset

] Ähnlich wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftMargin
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Spacing
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
single
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
onehalf
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
double
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
other
\begin_inset space ~
\end_inset

<Wert>
\end_layout

\end_inset

] Dies definiert die Voreinstellung für den Zeilenabstand des Layouts.
 Die Argumente 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
single
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
onehalf
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
double
\end_layout

\end_inset

 entsprechen den Multiplikatoren 1, 1.25 und 1.667.
 Wenn Sie als Argument 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
other
\end_layout

\end_inset

 angeben, müssen Sie als 
\emph on
Wert
\emph default
 einen konkreten Multiplikator angeben.
 Im Gegensatz zu anderen Parametern erzeugt \SpecialChar LyX
, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Spacing
\end_layout

\end_inset

 gesetzt wird, spezifischen \SpecialChar LaTeX
-Code, der das \SpecialChar LaTeX
-Paket 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
setspace
\end_layout

\end_inset

 verwendet.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Spellcheck
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Erlaubt es, den Inhalt des Absatzes auf Rechtschreibung zu überprüfen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
StepMasterCounter
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Erhöht den Hauptzähler eines gegebenen Zählers am Anfang einer neuen Sequenz
 von Layouts.
 Momentan ist das nur sinnvoll, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelType
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Enumerate
\end_layout

\end_inset

 gesetzt ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TextFont
\end_layout

\end_inset

 Der Zeichensatz, der für den Textkörper verwendet wird.
\begin_inset Newline newline
\end_inset

Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TocLevel
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int=3
\end_layout

\end_inset

]
\family typewriter
 
\family default
ist die Stufe des Stils im Inhaltsverzeichnis und wird zur automatischen
 Nummerierung von Abschnittsüberschriften benutzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ToggleIndent
\end_layout

\end_inset

 [
\emph on

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
default
\end_layout

\end_inset


\emph default
, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
always
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
never
\end_layout

\end_inset

] Dieser Befehl legt fest, ob die Einrückung der ersten Absatzzeile über
 den Absatz-Dialog ein/ausgeschaltet werden kann.
 Wenn 
\emph on

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph off
default
\end_layout

\end_inset


\emph default
 gesetzt ist, kann umgeschaltet werden, wenn in den Dokumenteinstellungen
 für die Absatztrennung 
\begin_inset Quotes gld
\end_inset

Einrückung
\begin_inset Quotes grd
\end_inset

 gewählt ist, Mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
always
\end_layout

\end_inset

 kann immer umgeschaltet werden, unabhängig von den Dokumenteinstellungen.
 Mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
never
\end_layout

\end_inset

kann nie umgeschaltet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TopSep
\end_layout

\end_inset


\series medium
 
\series default
[
\family typewriter
float=0
\family default
] Der vertikale Abstand, der die erste Serie von Absätzen vom vorangehenden
 Text trennt.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:I18n"

\end_inset

Internationalisierung von Absatz-Stilen
\end_layout

\begin_layout Standard
Wenn ein Absatzstil (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Style
\end_layout

\end_inset

) Text definiert, der im ausgegebenen Dokument erscheinen soll, kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LangPreamble
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BabelPreamble
\end_layout

\end_inset

 verwendet werden, um nicht-englische und sogar mehrsprachige Dokumente
 korrekt zu bedienen.
 Der folgende Auszug (aus der Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
theorems-ams.inc
\end_layout

\end_inset

) zeigt, wie das geht:
\end_layout

\begin_layout LyX-Code
Preamble
\end_layout

\begin_deeper
\begin_layout LyX-Code
  
\backslash
theoremstyle{remark}
\end_layout

\begin_layout LyX-Code
  
\backslash
newtheorem{claim}[thm]{
\backslash
protect
\backslash
claimname}
\end_layout

\begin_layout LyX-Code
EndPreamble
\end_layout

\begin_layout LyX-Code
LangPreamble
\end_layout

\begin_layout LyX-Code
  
\backslash
providecommand{
\backslash
claimname}{_(Claim)}
\end_layout

\begin_layout LyX-Code
EndLangPreamble
\end_layout

\begin_layout LyX-Code
BabelPreamble
\end_layout

\begin_layout LyX-Code
    
\backslash
addto
\backslash
captions$$lang{
\backslash
renewcommand{
\backslash
claimname}{_(Claim)}}
\end_layout

\begin_layout LyX-Code
EndBabelPreamble
\end_layout

\end_deeper
\begin_layout Standard
Im Grunde kann jeder korrekte \SpecialChar LaTeX
-Code in die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LangPreamble
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BabelPreamble
\end_layout

\end_inset

 eingefügt werden, normalerweise sieht er aber so aus wie hier gezeigt.
 Der Schlüssel zur korrekten Übersetzung des ausgegebenen Texts ist hier
 die Definition des \SpecialChar LaTeX
-Befehls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
claimname
\end_layout

\end_inset

 und seine Verwendung in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
newtheorem
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LangPreamble
\end_layout

\end_inset

 erlaubt Internationalisierung mit Blick auf die Hauptsprache des Dokuments.
 Der Inhalt wird im Vorspann des \SpecialChar LaTeX
-Dokuments ausgegeben, wie im Fall von
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Preamble
\end_layout

\end_inset

.
 Spezifisch ist allerdings die Verwendung der 
\begin_inset Quotes gld
\end_inset

Funktion
\begin_inset Quotes grd
\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
_()
\end_layout

\end_inset

, die mit der Übersetzung seines Inhalts in die Dokumentsprache ersetzt
 wird, wenn \SpecialChar LyX
 eine \SpecialChar LaTeX
-Ausgabe erzeugt.
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BabelPreamble
\end_layout

\end_inset

 ist etwas komplexer, da sie auf mehrsprachige Dokumente abzielt und eine
 Schnittstelle zum Paket 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
babel
\end_layout

\end_inset

 bietet.
 Sein Inhalt wird jeweils einmal für jede im Dokument verwendete Sprache
 in den Vorspann eingefügt.
 Das Argument von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
_()
\end_layout

\end_inset

 wird dabei jeweils durch die Übersetzung in die betreffende Sprache ersetzt;
 der Ausdruck 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$lang
\end_layout

\end_inset

 wird vom Babel-Namen für die Sprache ersetzt (z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ngerman
\end_layout

\end_inset

 für Deutsch).
\end_layout

\begin_layout Standard
Ein deutschsprachiges Dokument, das auch einen französischen Abschnitt enthält,
 würde also etwa folgendes im Vorspann stehen haben:
\end_layout

\begin_layout LyX-Code

\backslash
addto
\backslash
captionsfrench{
\backslash
renewcommand{
\backslash
claimname}{Affirmation}}
\begin_inset Newline newline
\end_inset


\backslash
addto
\backslash
captionsngerman{
\backslash
renewcommand{
\backslash
claimname}{Behauptung}}
\begin_inset Newline newline
\end_inset


\backslash
providecommand{
\backslash
claimname}{Behauptung}
\end_layout

\begin_layout Standard
\SpecialChar LaTeX
 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
babel
\end_layout

\end_inset

 werden gemeinsam den jeweils korrekten Text in der Ausgabe erzeugen.
\end_layout

\begin_layout Standard
Wichtig zu wissen ist, dass die Übersetzungen selbst von \SpecialChar LyX
 beigesteuert werden.
 Dabei wird die Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
layouttranslations
\end_layout

\end_inset

 konsultiert.
 Das heißt, dass 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LangPreamble
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BabelPreamble
\end_layout

\end_inset

 nur richtig sinnvoll im Fall von Layout-Dateien sind, die mit \SpecialChar LyX
 geliefert
 werden, da benutzereigene Layout-Dateien von \SpecialChar LyX
' Übersetzungsmechanismus
 nicht berücksichtigt werden, wenn die Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
layouttranslations
\end_layout

\end_inset

 nicht entsprechend bearbeitet wurde.
 Umgekehrt sollten alle Layout-Dateien, die in \SpecialChar LyX
 aufgenommen werden sollen,
 diese Marken auch konsequent einsetzen.
 Beachten Sie, dass die Übersetzungen, die \SpecialChar LyX
 bietet, niemals mit kleineren
 Versionssprüngen geändert werden (bspw.
\begin_inset space \space{}
\end_inset

zwischen Version 2.1.x und 2.1.y).
 Es ist aber damit zu rechnen, dass dies im Rahmen eines Hauptversionssprungs
 (z.
\begin_inset space \thinspace{}
\end_inset

B.
\begin_inset space \space{}
\end_inset

von 2.2.x auf 2.3.0) geschieht.
\end_layout

\begin_layout Subsection
Gleitobjekte
\begin_inset CommandInset label
LatexCommand label
name "subsec:Gleitobjekte"

\end_inset


\end_layout

\begin_layout Standard
Es ist nötig, Gleitobjekte (
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
Abbildung
\end_layout

\end_inset

, 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
Tabelle
\end_layout

\end_inset

,\SpecialChar ldots
) in der Textklasse selber zu definieren.
 Standardgleitobjekte sind in der Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdfloats.inc
\end_layout

\end_inset

 enthalten, so dass Sie sie nur noch
\end_layout

\begin_layout LyX-Code
Input stdfloats.inc
\end_layout

\begin_layout Standard
zu Ihrer Layoutdatei hinzufügen müssen.
 Wenn Sie eine Textklasse implementieren wollen, die andere Gleitobjekttypen
 enthält (wie zum Beispiel die AGU-Klasse), werden Ihnen die folgenden Informati
onen helfen:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AllowedPlacement
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=!htbpH] Erlaubte Platzierungsoptionen für den Gleitobjekttyp.
 Der Wert ist eine Zeichenkette aus Platzierungszeichen.
 Mögliche Zeichen sind: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
h
\end_layout

\end_inset

 (
\emph on
\lang english
here
\emph default
\lang ngerman
 = 
\begin_inset Quotes gld
\end_inset

hier wenn möglich
\begin_inset Quotes grd
\end_inset

), 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
t
\end_layout

\end_inset

 (
\emph on
\lang english
top
\emph default
\lang ngerman
 = 
\begin_inset Quotes gld
\end_inset

oben auf Seite
\begin_inset Quotes grd
\end_inset

), 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
b
\end_layout

\end_inset

 (
\emph on
\lang english
bottom
\emph default
\lang ngerman
 = 
\begin_inset Quotes gld
\end_inset

unten auf Seite
\begin_inset Quotes grd
\end_inset

), 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
p
\end_layout

\end_inset

 (
\emph on
\lang english
page
\emph default
\lang ngerman
 = 
\begin_inset Quotes gld
\end_inset

auf Seite nur mit Gleitobjekten
\begin_inset Quotes grd
\end_inset

), 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
H
\end_layout

\end_inset

 (
\begin_inset Quotes gld
\end_inset

hier, unbedingt
\begin_inset Quotes grd
\end_inset

) und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
!
\end_layout

\end_inset

 (
\begin_inset Quotes gld
\end_inset

ignoriere LaTeX-Regeln
\begin_inset Quotes erd
\end_inset

).
 Die Reihenfolge der Zeichen in der Zeichenkette ist egal.
 Wenn keine Platzierungsoptionen erlaubt sind, verwendet man stattdessen
 die Zeichenkette 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
none
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AllowsSideways
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\emph on

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset


\emph default
] Definiert ob das Gleitobjekt mit Hilfe des \SpecialChar LaTeX
-Pakets 
\family typewriter
rotfloat
\family default
 (sidewaysfloat) rotiert werden kann.
 Falls das nicht der Fall ist, setzt man es auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AllowsWide
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\emph on

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset


\emph default
] Definiert ob das Gleitobjekt eine Sternversion hat, die in einem zweispaltigen
 Dokument die komplette Seitenbreite einnimmt.
 Falls das nicht der Fall ist, setzt man es auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Extension
\end_layout

\end_inset


\family typewriter
\series medium
 
\family default
\series default
[
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=""] Die Dateinamenserweiterung einer zusätzlichen Datei für das Abbildungsver\SpecialChar softhyphen
ze
ichnis (oder andere).
 \SpecialChar LaTeX
 schreibt die Beschriftungen in diese Datei.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
GuiName
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=""] Die Zeichenkette, die in den Menüs und für die Beschriftung benutzt
 wird.
 Dies wird in die aktuelle Sprache übersetzt, wenn babel verwendet wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTML*
\end_layout

\end_inset

 Diese Marken kontrollieren die XHTML-Ausgabe.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:XHTML-Spezifikationen"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
IsPredefined
\end_layout

\end_inset

 [
\emph on

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset


\emph default
,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Gibt an, ob das Gleitobjekt bereits in der Dokumentklasse definiert ist
 oder ob das \SpecialChar LaTeX
-Paket 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float
\end_layout

\end_inset

 geladen werden muss, um es zu definieren.
 Die Voreinstellung ist 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

, was bedeutet, dass 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float
\end_layout

\end_inset

 verwendet wird.
 Es sollte auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt werden, wenn das Gleitobjekt bereits in der Dokumentklasse definiert
 ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ListCommand
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=""] Der Befehl der verwendet wird, um eine Liste der Gleitobjekte dieses
 Typs zu generieren; das 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash

\end_layout

\end_inset

 muss weggelassen werden.
 Der Befehl 
\emph on
muss
\emph default
 angegeben werden, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UsesFloatPkg
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

 gesetzt ist, da es sonst keine Möglichkeit gibt, diesen Befehl zu erstellen.
 Er wird ignoriert, falls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UsesFloatPkg
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt ist, da es dann eine Möglichkeit gibt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ListName
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=""] Die Überschrift für das Gleitobjekt-Verzeichnis (z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\begin_inset Quotes gld
\end_inset

Abbildungsverzeichnis
\begin_inset Quotes grd
\end_inset

).
 Sie wird für die Bildschirmmarke in \SpecialChar LyX
 verwendet, von \SpecialChar LaTeX
 für den Titel verwendet
 und als Titel in der XHTML-Ausgabe.
 Sie wird in die Dokumentsprache übersetzt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NumberWithin
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=""] Dieses optionale Argument bestimmt, ob Gleitobjekte dieser Klasse mit
 der Abschnittsnummer dieses Dokuments nummeriert werden.
 Wenn zum Beispiel 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NumberWithin
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
chapter
\end_layout

\end_inset

 gesetzt ist, werden die Gleitobjekte mit den Kapitelnummern nummeriert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Placement
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=""] Die Standardplatzierung für die Gleitobjektklasse.

\family typewriter
 
\family default

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 sollte die Standard-\SpecialChar LaTeX
-Werte 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
t
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
b
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
p
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
h
\end_layout

\end_inset

 für 
\emph on
oben
\emph default
, 
\emph on
unten
\emph default
, 
\emph on
Seite
\emph default
 und 
\emph on
hier
\emph default
 enthalten.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Wie in \SpecialChar LaTeX
 ist die Reihenfolge der Buchstaben unerheblich.
\end_layout

\end_inset

 Zusätzlich gibt es den neuen Typ 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
H
\end_layout

\end_inset

, der nicht wirklich für ein Gleitobjekt steht, denn er bedeutet: drucke
 es 
\emph on
hier
\emph default
 und nirgendwo sonst.
 Beachten Sie, dass 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
H
\end_layout

\end_inset

 besonders ist und wegen der Implementierungsdetails nicht bei nicht-eingebauten
 Gleitobjekttypen benutzt werden kann.
 Wenn Sie die Platzierung nicht verstehen, benutzen Sie einfach 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
tbp
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RefPrefix
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Das Präfix, das verwendet werden soll, wenn auf Marken dieser Gleitobjekte
 verwiesen wird.
 Dies erlaubt die Verwendung von Formatierten Querverweisen.
 Man kann das 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RefPrefix
\end_layout

\end_inset

 eines kopierten Stils entfernen, indem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
OFF
\end_layout

\end_inset

 gesetzt wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Style
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=""] ist der Gleitobjektstil, wenn er mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
newfloat
\end_layout

\end_inset

 definiert wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Type
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=""] ist der 
\begin_inset Quotes gld
\end_inset

Typ
\begin_inset Quotes grd
\end_inset

 der neuen Gleitobjektklasse, wie z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\emph on
Programm
\emph default
 oder 
\emph on
Algorithmus
\emph default
.
 Nach dem entsprechenden 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
newfloat
\end_layout

\end_inset

 stehen Befehle wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{program}
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
end{algorithm*}
\end_layout

\end_inset

 zur Verfügung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UsesFloatPkg
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Gibt an, ob dieses Gleitobjekt mit Hilfe des \SpecialChar LaTeX
-Pakets 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float
\end_layout

\end_inset

 definiert wurde, entweder durch die Dokumentklassen, ein anderes Paket
 oder durch \SpecialChar LyX
.
\end_layout

\begin_layout Description
Anmerkung: Wenn ein Gleitobjekt vom Typ 
\emph on
\lang english
type
\emph default
\lang ngerman
 definiert wurde, gibt es automatisch einen dazugehörigen Zähler namens
 
\emph on
\lang english
type
\emph default
\lang ngerman
.
\end_layout

\begin_layout Subsection
Flexible Einfügungen und InsetLayout
\begin_inset CommandInset label
LatexCommand label
name "subsec:Flexible-Einfügungen-und"

\end_inset


\end_layout

\begin_layout Standard
Es gibt drei Arten von flexiblen Einfügungen:
\end_layout

\begin_layout Itemize
Zeichenstil (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CharStyle
\end_layout

\end_inset

): diese definieren semantische Textauszeichnungen, die mit \SpecialChar LaTeX
-Befehlen wie
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
noun
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
code
\end_layout

\end_inset

 korrespondieren.
\end_layout

\begin_layout Itemize
Benutzerdefiniert (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Custom
\end_layout

\end_inset

): diese können benutzt werden, um benutzerdefinierte einklappbare Einfügungen
 zu definieren, ähnlich wie \SpecialChar TeX
-Code, Fußnote usw.
 Ein Beispiel ist Endnote, die im 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
endnote
\end_layout

\end_inset

-Modul definiert ist.
\end_layout

\begin_layout Itemize
XML-Element (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Element
\end_layout

\end_inset

): diese werden mit DocBook-Klassen benutzt.
\end_layout

\begin_layout Standard
Flexible Einfügungen werden mit der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Marke definiert, die weiter unten erklärt wird.
\end_layout

\begin_layout Standard
Die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Marke besitzt noch eine andere Funktion: sie kann benutzt werden, um das
 allgemeine Aussehen vieler verschiedener Einfügungstypen anzupassen.
 Zurzeit kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

 benutzt werden, um die Layout-Parameter für Fußnoten, Randnoten, eingefügten
 Noten, \SpecialChar TeX
-Code (ERT), Zweige, Stichwortverzeichnisse, Boxen, Tabellen, Algorithme
n, URLs und Legenden anzupassen, ebenso um flexible Einfügungen zu definieren.
\end_layout

\begin_layout Standard
Die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Definition muss mit folgender Zeile beginnen:
\end_layout

\begin_layout LyX-Code
InsetLayout <Typ>
\end_layout

\begin_layout Standard
Hier bezeichnet 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

 die Einfügung, deren Layout definiert wird.
 Es gibt vier Möglichkeiten.
\end_layout

\begin_layout Enumerate
Das Layout für eine existierende Einfügung wird geändert.
 In diesem Fall kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

 folgendes sein: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Algorithm
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Branch
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Box
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Box:shaded
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Caption:Standard
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ERT
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Figure
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Foot
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Index
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Info
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Info:menu
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Info:shortcut
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Info:shortcuts
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Listings
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Marginal
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Note:Comment
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Note:Note
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Note:Greyedout
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Table
\end_layout

\end_inset

, oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
URL
\end_layout

\end_inset

.
\end_layout

\begin_layout Enumerate
Das Layout für eine neue flexible Einfügung wird definiert.
 In diesem Fall muss 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

 in der Form 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Flex:<Name>
\end_layout

\end_inset

 sein, wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Name
\end_layout

\end_inset

 ein beliebiger gültiger Bezeichner sein kann, der in keiner anderen existierend
en Einfügung benutzt wird.
 Der Bezeichner darf Leerzeichen enthalten, dann muss aber der komplette
 Typ in Anführungszeichen gesetzt werden.
 Beachten Sie, dass die Definition einer flexiblen Einfügung auch einen
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyXType
\end_layout

\end_inset

-Eintrag enthalten 
\emph on
muss
\emph default
, der festlegt, welcher Einfügungstyp definiert wird.
\end_layout

\begin_layout Enumerate
Das Layout für einen benutzerdefinierten Zweig wird definiert.
 In diesem Fall muss 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

 die Form 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Branch:<Name>
\end_layout

\end_inset

 haben, wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Name
\end_layout

\end_inset

 ein beliebiger existierender Bezeichner für einen im Dokument definierten
 Zweig sein muss.
 Der Bezeichner darf Leerzeichen enthalten, dann muss aber der komplette
 Typ in Anführungszeichen gesetzt werden.
 Der Hauptzweck einer solchen Definition ist es, spezifische Zweige in \SpecialChar LaTeX
-Code
 einzubetten.
\end_layout

\begin_layout Enumerate
Das Layout einer benutzer- oder klassenspezifischen Legende wird definiert.
 In diesem Fall muss 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

 die Form 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Caption:<Name>
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 haben, wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Name
\end_layout

\end_inset

 den Namen der Legende spezifiziert, wie er im Menü erscheint.
 Schauen Sie sich die Standard-Legende (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Caption:Standard
\end_layout

\end_inset

), die spezifischen Legenden der KOMA-Script-Klassen (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Caption:Above
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Caption:Below
\end_layout

\end_inset

) oder das Modul 
\family sans
Mehrsprachige
\begin_inset space ~
\end_inset

Legenden
\family default
 (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Caption:Bicaption
\end_layout

\end_inset

) für Beispiele an.
\end_layout

\begin_layout Standard
Die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Definition kann folgende Einträge enthalten:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToToc
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=""] Diese Einfügung erscheint im Inhaltsverzeichnis des spezifizierten
 Typs.
 Bei einer leeren Zeichenkette erscheint sie nirgends.
 Siehe auch 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
OutlinerName
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
IsTocCaption
\end_layout

\end_inset

.
 Dies ist nur für Flex-Einfügungen implementiert.
 Standard: deaktiviert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int
\end_layout

\end_inset

] Definiert die Argumentnummer eines Befehls\SpecialChar breakableslash
einer Umgebung, die im aktuellen
 Layout definiert ist.
 Die Definition muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndArgument
\end_layout

\end_inset

 beendet werden.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

 für Details.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BabelPreamble
\end_layout

\end_inset

 Präambel um Sprachbefehle zu modifizieren; siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:I18n"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BgColor
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] ist die Hintergrundfarbe der Einfügung.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Namen-von-Farben"

\end_inset

 für eine Liste von verfügbaren Farbnamen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ContentAsLabel
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Ob der Inhalt der Einfügung als Marke verwendet werden soll, wenn die
 Einfügung geschlossen ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CopyStyle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Typ>
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

.
 Beachten Sie, dass der komplette Typ angegeben werden muss, z.
\begin_inset space \thinspace{}
\end_inset

B.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CopyStyle Flex:<Name>
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CustomPars
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] zeigt an, ob der Benutzer in dieser Einfügung den Absatzeinstellungen-Dialog
 benutzen darf.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Decoration
\end_layout

\end_inset

 kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Classic
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Minimalistic
\end_layout

\end_inset

, oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Conglomerate
\end_layout

\end_inset

 sein.
 Es beschreibt den Darstellungsstil für den Einfügungsrahmen und die -knöpfe.
 Fußnoten benutzen im allgemeinen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Classic
\end_layout

\end_inset

, \SpecialChar TeX
-Code
\family typewriter
 
\family default

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Minimalistic
\end_layout

\end_inset

 und Zeichenstile 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Conglomerate
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Display
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Nur sinnvoll wenn der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 ist.
 Gibt an, ob die Umgebung in der Ausgabe abgesetzt erscheint oder in einer
 Zeile mit dem umgebenden Text.
 Wenn auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

 gesetzt, wird angenommen, dass die \SpecialChar LaTeX
-Umgebung Leerraum nach den 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{
\emph on
LatexName
\emph default
}
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
end{
\emph on
LatexName
\emph default
}
\end_layout

\end_inset

 Befehlen ignoriert (inklusive des Zeilenumbruchzeichens).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

 beendet die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Definition.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 wird für den Text 
\emph on
und
\emph default
 die Marke benutzt (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

).
 Beachten Sie, dass die Definition dieses Fonts automatisch dem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 denselben Wert zuweist, das heißt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 muss zuerst definiert werden und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 danach, wenn sie unterschiedlich sein sollen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FixedWidthPreambleEncoding
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Ob eine Zeichenkodierung mit 
\begin_inset Quotes gld
\end_inset

fester Breite
\begin_inset Quotes grd
\end_inset

 für den übersetzten Inhalt von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
BabelPreamble
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LangPreamble
\end_layout

\end_inset

 erzwungen wird.
 Dies wird für spezielle \SpecialChar LaTeX
-Pakete wie 
\family typewriter
listings
\family default
 benötigt, die keine variable Zeichenkodierung wie 
\family sans
utf8
\family default
 erlauben.
 Diese Einstellung wird ignoriert, wenn \SpecialChar LaTeX
-Varianten wie Xe\SpecialChar TeX
 oder Lua\SpecialChar TeX
 verwendet
 werden, die Unicode voll unterstützen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceLocalFontSwitch
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Legt fest, ob, wenn Babel verwendet wird, in dieser Einfügung immer eine
 lokale Umschaltung der Sprache erfolgen soll (mittels 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
foreignlanguage
\end_layout

\end_inset

), also nie eine globale (mittels 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
selectlanguage
\end_layout

\end_inset

).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceLTR
\end_layout

\end_inset

 erzwingt die 
\begin_inset Quotes gld
\end_inset

\SpecialChar LaTeX
-Sprache
\begin_inset Quotes grd
\end_inset

 und führt zu einer Links-nach-rechts-Ausgabe, zum Beispiel bei \SpecialChar TeX
-Code oder
 URL.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceLTR
\end_layout

\end_inset

 ist eine Behelfslösung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForceOwnlines
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] erzwingt einen Zeilenumbruch in der \SpecialChar LaTeX
-Ausgabe vor und nach der Einfügung.
 Dies stellt sicher, dass die Einfügung in eigenen Zeilen ausgegeben wird,
 um die Ausgabe später besser anderweitig einfacher verändern zu können.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForcePlain
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] erzwingt die Verwendung von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PlainLayout
\end_layout

\end_inset

, wobei der Benutzer den Absatzstil der Einfügung nicht ändern darf.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FreeSpacing
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTML*
\end_layout

\end_inset

 Diese Tags kontrollieren die XHTML-Ausgabe.
 Siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:XHTML-Spezifikationen"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InToc
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Legt fest, ob der Inhalt der Einfügung für die Einträge im Fenster 
\begin_inset Quotes gld
\end_inset

Gliederung des Dokuments
\begin_inset Quotes grd
\end_inset

 verwendet werden soll, und zwar für alle Inhaltsverzeichnisse, unabhängig
 von der Einstellung 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToToc
\end_layout

\end_inset

.
 Zum Beispiel sollte der Inhalt einer Fußnote in einer Überschrift nicht
 im Abschnittstitel im Inhaltsverzeichnis des Gliederungs-Fensters erscheinen,
 sehr wohl aber der Inhalt bestimmter Zeichenstile.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
IsTocCaption
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wenn dies auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt ist und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToToc
\end_layout

\end_inset

 aktiviert ist, fügt die Einfügung eine Zusammenfassung ihres Inhalts zum
 spezifizierten Inhaltsverzeichnis.
 Ansonsten scheint dort nur die Marke auf.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
KeepEmpty
\end_layout

\end_inset

 [
\emph on

\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset


\emph default
,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelFont
\end_layout

\end_inset

 ist die für die Marke benutze Schrift (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

).
 Beachten Sie, dass diese Definition niemals vor 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

 erscheinen darf, weil sie sonst unwirksam ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=""] wird auf dem Knopf der Einfügung und anderswo als Marke angezeigt.
 Einige Einfügungstypen (\SpecialChar TeX
-Code und Zweig) ändern diese Marke temporär.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LangPreamble
\end_layout

\end_inset

 Sprachabhängige Präambel; siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:I18n"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexName
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

] ist der Name der \SpecialChar LaTeX
-Umgebung oder des \SpecialChar LaTeX
-Befehls.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexParam
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Parameter>
\end_layout

\end_inset

] ist ein optionaler Parameter für den zugehörigen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexName
\end_layout

\end_inset

, einschließlich möglicher Klammerpaare wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[]
\end_layout

\end_inset

.
 Dieser Parameter kann in \SpecialChar LyX
 nicht geändert werden (man verwendet 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

 für anpassbare Parameter).
 Dieser wird nach allen anderen \SpecialChar LaTeX
-
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

en ausgegeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Command, Environment, None
\end_layout

\end_inset

] Wie der Stil in \SpecialChar LaTeX
 übersetzt wird.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LatexType
\end_layout

\end_inset

 ist vielleicht etwas missverständlich, da diese Regeln auch für SGML-Klassen
 gelten.
 Siehe die SGML-Klassendateienfür spezielle Beispiele.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
None
\end_layout

\end_inset

 bedeutet nichts Spezielles 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Command
\end_layout

\end_inset

 bedeutet 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash

\emph on
LatexName
\emph default
{\SpecialChar ldots
}
\end_layout

\end_inset


\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Environment
\end_layout

\end_inset

 bedeutet 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
begin{
\emph on
LatexName
\emph default
}\SpecialChar ldots

\backslash
end{
\emph on
LatexName
\emph default
}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Zusammenfassend bedeutet das, dass die \SpecialChar LaTeX
-Ausgabe entweder: 
\end_layout

\begin_layout LyX-Code

\backslash
LatexName[LatexParam]{\SpecialChar ldots
}
\end_layout

\begin_layout Standard
oder: 
\end_layout

\begin_layout LyX-Code

\backslash
begin{LatexName}[LatexParam] \SpecialChar ldots
 
\backslash
end{LatexName}
\end_layout

\begin_layout Standard
sein wird, je nach \SpecialChar LaTeX
-Typ.
\end_layout

\end_deeper
\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LeftDelim
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Eine Zeichenkette, die zu Beginn des Inhalts des Stils ausgegeben wird.
 Ein Zeilenumbruch in der Ausgabe wird mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<br/>
\end_layout

\end_inset

 angegeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyxType
\end_layout

\end_inset

 kann 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
charstyle
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
custom
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
element
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
end
\end_layout

\end_inset

 (zeigt das Ende einer Definition an) sein.
 Dieser Eintrag wird für flexible Einfügungen benötigt und ist nur dort
 sinnvoll.
 Neben anderen Dingen legt er fest, in welchem Menü diese Einfügung erscheinen
 wird.
 Wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyxType
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
charstyle
\end_layout

\end_inset

 gesetzt, wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MultiPar
\end_layout

\end_inset

 automatisch auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForcePlain
\end_layout

\end_inset

 automatisch auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 gesetzt.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MultiPar
\end_layout

\end_inset

 kann auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForcePlain
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

 für 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
charstyle
\end_layout

\end_inset

-Einfügungen gesetzt werden, indem es 
\emph on
nach
\emph default
 dem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyxType
\end_layout

\end_inset

 spezifiziert wird.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MultiPar
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] zeigt an, ob in dieser Einfügung mehrere Absätze erlaubt sind.
 Dadurch wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CustomPars
\end_layout

\end_inset

 auf denselben Wert gesetzt und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ForcePlain
\end_layout

\end_inset

 auf den anderen.
 Diese können auf andere Werte gesetzt werden, wenn sie 
\emph on
nach
\emph default
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MultiPar
\end_layout

\end_inset

 benutzt werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NeedProtect
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] zeigt an, ob 
\emph on
zerbrechliche
\emph default
 
\emph on
Befehle
\emph default
 in diesem Layout (mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
protect
\end_layout

\end_inset

) geschützt werden sollen.
 Es zeigt 
\emph on
nicht
\emph default
 an, ob der Befehl selber geschützt werden soll.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
NoInsetLayout
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Layout>
\end_layout

\end_inset

] Löscht ein vorhandenes 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ObsoletedBy
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Layout>
\end_layout

\end_inset

] Name eines 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

, das dieses 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

 ersetzt.
 Dies wird verwendet um ein 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

 umzubenennen und dabei Rückwärtskompatibilität zu gewähren.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ParbreakIsNewline
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PassThru
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Preamble
\end_layout

\end_inset

 Wie bei Absatz-Layouts, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RefPrefix
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Das Präfix, das verwendet werden soll, wenn auf Marken dieser Einfügung
 verwiesen wird.
 Dies erlaubt die Verwendung von formatierten Querverweisen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requires
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Wie bei Absatz-Layouts, siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Einzelne-Absatz-Layouts"

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ResetArgs
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Setzt die \SpecialChar LaTeX
-Argumente dieses Stils zurück (der via 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Argument
\end_layout

\end_inset

 definiert wurde).
 Dies ist nützlich, wenn man einen Stil mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CopyStyle
\end_layout

\end_inset

 kopiert hat, aber nicht dessen (benötigten und optionalen) Argumente übernehmen
 will.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ResetsFont
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Legt fest, ob die Einfügung die Schrift der übergeordneten Umgebung verwenden
 soll oder eine eigene.
 Voreinstellung ist 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

: verwendet die Schrift der übergeordneten Umgebung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
RightDelim
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Eine Zeichenkette, die am Ende des Inhalts des Stils ausgegeben wird.
 Ein Zeilenumbruch in der Ausgabe wird mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<br/>
\end_layout

\end_inset

 angegeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Spellcheck
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Erlaubt es, den Inhalt der Einfügung auf Rechtschreibung zu überprüfen.
\end_layout

\begin_layout Subsection
Zähler
\begin_inset CommandInset label
LatexCommand label
name "subsec:Zähler"

\end_inset


\end_layout

\begin_layout Standard
Zähler (
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
chapter
\end_layout

\end_inset

, 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
figure
\end_layout

\end_inset

,\SpecialChar ldots
) müssen in der Textklasse selbst definiert werden.
 Die Standardzähler sind in der Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdcounters.inc
\end_layout

\end_inset

 definiert, so dass Sie nur die Zeile
\end_layout

\begin_layout LyX-Code
Input stdcounters.inc
\end_layout

\begin_layout Standard
zu Ihrer Layout-Datei hinzufügen müssen, damit diese arbeiten.Wenn Sie darüber
 hinaus eigene Zähler definieren wollen, können Sie das wie folgt tun.
 Zähler-Deklarationen beginnen mit
\end_layout

\begin_layout LyX-Code
Counter <Name>
\end_layout

\begin_layout Standard
wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Name>
\end_layout

\end_inset

 der Name Ihres Zählers ist.
 Die Deklaration endet mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
End
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Folgende Parameter können auch benutzt werden:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InitialValue
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
int=1
\end_layout

\end_inset

] Setzt den Startwert für einen Zähler, auf den er zurückgesetzt wird.
 Meist entspricht die Voreinstellung 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 bereits dem Gewünschten.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=""] definiert, wie der Zähler dargestellt wird.
 Hierdurch wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelStringAppendix
\end_layout

\end_inset

 auf denselben Wert gesetzt.
 In der Zeichenkette können folgende Konstrukte benutzt werden:
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
thecounter
\end_layout

\end_inset

 wird durch den Wert von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 (oder
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelStringAppendix
\end_layout

\end_inset

) des Zählers 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
counter
\end_layout

\end_inset

 ersetzt.
\end_layout

\begin_layout Itemize
Zählerwerte können durch \SpecialChar LaTeX
-ähnliche Makros wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash

\emph on
numbertype
\emph default
{
\emph on
counter
\emph default
}
\end_layout

\end_inset

 ausgedrückt werden, wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
numbertype
\end_layout

\end_inset

 Folgendes sein kann:
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Genau genommen ist die Situation etwas komplizierter: jeder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
numbertype
\end_layout

\end_inset

 mit Ausnahme der im Folgenden beschriebenen generiert arabische Ziffern.
 Möglicherweise ändert sich das in der Zukunft, verlassen Sie sich also
 nicht darauf.
\end_layout

\end_inset

 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
arabic
\end_layout

\end_inset

 für arabische Ziffern: 1, 2, 3, \SpecialChar ldots
; 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
alph
\end_layout

\end_inset

 für Kleinbuchstaben: a, b, c, \SpecialChar ldots
; 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Alph
\end_layout

\end_inset

 für Großbuchstaben: A, B, C, \SpecialChar ldots
; 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
roman
\end_layout

\end_inset

 für kleine römische Ziffern: i, ii, iii, \SpecialChar ldots
; 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Roman
\end_layout

\end_inset

 für große römische Ziffern: I, II, III, \SpecialChar ldots

\end_layout

\begin_layout Standard
Wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

 nicht definiert ist, wird ein Standardwert wie folgt gesetzt: Wenn der
 Zähler einen Hauptzähler 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
master
\end_layout

\end_inset

 (über 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Within
\end_layout

\end_inset

 definiert) hat, in Form der Zeichenkette 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
themaster.
\backslash
arabic{counter}
\end_layout

\end_inset

 benutzt, ansonsten als 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
arabic{counter}
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelStringAppendix
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=""] ist dasselbe wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelString
\end_layout

\end_inset

, aber für den Anhang.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PrettyFormat
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=""] Ein Format, das für 
\emph on
formatierte Querverweise
\emph default
 auf einen Zähler verwendet wird.
 Möchte man z.
\begin_inset space \thinspace{}
\end_inset

B.
 Verweise auf Abschnitte in der Form 
\begin_inset Quotes gld
\end_inset

Abschnitt
\begin_inset space ~
\end_inset

2.4
\begin_inset Quotes grd
\end_inset

 haben, sollte der String 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
##
\end_layout

\end_inset

 enthalten.
 Diese Zeichen werden später durch die referenzierte Abschnittsnummer ersetzt.
 Für Abschnitte würde man also 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Abschnitt ##
\end_layout

\end_inset

 verwenden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Within
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

=""] Wenn dies auf den Namen eines anderen Zählers gesetzt wird, wird der
 gegenwärtige Zähler jedes Mal zurückgesetzt, wenn der andere erhöht wird.
 Zum Beispiel wird 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
subsection
\end_layout

\end_inset

 zurückgesetzt, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
section
\end_layout

\end_inset

 erhöht wird.
\end_layout

\begin_layout Subsection
Beschreibung des Zeichensatzes
\begin_inset CommandInset label
LatexCommand label
name "subsec:Beschreibung-des-Zeichensatzes"

\end_inset


\end_layout

\begin_layout Standard
Eine Zeichensatzbeschreibung sieht folgendermaßen aus:
\end_layout

\begin_layout LyX-Code
Font 
\family roman
\emph on
oder
\family default
\emph default
 LabelFont 
\family roman
\emph on
oder
\family default
\emph default
 DefaultFont
\end_layout

\begin_layout LyX-Code
 ...
\end_layout

\begin_layout LyX-Code
EndFont
\end_layout

\begin_layout Standard
Folgende Parameter sind verfügbar:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Color
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
none
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
black
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
white
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
red
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
green
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
blue
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
cyan
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
magenta
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
yellow
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
brown
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
darkgray
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
gray
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
lightgray
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
lime
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
orange
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
olive
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
pink
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
purple
\end_layout

\end_inset

,
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
teal
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
violet
\end_layout

\end_inset

]
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Family
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
Roman
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Sans
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Typewriter
\end_layout

\end_inset

]
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Misc
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Zulässige Argumente sind: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
emph
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
noun
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
strikeout
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
underbar
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
uuline
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
uwave
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_emph
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_noun
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_strikeout
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_bar
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_uuline
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_uwave
\end_layout

\end_inset

.
 Jedes schaltet die entsprechende Eigenschaft an oder aus; zum Beispiel
 führt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
emph
\end_layout

\end_inset

 zum Stil 
\emph on
Hervorhebung
\emph default
 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_emph
\end_layout

\end_inset

 schaltet diesen aus.
\begin_inset Newline newline
\end_inset

Falls Sie Letzteres verwirrt, erinnern Sie sich, dass die Schrifteinstellungen
 standardmäßig von den umgebenden Stilen übernommen wird.
 Daher schaltet 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
no_emph
\end_layout

\end_inset

 die 
\emph on
Hervorhebung
\emph default
 aus, die z.
\begin_inset space \thinspace{}
\end_inset

B.
 in einer Theorem-Umgebung aktiv ist.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Series
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
Medium
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Bold
\end_layout

\end_inset

] 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Shape
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
Up
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Italic
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
SmallCaps
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Slanted
\end_layout

\end_inset

] 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Size
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
tiny
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
small
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
normal
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
large
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
larger
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
largest
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
huge
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
giant
\end_layout

\end_inset

]
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Citation-Engine-Beschreibung"

\end_inset

Beschreibung der 
\emph on
Cite Engine
\end_layout

\begin_layout Standard
Die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CiteEngine
\end_layout

\end_inset

-Blöcke, wie sie vor allem in den Cite-Engine-Dateien verwendet werden (siehe
 Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Cite-Engine-Dateien"
plural "false"
caps "false"
noprefix "false"

\end_inset

), legen fest, wie sich die Literaturverweisbefehle, die von einer bestimmten
 
\begin_inset Quotes gld
\end_inset


\lang english
Cite Engine
\lang ngerman

\begin_inset Quotes grd
\end_inset

 unterstützt werden, verhalten.
 Als 
\begin_inset Quotes gld
\end_inset


\lang english
Cite Engine
\lang ngerman

\begin_inset Quotes grd
\end_inset

 wird in \SpecialChar LyX
 eine spezifische Art und Weise, Literaturverweise zu gestalten,
 bezeichnet.
 Dabei können etwa Nummern, Autorennamen und\SpecialChar breakableslash
oder Jahresangaben oder anderes
 zum Einsatz kommen.
 Momentan unterstützt \SpecialChar LyX
 drei Engine-Typen, nämlich:
\end_layout

\begin_layout Enumerate
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
default
\end_layout

\end_inset

: die Standardmethode von Bib\SpecialChar TeX
, Literaturverweise darzustellen, ein einfacher
 nummerischer Stil (bspw.
 
\begin_inset Quotes gld
\end_inset

[1]
\begin_inset Quotes grd
\end_inset

)
\end_layout

\begin_layout Enumerate
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
authoryear
\end_layout

\end_inset

: Literaturverweise im 
\begin_inset Quotes gld
\end_inset

Harvard-Stil
\begin_inset Quotes grd
\end_inset

 mithilfe von Autorennamen und Publikationsjahren (bspw.
 
\begin_inset Quotes gld
\end_inset

Schmidt und Müller (2017b)
\begin_inset Quotes grd
\end_inset

)
\end_layout

\begin_layout Enumerate
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
numerical
\end_layout

\end_inset

: erweiterte nummerische Literaturverweise, bei denen auch Autorennamen
 oder Titel neben der Nummer ausgegeben werden können (bspw.
 
\begin_inset Quotes gld
\end_inset

Schmidt und Müller [1]
\begin_inset Quotes grd
\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CiteEngine
\end_layout

\end_inset

-Blöcke sehen so aus:
\end_layout

\begin_layout LyX-Code
CiteEngine default
\end_layout

\begin_layout LyX-Code
 cite
\end_layout

\begin_layout LyX-Code
 Citep*[][]
\end_layout

\begin_layout LyX-Code
 citeyearpar[][]=parencite*
\end_layout

\begin_layout LyX-Code
 ...
\end_layout

\begin_layout LyX-Code
End
\end_layout

\begin_layout Standard
Das Argument, dass der Marke 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CiteEngine
\end_layout

\end_inset

 folgt, bezeichnet den Engine-Typ.
 Die folgenden Zeilen definieren jeweils einen Literaturverweisbefehl, der
 von der Engine unterstützt wird, bzw.
 eine komplexere Literaturverweisangabe.
 Die Zeilen können im einfachsten Fall einfach einen Literaturverweisbefehl
 enthalten, der in dieser Form sowohl in der \SpecialChar LyX
-Datei als auch in der \SpecialChar LaTeX
-Ausgabe
 verwendet wird, oder auch komplexere Angaben, bei denen weiter differenziert
 wird.
 Die vollständige Syntax ist:
\end_layout

\begin_layout LyX-Code
LyXName|alias$*<!_stardesc!_stardesctooltip>[][]=latexcmd
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyXName
\end_layout

\end_inset

: Der Name des Befehl, wie es in der \SpecialChar LyX
-Datei verwendet wird.
\end_layout

\begin_deeper
\begin_layout Standard
Um den Wechsel zwischen verschiedenen Engines möglichst zu erleichtern,
 versuchen wir, für Befehle in verschiedenen Paketen, die dieselbe Ausgabe
 erzeugen, denselben 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyXName
\end_layout

\end_inset

 zu verwenden, auch wenn die hierfür verwendeten \SpecialChar LaTeX
-Befehle sich unterscheiden
 (viele sind nach den Befehlen in Natbib benannt).
 Wenn sich der \SpecialChar LaTeX
-Befehl vom 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyXName
\end_layout

\end_inset

 unterscheidet, wird ein 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
latexcmd
\end_layout

\end_inset

 spezifiziert.
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
alias
\end_layout

\end_inset

: eine (kommaseparierter) Liste von Befehlen, die in der aktuellen Engine
 auf den aktuellen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyXName
\end_layout

\end_inset

 zurückgesetzt werden.
 Auch dies dient der Erleichterung eines Wechsels zwischen Engines.
 Der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
alias
\end_layout

\end_inset

 ist vergleichbar mit der Marke 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ObsoletedBy
\end_layout

\end_inset

 in Layout-Definitionen.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
latexcmd
\end_layout

\end_inset

: Der auszugebende \SpecialChar LaTeX
-Befehl.
 
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Alias
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
latexcmd
\end_layout

\end_inset

 sind optional.
 Wenn kein 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
latexcmd
\end_layout

\end_inset

 spezifiziert ist, wird der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyXName
\end_layout

\end_inset

 als \SpecialChar LaTeX
-Befehl verwendet.
\end_layout

\begin_layout Standard
Beachten Sie außerdem:
\end_layout

\begin_layout Itemize
Großschreibung zeigt an, dass der Befehl auch eine großgeschriebene Variante
 hat (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
Latexcmd
\end_layout

\end_inset

 vs.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
latexcmd
\end_layout

\end_inset

).
 Diese Varianten erzwingen üblicherweise die Großschreibung von Namenspräfixen
 (
\emph on
von Goethe
\emph default
 
\begin_inset Formula $\Rightarrow$
\end_inset

 
\emph on
Von Goethe
\emph default
).
\end_layout

\begin_layout Itemize
Eckige Klammern 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[]
\end_layout

\end_inset

 zeigen die Zahl der optionalem Argumente an (0 bis 2).
\end_layout

\begin_layout Itemize
Ein Sternchen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
*
\end_layout

\end_inset

 zeigt an, dass es auch eine Sternvariante des Befehls gibt (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
latexcmd*
\end_layout

\end_inset

 vs.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
latexcmd
\end_layout

\end_inset

).
 
\end_layout

\begin_deeper
\begin_layout Standard
In der Voreinstellung hat ein Sternbefehl die Bedeutung: Gib eine vollständige
 Liste der Autorennamen aus, selbst wenn diese Liste aufgrund der Angabe
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MaxCiteNames
\end_layout

\end_inset

 mittels 
\begin_inset Quotes gld
\end_inset

et al.
\begin_inset Quotes grd
\end_inset

 gekürzt werden müsste.
\end_layout

\begin_layout Standard
Sollte das Sternchen für den aktuellen Befehl eine andere Bedeutung haben,
 kann diese in spitzen Klammern spezifiziert werden: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<!_stardesc!_stardesctooltip>
\end_layout

\end_inset

.
 Maximal zwei übersetzbare Makro-Schlagwörter, durch das Präfix 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
!_
\end_layout

\end_inset

 markiert, können hier angegeben werden.
 Das erste weist auf die Zeichenkette, mit der der Text 
\begin_inset Quotes gld
\end_inset


\lang english
Full aut&hor list
\lang ngerman

\begin_inset Quotes grd
\end_inset

 (dt.
 
\begin_inset Quotes gld
\end_inset

Alle Autoren
\begin_inset Quotes grd
\end_inset

) zum entsprechenden Ankreuzfeld im Literaturverweisdialog ersetzt werden
 soll, das zweite zu einem optionalen Werkzeughinweis für dieses Ankreuzfeld.
\end_layout

\begin_layout Standard
Die Makros selbst müssen in einem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CiteFormat
\end_layout

\end_inset

 (siehe nächster Abschnitt) definiert werden, wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
!
\end_layout

\end_inset

 vom Präfix weggelassen wird, etwa so: 
\end_layout

\begin_layout LyX-Code
_stardesc Marke für den S&ternbefehl
\end_layout

\begin_layout LyX-Code
_stardesctooltip Hinweise für das Sternbefehl-Ankreuzfeld.
\end_layout

\end_deeper
\begin_layout Itemize
Ein Dollar-Zeichen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$
\end_layout

\end_inset

 zeigt an, dass dieser Befehl 
\begin_inset Quotes gld
\end_inset

qualifizierte Literaturverweislisten
\begin_inset Quotes grd
\end_inset

 (
\emph on
\lang english
qualified citation lists
\emph default
\lang ngerman
) unterstützt.
 Dies ist ein 
\family sans
Biblatex
\family default
-spezifisches Feature für Mehrfachverweise.
 Dabei kann jeder Verweis in einer solchen Mehrfachverweisliste einen individuel
len Text vor und nach dem Verweis haben.
 Bitte lesen Sie das 
\family sans
Biblatex
\family default
-Handbuch für Einzelheiten.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Literaturverweisformat"

\end_inset

Beschreibung des Literaturverweisformats
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CiteFormat
\end_layout

\end_inset

-Blöcke werden verwendet um zu beschreiben, wie bibliographische Informationen
 dargestellt werden sollen, und zwar sowohl in \SpecialChar LyX
 selbst (bspw.
 im Literaturverweis-Dialog und in Werkzeughinweisen) als auch in der XHTML-Ausg
abe.
 Diese Blöcke sehen etwa so aus:
\end_layout

\begin_layout LyX-Code
CiteFormat
\end_layout

\begin_layout LyX-Code
 article ...
\end_layout

\begin_layout LyX-Code
 book ...
\end_layout

\begin_layout LyX-Code
End
\end_layout

\begin_layout Standard
oder so:
\end_layout

\begin_layout LyX-Code
CiteFormat
\end_layout

\begin_layout LyX-Code
 cite ...
\end_layout

\begin_layout LyX-Code
 citet*[][] ...
\end_layout

\begin_layout LyX-Code
End
\end_layout

\begin_layout Standard
Im ersten Fall definieren die einzelnen Zeilen, wie bibliographische Information
en bestimmter Eintragstypen (wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
article
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
book
\end_layout

\end_inset

) dargestellt werden sollen; solche Definitionen können für jeden Eintragstyp
 gegeben werden, die in einer Bib\SpecialChar TeX
-Datei enthalten sein können.
 \SpecialChar LyX
 definiert ein eintragstypunabhängiges Standardformat im Quellcode, das
 verwendet wird, sollte keine andere Definition gegeben werden.
 Außerdem definiert \SpecialChar LyX
 mehrere Formate in der Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdciteformats.inc
\end_layout

\end_inset

 vor, die in den meisten Dokumentklassen eingebunden ist.
\end_layout

\begin_layout Standard
Im zweiten Fall definieren die Zeilen, wie ein bestimmter Literaturverweisbefehl
 (im Beispiel oben 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
cite
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
citet
\end_layout

\end_inset

) auf der Literaturverweiseinfügung, im Literaturverweisdialog, im Menü
 oder in der XHTML-Ausgabe dargestellt werden soll.
 \SpecialChar LyX
 bringt Definitionen für die Zitierstilvarianten, die über 
\family sans
Dokument\SpecialChar menuseparator
Einstellungen\SpecialChar menuseparator
Literaturverzeichnis
\family default
 unterstützt werden, mit.
 Sie sind in spezifischen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
*.citeengine
\end_layout

\end_inset

-Dateien, die mit \SpecialChar LyX
 mitgeliefert werden, enthalten (siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Cite-Engine-Dateien"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
Die Definitionen verwenden eine einfache Notation, bei denen Platzhalter
 mit entsprechenden Werten aus der Bib\SpecialChar TeX
-Datei ersetzt werden.
 Die Platzhalter müssen in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%
\end_layout

\end_inset

-Zeichen eingeschlossen werden, bspw.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%author%
\end_layout

\end_inset

.
 Eine einfache Definition würde also etwa so aussehen:
\end_layout

\begin_layout LyX-Code
misc %author%, 
\begin_inset Quotes eld
\end_inset

%title%
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Das würde den Autornamen, gefolgt von einem Komma, gefolgt vom Titel in
 Anführungszeichen, gefolgt von einem Punkt ausgeben.
\end_layout

\begin_layout Standard
Manchmal möchte man einen Wert aber nur dann ausgeben, wenn er existiert.
 Hierfür kann man eine Bedingungskonstruktion verwenden, bspw.: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{%volume%[[Bd.
\begin_inset space ~
\end_inset

%volume%]]}
\end_layout

\end_inset

.
\begin_inset Newline newline
\end_inset

Das bedeutet: Wenn der Wert 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
volume
\end_layout

\end_inset

 für den entsprechenden Eintrag existiert, dann gib 
\begin_inset Quotes gld
\end_inset

Bd.
\begin_inset space ~
\end_inset


\begin_inset Quotes grd
\end_inset

 gefolgt von dem Wert aus.
 Es ist auch möglich, eine 
\begin_inset Quotes gld
\end_inset

Sonst
\begin_inset Quotes grd
\end_inset

-Klausel anzugeben, etwa:
\begin_inset Newline newline
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{%author%[[%author%]][[%editor% (Hg.)]]}
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

Hier wird der Wert 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
author
\end_layout

\end_inset

 ausgegeben, wenn er existiert, sonst 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
editor
\end_layout

\end_inset

 gefolgt von 
\begin_inset Quotes gld
\end_inset


\begin_inset space ~
\end_inset

(Hg.)
\begin_inset Quotes grd
\end_inset

.
 Beachten Sie, dass der Platzhalter wieder in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%
\end_layout

\end_inset

-Zeichen eingeschlossen ist; die gesamte Bedingungskonstruktion ist in geschweif
ten Klammern eingeschlossen, die 
\begin_inset Quotes gld
\end_inset

Wenn-
\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset

Sonst-
\begin_inset Quotes grd
\end_inset

Klauseln in eckigen Klammern, 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
[[
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

 und 
\begin_inset Quotes gld
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
]]
\end_layout

\end_inset


\begin_inset Quotes grd
\end_inset

.
 Zwischen diesen darf es keine Leerzeichen geben.
\end_layout

\begin_layout Standard
Neben den Wertplatzhaltern gibt es spezielle Marken, die für solche Bedingungen
 verwendet werden können:
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{%dialog%[[wahr]][[falsch]]}
\end_layout

\end_inset

: führt den 
\begin_inset Quotes gld
\end_inset

Wahr
\begin_inset Quotes grd
\end_inset

-Teil in Dialogen aus, den 
\begin_inset Quotes gld
\end_inset

Falsch
\begin_inset Quotes grd
\end_inset

-Teil in anderen Kontexten (Arbeitsbereich, Export)
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{%export%[[wahr]][[falsch]]}
\end_layout

\end_inset

: führt den 
\begin_inset Quotes gld
\end_inset

Wahr
\begin_inset Quotes grd
\end_inset

-Teil beim Export und in Menüs aus, den 
\begin_inset Quotes gld
\end_inset

Falsch
\begin_inset Quotes grd
\end_inset

-Teil in anderen Kontexten (Arbeitsbereich, Dialoge)
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{%next%[[wahr]]}
\end_layout

\end_inset

: führt den 
\begin_inset Quotes gld
\end_inset

Wahr
\begin_inset Quotes grd
\end_inset

-Teil aus, wenn ein weiterer Eintrag folgt (in einem Mehrfachliteraturverweis)
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{%second%[[wahr]][[falsch]]}
\end_layout

\end_inset

: führt den 
\begin_inset Quotes gld
\end_inset

Wahr
\begin_inset Quotes grd
\end_inset

-Teil aus, wenn dies der zweite von mehreren Einträgen ist, sonst den 
\begin_inset Quotes gld
\end_inset

Falsch
\begin_inset Quotes grd
\end_inset

-Teil.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{%ifstar%[[wahr]][[falsch]]}
\end_layout

\end_inset

: führt den 
\begin_inset Quotes gld
\end_inset

Wahr
\begin_inset Quotes grd
\end_inset

-Teil für Sternchenbefehle (wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
cite*
\end_layout

\end_inset

) aus, den 
\begin_inset Quotes gld
\end_inset

Falsch
\begin_inset Quotes grd
\end_inset

-Teil für andere.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{%ifentrytype:<type>%[[wahr]][[falsch]]}
\end_layout

\end_inset

: führt den 
\begin_inset Quotes gld
\end_inset

Wahr
\begin_inset Quotes grd
\end_inset

-Teil aus, wenn der aktuelle Eintragstyp 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<type>
\end_layout

\end_inset

 ist, sonst den 
\begin_inset Quotes gld
\end_inset

Falsch
\begin_inset Quotes grd
\end_inset

-Teil (bspw.
 in einer Literaturverweisdefinition: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{%ifentrytype:book%[[das ist ein Buch]][[das ist kein Buch]]}
\end_layout

\end_inset

)
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{%ifmultiple:<authortype>%[[wahr]][[falsch]]}
\end_layout

\end_inset

: führt den 
\begin_inset Quotes gld
\end_inset

Wahr
\begin_inset Quotes grd
\end_inset

-Teil aus, wenn der aktuelle Autortyp (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
author
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
editor
\end_layout

\end_inset

 etc.) mehrere Autoren hat, sonst den 
\begin_inset Quotes gld
\end_inset

Falsch
\begin_inset Quotes grd
\end_inset

-Teil (bspw.
 in einer Literaturverzeichnisdefinition: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{%ifmultiple:editor%[[Hgg.]][[Hg.]]}
\end_layout

\end_inset

)
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{%ifqualified%[[wahr]][[falsch]]}
\end_layout

\end_inset

: führt den 
\begin_inset Quotes gld
\end_inset

Wahr
\begin_inset Quotes grd
\end_inset

-Teil aus, wenn der aktuelle Literaturverweis eine qualifizierte Literaturverwei
sliste ist (ein spezifisches 
\family sans
Biblatex-F
\family default
ormat für Mehrfachverweise), sonst den 
\begin_inset Quotes gld
\end_inset

Falsch
\begin_inset Quotes grd
\end_inset

-Teil.
\end_layout

\begin_layout Standard
Wir haben oben gesagt, dass 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%author%
\end_layout

\end_inset

 den Wert des Autoreintrags ausgibt, wie er in der Bibliographiedatenbank
 gespeichert ist.
 Das ist vielleicht nicht die Ausgabe, die Sie wünschen, denn das Ergebnis
 sieht möglicherweise so aus: 
\begin_inset Quotes gld
\end_inset

Müller, Peter and Schmidt, Maria und Weiß, Jana
\begin_inset Quotes grd
\end_inset

 (da 
\begin_inset Quotes gld
\end_inset


\lang english
and
\lang ngerman

\begin_inset Quotes grd
\end_inset

 von Bib\SpecialChar TeX
 verwendet wird, um Autoren voneinander abzugrenzen).
 \SpecialChar LyX
 bietet daher einige Methoden, um korrekt formatierte (und auch übersetzte)
 Autorenlisten zu bekommen.
 Die folgenden Möglichkeiten stehen zur Verfügung:
\end_layout

\begin_layout Enumerate
Für Namenlisten mit Vor- und Nachnamen, geeignet für die Hauptautoren\SpecialChar breakableslash
\SpecialChar nobreakdash
herausgeber
 eines Literatureintrags.
 Der Teil 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<nametype>
\end_layout

\end_inset

 zeigt die Art der verlangten Liste an (bspw.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<nametype:author>
\end_layout

\end_inset

):
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%abbrvnames:<nametype>%
\end_layout

\end_inset

: Bietet eine ggf.
 abgekürzte Namenliste (mit 
\begin_inset Quotes gld
\end_inset

et al.
\begin_inset Quotes grd
\end_inset

), nämlich dann, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MaxCiteNames
\end_layout

\end_inset

 erreicht ist.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%fullnames:<nametype>%
\end_layout

\end_inset

: Bietet eine volle Namenliste (niemals mit 
\begin_inset Quotes gld
\end_inset

et al.
\begin_inset Quotes grd
\end_inset

 abgekürzt).
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%forceabbrvnames:<nametype>%
\end_layout

\end_inset

: Bietet eine in jedem Fall abgekürzte Namenliste (mit 
\begin_inset Quotes gld
\end_inset

et al.
\begin_inset Quotes grd
\end_inset

), unabhängig von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MaxCiteNames
\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
Alternative Namenlisten mit Vor- und Nachnamen, für den Fall, dass die Reihenfol
ge der Vor- und Nachnamen innerhalb des Literaturverweises sich ändern (wie
 in: 
\begin_inset Quotes gld
\end_inset

Müller, Josef: Ein Aufsatz, in: Maria Schmidt (Hg.): Ein Sammelband
\begin_inset Quotes erd
\end_inset

):
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%abbrvbynames:<nametype>%
\end_layout

\end_inset

: Bietet eine ggf.
 abgekürzte Namenliste (mit 
\begin_inset Quotes gld
\end_inset

et al.
\begin_inset Quotes grd
\end_inset

), nämlich dann, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MaxCiteNames
\end_layout

\end_inset

 erreicht ist.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%fullbynames:<nametype>%
\end_layout

\end_inset

: Bietet eine volle Namenliste (niemals mit 
\begin_inset Quotes gld
\end_inset

et al.
\begin_inset Quotes grd
\end_inset

 abgekürzt).
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%forceabbrvbynames:<nametype>%
\end_layout

\end_inset

: Bietet eine in jedem Fall abgekürzte Namenliste (mit 
\begin_inset Quotes gld
\end_inset

et al.
\begin_inset Quotes grd
\end_inset

), unabhängig von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MaxCiteNames
\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
Schließlich Namelisten, die nur aus Nachnamen bestehen, so wie sie etwa
 in Autor-Jahr-Verweisen verwendet werden.
 Hier gibt es keinen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<nametype>
\end_layout

\end_inset

: es wird immer eine Liste mit Autoren ausgegeben, wenn es solche gibt,
 ansonsten mit Herausgebern (genau so, wie es für Autor-Jahr-Verweise auch
 üblich ist):
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%abbrvciteauthor%
\end_layout

\end_inset

: Bietet eine ggf.
 abgekürzte Namenliste (mit 
\begin_inset Quotes gld
\end_inset

et al.
\begin_inset Quotes grd
\end_inset

), nämlich dann, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MaxCiteNames
\end_layout

\end_inset

 erreicht ist.
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%fullciteauthor%
\end_layout

\end_inset

: Bietet eine volle Namenliste (niemals mit 
\begin_inset Quotes gld
\end_inset

et al.
\begin_inset Quotes grd
\end_inset

 abgekürzt).
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%forceabbrvciteauthor%
\end_layout

\end_inset

: Bietet eine in jedem Fall abgekürzte Namenliste (mit 
\begin_inset Quotes gld
\end_inset

et al.
\begin_inset Quotes grd
\end_inset

), unabhängig von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MaxCiteNames
\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
Die Reihenfolge der Vor- und Nachnamen in den ersten beiden Listenvarianten
 können mit den folgenden Makros angepasst werden:
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
!firstnameform %surname%, %prename%
\end_layout

\end_inset

 (der erste Autor in Listen des Typs
\begin_inset space ~
\end_inset

1)
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
!othernameform %surname%, %prename%
\end_layout

\end_inset

 (weitere Autoren in Listen des Typs
\begin_inset space ~
\end_inset

1)
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
!firstbynameform %prename% %surname%
\end_layout

\end_inset

 (der erste Autor in Listen des Typs
\begin_inset space ~
\end_inset

2)
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
!otherbynameform %prename% %surname%
\end_layout

\end_inset

 (weitere Autoren in Listen des Typs
\begin_inset space ~
\end_inset

2)
\end_layout

\begin_layout Standard
Damit können Sie Namenlisten wie die folgenden bekommen: 
\begin_inset Quotes gld
\end_inset

Müller, Peter und Maria Schmidt: \SpecialChar ldots
, in: Jonas Damm und Patricia Grün (Hgg.):\SpecialChar ldots

\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Standard
In den Definitionen gibt es noch weitere Angaben, die so aussehen: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{!<i>!}
\end_layout

\end_inset

.
 Hier wird die Formatierung definiert, die für die Erzeugung von 
\begin_inset Quotes gld
\end_inset


\lang english
Rich Text
\lang ngerman

\begin_inset Quotes grd
\end_inset

 (mit typografischen Auszeichnungen usw.) verwendet wird.
 Da wir keine HTML-Tags ausgeben wollen, wenn wir reinen Text ausgeben,
 müssen diese Angaben in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
{!
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
!}
\end_layout

\end_inset

 eingeklammert werden.
\end_layout

\begin_layout Standard
In 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CiteFormat
\end_layout

\end_inset

-Blöcken sind auch zwei spezielle Formen von Definitionen möglich.
 Ein Beispiel für die erste ist:
\end_layout

\begin_layout LyX-Code
!quotetitle 
\begin_inset Quotes eld
\end_inset

%title%
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Das ist die Definition eines Makros.
 Es kann verwendet werden wie ein Platzhalter: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%!quotetitle%
\end_layout

\end_inset

.
 \SpecialChar LyX
 behandelt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%!quotetitle%
\end_layout

\end_inset

 genau so wie seine Definition.
 Das heißt aber auch, dass Sie niemals so etwas tun sollten:
\end_layout

\begin_layout LyX-Code
!funfun %funfun%
\end_layout

\begin_layout Standard
\SpecialChar LyX
 wird zwar nicht in eine endlos rekursive Schleife gehen, aber in eine lange,
 bevor es aufgibt.
\end_layout

\begin_layout Standard
Die zweite spezielle Form sieht so aus:
\end_layout

\begin_layout LyX-Code
_pptext pp.
\end_layout

\begin_layout Standard
Dies definiert ein übersetzbares Stück Text, womit es möglich wird, relevante
 Teile der bibliographischen Angaben zu übersetzen.
 Auch dies kann in Definitionen wie ein Platzhalter verwendet werden: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
%_pptext%
\end_layout

\end_inset

.
 Viele von diesen sind in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdciteformats.inc
\end_layout

\end_inset

 und den verschiedenen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
*.citeengine
\end_layout

\end_inset

-Dateien vordefiniert.
 Beachten Sie, dass dies keine Makros im eben definierten Sinn sind.
 Sie werden nicht expandiert.
\end_layout

\begin_layout Standard
Hier ist abschließend ein Beispiel, das mehrere Möglichkeiten ausschöpft:
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\family typewriter
!authoredit {%author%[[%author%, ]][[{%editor%[[%editor%, %_edtext%, ]]}]]}
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset

Dies definiert ein Makro das den Autornamen ausgibt, gefolgt von einem Komma,
 falls der Autorname existiert, sonst wird der Name des Herausgebers ausgegeben,
 gefolgt von der Definition von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
_edtext
\end_layout

\end_inset

 bzw.
 seiner Übersetzung (in der englischen Voreinstellung 
\begin_inset Quotes gld
\end_inset

ed.
\begin_inset Quotes grd
\end_inset

, im Deutschen 
\begin_inset Quotes gld
\end_inset

Hg.
\begin_inset Quotes grd
\end_inset

), falls 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
editor
\end_layout

\end_inset

 definiert ist.
 Genau diese Definition findet sich auch in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdciteformats.inc
\end_layout

\end_inset

, sie können sie also in Ihren eigenen Definitionen (oder Re-Definitionen)
 verwenden, wenn Sie diese Datei zuvor einbinden.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:XHTML-Spezifikationen"

\end_inset

Spezifikationen der XHTML-Ausgabe
\end_layout

\begin_layout Standard
Wie bei \SpecialChar LaTeX
 oder DocBook wird auch das Format von \SpecialChar LyX
' XHTML-Ausgabe durch Layout-Info
rmationen kontrolliert.
 Grundsätzlich bietet \SpecialChar LyX
 sinnvolle Voreinstellungen und wie bereits erwähnt
 generiert es sogar CSS-Stilregeln aus den anderen Layout-Angaben.
 So nimmt \SpecialChar LyX
 etwa die Information, die für einen Kapitelstil in der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

-Deklaration gegeben wird, um CSS zu erzeugen, die die Kapitelüberschriften
 entsprechend formatiert.
\end_layout

\begin_layout Standard
In vielen Fällen müssen Sie also gar nichts tun, um eine akzeptable XHTML-Ausgab
e für ihre eigenen Umgebungen, benutzerdefinierten Einfügungen usw.
 zu bekommen.
 Aber manchmal ist das vielleicht nötig, und daher bietet \SpecialChar LyX
 eine Reihe von
 Layout-Tags für die Anpassung der XHTML- und CSS-Ausgabe.
\end_layout

\begin_layout Standard
Es gibt zwei Marken, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLPreamble
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AddToHTMLPreamble
\end_layout

\end_inset

, die außerhalb von Stil- und Einfügungsdeklarationen verwendet werden können.
 Diese werden in Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Allgemeine-Parameter-für"

\end_inset

 besprochen.
\end_layout

\begin_layout Subsection
Absatzstile
\end_layout

\begin_layout Standard
Die Art von XHTML, die \SpecialChar LyX
 für einen jeweiligen Absatz ausgibt, hängt davon
 ab, ob wir es mit einem normalen Absatz zu tun haben, mit einem Befehl
 oder einer Umgebung, für die die entsprechende 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
\SpecialChar LaTeX
Type
\end_layout

\end_inset

-Spezifikation die Ausgabe bestimmt.
\end_layout

\begin_layout Standard
Im Fall eines Befehls oder eines normalen Absatzes sieht die XHTML-Ausgabe
 so aus:
\end_layout

\begin_layout LyX-Code
<tag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

>
\end_layout

\begin_layout LyX-Code
<labeltag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

>Marke</labeltag>
\end_layout

\begin_layout LyX-Code
Inhalt des Absatzes.
\end_layout

\begin_layout LyX-Code
</tag>
\end_layout

\begin_layout Standard
Die 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
labeltag
\end_layout

\end_inset

s werden natürlich nur ausgegeben, wenn der Absatz auch eine Marke hat.
\end_layout

\begin_layout Standard
Im Fall einer Umgebung, die 
\emph on
keine
\emph default
 Liste ist, sieht die XHTML-Ausgabe so aus:
\end_layout

\begin_layout LyX-Code
<tag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

>
\end_layout

\begin_layout LyX-Code
<itemtag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

><labeltag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

>Marke der Umgebung</labeltag>
\begin_inset Newline newline
\end_inset

Erster Absatz.</itemtag>
\end_layout

\begin_layout LyX-Code
<itemtag>Zweiter Absatz.</itemtag>
\end_layout

\begin_layout LyX-Code
</tag>
\end_layout

\begin_layout Standard
Beachten Sie, dass die Marke nur für den ersten Absatz ausgegeben wird,
 wie es bspw.
 für Theoreme auch sein sollte.
 
\end_layout

\begin_layout Standard
Im Fall von Listen wird eine der folgenden Ausgabeformen generiert:
\end_layout

\begin_layout LyX-Code
<tag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

>
\end_layout

\begin_layout LyX-Code
<itemtag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

><labeltag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

>
\begin_inset Newline newline
\end_inset

Listenmarke</labeltag>Erster Listeneintrag.</itemtag>
\end_layout

\begin_layout LyX-Code
<itemtag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

><labeltag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

>Listenmarke</labeltag>
\begin_inset Newline newline
\end_inset

Zweiter Listeneintrag.</itemtag>
\end_layout

\begin_layout LyX-Code
</tag>
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
<tag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

>
\end_layout

\begin_layout LyX-Code
<labeltag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

>Listenmarke</labeltag><itemtag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

>
\begin_inset Newline newline
\end_inset

Erster Listeneintrag.</itemtag>
\end_layout

\begin_layout LyX-Code
<labeltag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

>Listenmarke</labeltag><itemtag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

>
\begin_inset Newline newline
\end_inset

Zweiter Listeneintrag.</itemtag>
\end_layout

\begin_layout LyX-Code
</tag>
\end_layout

\begin_layout Standard
Beachten Sie hierbei die unterschiedliche Reihenfolge von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
labeltag
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
itemtag
\end_layout

\end_inset

.
 Welche Reihenfolge ausgegeben wird, hängt von der Einstellung von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLLabelFirst
\end_layout

\end_inset

 ab: Wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLLabelFirst
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
false
\end_layout

\end_inset

 gesetzt ist (das ist die Voreinstellung), bekommen Sie die erste Variante,
 mit dem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
labeltag
\end_layout

\end_inset

 innerhalb des 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
itemtag
\end_layout

\end_inset

; ist sie hingegen auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
true
\end_layout

\end_inset

 gesetzt, bekommen Sie die zweite, mit dem 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
labeltag
\end_layout

\end_inset

 außerhalb des 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
itemtag
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Die spezifischen Tags und Attribute, die für Absatztypen ausgegeben werden
 können mithilfe der Absatzspezifikationen kontrolliert werden, die wir
 im Folgenden beschreiben.
 Wir erwähnt verwendet \SpecialChar LyX
 für viele von diesen sinnvolle Voreinstellungen,
 oftmals müssen Sie also für eine gute XHTML-Ausgabe wenig tun.
 Die verfügbaren Spezifikationsmöglichkeiten sind also eher dazu da, Dinge
 zu verändern, wo Sie dies für nötig halten.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Legt die Attribute fest, die mit dem Haupt-Tag ausgegeben werden, bspw.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
class=
\begin_inset Quotes qrs
\end_inset

meindiv
\begin_inset Quotes qrs
\end_inset


\end_layout

\end_inset

.
 In der Voreinstellung gibt \SpecialChar LyX
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
class=
\begin_inset Quotes qrs
\end_inset

layoutname
\begin_inset Quotes qrs
\end_inset


\end_layout

\end_inset

 aus, wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
layoutname
\end_layout

\end_inset

 der \SpecialChar LyX
-Name des Absatzstils in Kleinbuchstaben ist, etwa 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
chapter
\end_layout

\end_inset

.
 Hier sollten Sie 
\emph on
keine
\emph default
 Stilinformationen übergeben.
 Verwenden Sie dafür 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLStyle
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLForceCSS
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Legt fest, ob die Standard-CSS-Information, die \SpecialChar LyX
 für diesen Absatzstil
 generiert, auch dann ausgegeben werden, wenn Informationen mittels 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLStyle
\end_layout

\end_inset

 explizit übergeben werden.
 Wenn Sie dies auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 setzen, können Sie diese CSS modifizieren, statt sie komplett zu überschreiben.
 Voreinstellung: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLItem
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Dieser Tag wird für einzelne Absätze in Umgebungen verwendet.
 Er ersetzt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
itemtag
\end_layout

\end_inset

 in den Beispielen oben.
 Voreinstellung: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
div
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLItemAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Attribute für den 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
itemtag
\end_layout

\end_inset

.
\begin_inset Newline newline
\end_inset

Voreinstellung: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
class=
\begin_inset Quotes qrs
\end_inset

layoutname_item'
\end_layout

\end_inset

.
 Hier sollten Sie 
\emph on
keine
\emph default
 Stilinformationen übergeben.
 Verwenden Sie dafür 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLStyle
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLLabel
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Dieser Tag wird für Absatz- und Listeneintrags-Marken verwendet.
 Er ersetzt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
labeltag
\end_layout

\end_inset

 in den Beispielen oben.
 Voreinstellung: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
span
\end_layout

\end_inset

, sofern 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LabelType
\end_layout

\end_inset

 nicht entweder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Top_Environment
\end_layout

\end_inset

 oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Centered_Top_Environment
\end_layout

\end_inset

 ist; die Voreinstellung in diesen Fällen ist 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
div
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLLabelAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Attribute für den Marken-Tag.
 Voreinstellung: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
class=
\begin_inset Quotes qrs
\end_inset

layoutname_label
\begin_inset Quotes qrs
\end_inset


\end_layout

\end_inset

.
 Hier sollten Sie 
\emph on
keine
\emph default
 Stilinformationen übergeben.
 Verwenden Sie dafür 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLStyle
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLLabelFirst
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Dies ist nur für listenähnliche Umgebungen relevant.
 Die Spezifikation legt fest, ob der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
labeltag
\end_layout

\end_inset

 innerhalb oder außerhalb des 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
itemtag
\end_layout

\end_inset

 ausgegeben wird.
 Dies wird beispielsweise in der Umgebung 
\emph on
Beschreibung
\emph default
 verwendet, bei der wir folgende Ausgabe haben wollen: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<dt>\SpecialChar ldots
</dt><dd>\SpecialChar ldots
</dd>
\end_layout

\end_inset

.
 Voreinstellung: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

, d.
\begin_inset space \thinspace{}
\end_inset

h., der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
labeltag
\end_layout

\end_inset

 wird außerhalb des 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
itemtag
\end_layout

\end_inset

 ausgegeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLPreamble
\end_layout

\end_inset

 Informationen, die im Abschnitt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<head>
\end_layout

\end_inset

 ausgegeben werden, wenn dieser Absatzstil verwendet wird.
 Dies könnte man etwa verwenden, um einen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<script>
\end_layout

\end_inset

-Block auszugeben, der eine 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
onclick
\end_layout

\end_inset

-Routine definiert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLStyle
\end_layout

\end_inset

 CSS-Stilinformationen, die ausgegeben werden sollen, wenn dieser Absatzstil
 verwendet wird.
 Beachten Sie, dass dies automatisch in einen vom Absatzstil generierten
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<style>
\end_layout

\end_inset

-Block eingefügt wird, Sie müssen also nur die CSS selbst festlegen.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndHTMLStyle
\end_layout

\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLTag
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Der Tag, der für die Hauptmarke verwendet wird.
 In den obigen Beispielen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
tag
\end_layout

\end_inset

.
 Voreinstellung: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
div
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLTitle
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Markiert diesen Stil als einen, der in der Titelei (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<title>
\end_layout

\end_inset

) der XHTML-Datei enthalten sein soll.
 Voreinstellung: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

.
 Die Datei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
stdtitle.inc
\end_layout

\end_inset

 aktiviert dies für den Absatzstil 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
title
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Subsection
InsetLayout und XHTML
\end_layout

\begin_layout Standard
Auch die XHTML-Ausgabe von Einfügungen kann durch Layout-Dateien kontrolliert
 werden.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Momentan gilt dies nur für 
\begin_inset Quotes gld
\end_inset

Text
\begin_inset Quotes grd
\end_inset

-Einfügungen (Einfügungen, in die Sie Text eingeben können) und nicht für
 
\begin_inset Quotes gld
\end_inset

Befehls
\begin_inset Quotes grd
\end_inset

-Einfügungen (Einfügungen, die mit Dialogfenstern verbunden sind).
\end_layout

\end_inset

 Auch hier versucht \SpecialChar LyX
 sinnvolle Voreinstellungen anzubieten, und es generiert
 Standard-CSS-Informationen.
 Aber alles kann angepasst werden.
\end_layout

\begin_layout Standard
Die XHTML-Ausgabe für Einfügungen hat folgende Form:
\end_layout

\begin_layout LyX-Code
<tag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

>
\end_layout

\begin_layout LyX-Code
<labeltag>Marke</labeltag>
\end_layout

\begin_layout LyX-Code
<innertag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

>Inhalt der Einfügung.</innertag>
\end_layout

\begin_layout LyX-Code
</tag>
\end_layout

\begin_layout Standard
Wenn die Einfügung mehrere Absätze zulässt – das heißt, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MultiPar
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
true
\end_layout

\end_inset

 eingestellt ist –, wird der Inhalt der Einfügung in Form von Absätzen ausgegebe
n, die nach den Vorgaben für diese Absätze formatiert sind (Standard, Zitat
 usw.).
 Das 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
labeltag
\end_layout

\end_inset

 wird natürlich nur ausgegeben, wenn die Einfügung eine Marke hat, und aktuell
 ist sie stets 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
span
\end_layout

\end_inset

.
 Das 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
innertag
\end_layout

\end_inset

 ist optional und wird in der Voreinstellung nicht ausgegeben.
\end_layout

\begin_layout Standard
Die spezifischen Tags und Attribute, die für Einfügen ausgegeben werden
 können mithilfe der folgenden Absatzspezifikationen kontrolliert werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Legt die Attribute fest, die mit dem Haupt-Tag ausgegeben werden, beispielswei
se 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
class=
\begin_inset Quotes qrs
\end_inset

meininset
\begin_inset Quotes qrs
\end_inset

 onclick=
\begin_inset Quotes qrs
\end_inset

...
\begin_inset Quotes qrs
\end_inset


\end_layout

\end_inset

.
 In der Voreinstellung gibt \SpecialChar LyX
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
class=
\begin_inset Quotes qrs
\end_inset

insetname
\begin_inset Quotes qrs
\end_inset


\end_layout

\end_inset

 aus, wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
insetname
\end_layout

\end_inset

 der \SpecialChar LyX
-Name der Einfügung in Kleinbuchstaben ist, etwa 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
footnote
\end_layout

\end_inset

.
 Nicht-alphabetische Zeichen werden hierbei zu Unterstrichen umgewandelt.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLForceCSS
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

] Legt fest, ob die Standard-CSS-Information, die \SpecialChar LyX
 für diesen Absatzstil
 generiert, auch dann ausgegeben werden, wenn Informationen mittels 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLStyle
\end_layout

\end_inset

 explizit übergeben werden.
 Wenn Sie dies auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

 setzen, können Sie diese CSS modifizieren, statt sie komplett zu überschreiben.
 Voreinstellung: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLInnerAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Attribute für den inneren Tag.
 Voreinstellung: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
class=
\begin_inset Quotes qrs
\end_inset

insetname_inner
\begin_inset Quotes qrs
\end_inset


\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLInnerTag
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Der innere Tag; ersetzt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
innertag
\end_layout

\end_inset

 in den Beispielen oben.
 Standardmäßig nicht ausgegeben.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLIsBlock
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
0
\end_layout

\end_inset

,
\begin_inset space \thinspace{}
\end_inset


\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

] Legt fest, ob diese Einfügung einen alleinstehenden Textblock repräsentiert
 (wie etwa eine Fußnote) oder Text, der Teil des umgebenden Textes ist (etwa
 ein Zweig).
 Voreinstellung: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLLabel
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Eine Marke für diese Einfügung, möglicherweise mit einem Verweis aus einen
 Zähler (für Fußnoten etwa 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
arabic{footnote}
\end_layout

\end_inset

).
 Diese Angabe ist optional, es gibt keine Voreinstellung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLPreamble
\end_layout

\end_inset

 Informationen, die im Abschnitt 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<head>
\end_layout

\end_inset

 ausgegeben werden, wenn dieser Absatzstil verwendet wird.
 Dies könnte man etwa verwenden, um einen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<script>
\end_layout

\end_inset

-Block auszugeben, der eine 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
onclick
\end_layout

\end_inset

-Routine definiert.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLStyle
\end_layout

\end_inset

 CSS-Stilinformationen, die ausgegeben werden sollen, wenn diese Einfügung
 verwendet wird.
 Beachten Sie, dass dies automatisch in einen vom Absatzstil generierten
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<style>
\end_layout

\end_inset

-Block eingefügt wird, Sie müssen also nur die CSS selbst festlegen.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndHTMLStyle
\end_layout

\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLTag
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Der Tag, der für die Hauptmarke verwendet wird.
 In den obigen Beispielen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
tag
\end_layout

\end_inset

.
 Voreinstellung: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
div
\end_layout

\end_inset

, wenn 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
MultiPar
\end_layout

\end_inset

 auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
true
\end_layout

\end_inset

 eingestellt ist, sonst 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
span
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Gleitobjekte und XHTML
\end_layout

\begin_layout Standard
Auch die XHTML-Ausgabe für Gleitobjekte kann durch Layout-Dateien kontrolliert
 werden.
 Die Ausgabe hat folgende Form:
\end_layout

\begin_layout LyX-Code
<tag attr=
\begin_inset Quotes qrd
\end_inset

Wert
\begin_inset Quotes qrd
\end_inset

>
\end_layout

\begin_layout LyX-Code
Inhalt des Gleitobjekts.
\end_layout

\begin_layout LyX-Code
</tag>
\end_layout

\begin_layout Standard
Die Legende ist, falls eine existiert, eine separate Einfügung und wird
 als solche ausgegeben.
 Seine Ausgabe wird somit durch 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InsetLayout
\end_layout

\end_inset

-Spezifikationen für Legenden-Einfügungen bestimmt.
 
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLAttr
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Legt die Attribute fest, die mit dem Haupt-Tag ausgegeben werden, beispielswei
se 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
class=
\begin_inset Quotes qrs
\end_inset

meingleitobjekt
\begin_inset Quotes qrs
\end_inset

 onclick=
\begin_inset Quotes qrs
\end_inset

...
\begin_inset Quotes qrs
\end_inset


\end_layout

\end_inset

.
 In der Voreinstellung gibt \SpecialChar LyX
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
class=
\begin_inset Quotes qrs
\end_inset

float float-floattype
\begin_inset Quotes qrs
\end_inset


\end_layout

\end_inset

 aus, wobei 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
floattype
\end_layout

\end_inset

 der \SpecialChar LyX
-Name dieses Gleitobjekttyps ist, wie er in der Gleitobjekt-Definition
 festgelegt ist (siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Gleitobjekte"

\end_inset

), allerdings in Kleinbuchstaben und mit nicht-alphabetischen Zeichen zu
 Unterstrichen umgewandelt.
 Beispielsweise 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
float-table
\end_layout

\end_inset

.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLStyle
\end_layout

\end_inset

 CSS-Stilinformationen, die ausgegeben werden sollen, wenn dieses Gleitobjekt
 verwendet wird.
 Beachten Sie, dass dies automatisch in einen vom Absatzstil generierten
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<style>
\end_layout

\end_inset

-Block eingefügt wird, Sie müssen also nur die CSS selbst festlegen.
 Muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
EndHTMLStyle
\end_layout

\end_inset

 beendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HTMLTag
\end_layout

\end_inset

 [
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
string
\end_layout

\end_inset

] Der Tag, der für die Hauptmarke verwendet wird.
 In den obigen Beispielen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
tag
\end_layout

\end_inset

.
 Voreinstellung: 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
div
\end_layout

\end_inset

; dies sollten Sie nur in Ausnahmefällen ändern.
\end_layout

\begin_layout Subsection
Formatierung des Literaturverzeichnisses
\end_layout

\begin_layout Standard
Das Literaturverzeichnis kann mittels 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
CiteFormat
\end_layout

\end_inset

-Blöcken formatiert werden.
 Siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Literaturverweisformat"

\end_inset

 für weitere Informationen.
\end_layout

\begin_layout Subsection
Von \SpecialChar LyX
 generierte CSS
\end_layout

\begin_layout Standard
Wir haben oft genug erwähnt, dass \SpecialChar LyX
 auf der Grundlage der Absatzstildeklarationen
 Standard-CSS-Informationen sowohl für Einfügungen als auch für Absatzstile
 erzeugt.
 In diesem Abschnitt diskutieren wir kurz, welche Layout-Informationen \SpecialChar LyX

 dabei verwendet, und wie dies geschieht.
\end_layout

\begin_layout Standard
Gegenwärtig erzeugt \SpecialChar LyX
 CSS nur für Schriftinformationen.
 Es greift dabei auf 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Family
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Series
\end_layout

\end_inset

, 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Shape
\end_layout

\end_inset

, und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Size
\end_layout

\end_inset

 in der 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Font
\end_layout

\end_inset

-Deklaration zurück (siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Beschreibung-des-Zeichensatzes"

\end_inset

).
 Die Übertragung ist zumeist ziemlich offensichtlich.
 So wird aus 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Family Sans
\end_layout

\end_inset

 im CSS 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
font-family: sans-serif;
\end_layout

\end_inset

.
 Das Verhältnis von \SpecialChar LyX
-Schriftgrößen und CSS-Schriftgrößen ist etwas weniger
 offensichtlich, aber trotzdem nachvollziehbar.
 Schauen Sie sich bei Interesse die Funktion 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
getSizeCSS()
\end_layout

\end_inset

 in 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

src/FontInfo.cpp
\end_layout

\end_inset

 an.
\end_layout

\begin_layout Chapter
Externes Material einfügen
\begin_inset CommandInset label
LatexCommand label
name "cha:Externes-Material-einfügen"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
ACHTUNG: Dieser Teil der Dokumentation wurde lange nicht aktualisiert.
 Wir hoffen, dass sie noch akkurat ist, garantieren das aber nicht.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Verwendung von 
\begin_inset Quotes gld
\end_inset

externem Material
\begin_inset Quotes grd
\end_inset

 in \SpecialChar LyX
 wird ausführlich im Handbuch 
\emph on
Eingebettete Objekte
\emph default
 beschrieben.
 Im Folgenden geht es nur darum zu beschreiben, wie das intern funktioniert
 und wie man neue Vorlagen erstellen kann.
\end_layout

\begin_layout Section
Wie funktioniert das?
\end_layout

\begin_layout Standard
Die Einfügung 
\family sans
Externes
\begin_inset space \space{}
\end_inset

Material
\family default
 basiert auf dem Konzept der 
\emph on
Vorlage
\emph default
.
 Eine Vorlage ist eine Spezifikation, wie \SpecialChar LyX
 mit einer bestimmten Art von
 Material umgehen soll.
 Derzeit gehören zu \SpecialChar LyX
 derartige Vorlagen für XFig-Abbildungen, Dia-Diagramme,
 diverse Abbildungen im Rasterformat, Gnuplot und noch ein paar mehr.
 Die vollständige Liste sehen Sie in 
\family sans
Einfügen\SpecialChar menuseparator
Datei\SpecialChar menuseparator
Externes
\begin_inset space \space{}
\end_inset

Material
\family default
.
 Darüber hinaus ist es möglich, durch eigene Vorlagen beliebige andere Formate
 einzubinden.
 Wir werden weiter unten beschreiben, was genau Sie dazu machen müssen und
 hoffen, dass Sie derartig erstellte Vorlagen an das \SpecialChar LyX
-Team schicken, damit
 sie in kommenden \SpecialChar LyX
-Versionen integriert werden können.
\end_layout

\begin_layout Standard
Ein weiteres Merkmal der Idee der externen Einfügung ist die Unterscheidung
 zwischen der ursprünglichen Datei, die als Grundlage für das eingefügte
 Material dient, und der erzeugten Datei, die dann letztendlich in Ihr Dokument
 eingebunden wird.
 Wir wollen dies am Beispiel einer XFig-Abbildung erläutern.
\end_layout

\begin_layout Standard
Das Programm XFig bearbeitet eine speziell formatierte Datei mit der Endung
 
\family typewriter
.fig
\family default
.
 In XFig können Sie Ihre Abbildung editieren und ändern, und zum Schluss
 speichern Sie diese 
\family typewriter
.fig
\family default
-Datei.
 Wenn Sie nun eine derartige Abbildung in \SpecialChar LyX
 einbinden wollen, müssen Sie
 zunächst 
\family typewriter
transfig
\family default
 starten, um eine PostScript-Datei zu erzeugen, die von \SpecialChar LaTeX
 eingebunden werden
 kann.
 In diesem Fall ist also die 
\family typewriter
.fig
\family default
-Datei die oben erwähnte Originaldatei, und die 
\family typewriter
.ps-
\family default
Datei die tatsächlich eingebundene Datei.
\end_layout

\begin_layout Standard
Diese Unterscheidung ist wichtig, denn Sie erlaubt das einfache Ändern und
 Aktualisieren des Materials, während Sie an Ihrem Text schreiben.
 Außerdem ist erst so die Flexibilität gegeben, die benötigt wird, um unterschie
dliche Exportformate für die \SpecialChar LyX
-Datei zu ermöglichen.
\end_layout

\begin_layout Standard
So ist es im Falle einer Ausgabe als reiner (ASCII) Text sicher nicht sinnvoll,
 eine PostScript-Datei im Rohformat einzubinden.
 In diesem Fall wird dann entweder nur eine Referenz auf die Bilddatei angegeben
, oder aber es wird ein Konverter gestartet, der eine ASCII-Darstellung
 erzeugt, die in etwa so aussieht wie die ursprüngliche Grafik.
 Genau dies ist mit der Einfügung 
\family sans
Externes Material
\family default
 möglich, denn sie kennt all die notwendigen Befehle für derartige Konvertierung
en (sofern sie von \SpecialChar LyX
 unterstützt werden).
\end_layout

\begin_layout Standard
Darüber hinaus erlaubt die Einfügung 
\family sans
Externes Material
\family default
 aber auch die einfache Integration mit externen Betrachtern und Editoren.
 So sind Sie bei einer XFig-Abbildung in der Lage, mit einem einigen Klick
 XFig zu starten, um die Abbildung zu bearbeiten oder die erstellte PostScript-D
atei mit 
\family typewriter
ghostview
\family default
 zu betrachten.
 Kein langes Herumsuchen mit Dateimanagern nach den Original- und Grafikdateien
 mehr, und Sie müssen sich nicht mehr an die unterschiedlichen Parameter
 erinnern, die vielleicht für diese Abbildung notwendig sind, um sie in
 der richtigen Größe zu erstellen.
 Sie haben ohne viel Aufwand Zugriff auf eine Vielzahl von Applikationen
 und können so Ihre Produktivität ungemein steigern.
\end_layout

\begin_layout Section
Die Konfigurationsdateien für externe Vorlagen
\end_layout

\begin_layout Standard
Es ist ziemlich einfach, eigene externe Vorlagen zu \SpecialChar LyX
 hinzuzufügen.
 Beachten Sie aber, dass dies, wenn es sorglos geschieht, ziemlich wahrscheinlic
h ein Sicherheitsproblem mit sich bringt.
 Bevor Sie dies also tun, raten wir Ihnen dringend, die Sicherheitshinweise
 in Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Sicherheitshinweise"

\end_inset

 zu lesen.
\end_layout

\begin_layout Standard
Trotzdem ermutigen wir Sie, interessante Vorlagen an uns zu schicken.
 
\end_layout

\begin_layout Standard
Die externen Vorlagen sind in Dateien mit der Endung 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
*.xtemplate
\end_layout

\end_inset

 definiert, die im Verzeichnis 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
LyXDir/lib/xtemplates/
\end_layout

\end_inset

 zu finden sind.
 Jede Vorlage ist in einer eigenen Datei definiert.
 Ihre eigenen Vorlagen können Sie in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UserDir/xtemplates/
\end_layout

\end_inset

 ablegen; Sie können auch existierende Vorlagen dorthin kopieren, um sie
 zu modifizieren.
\end_layout

\begin_layout Standard
Eine typische Vorlage sieht so aus:
\end_layout

\begin_layout LyX-Code
Template XFig
\end_layout

\begin_layout LyX-Code
GuiName "XFig: $$AbsOrRelPathParent$$Basename"
\end_layout

\begin_layout LyX-Code
HelpText
\end_layout

\begin_layout LyX-Code
An XFig figure.
\end_layout

\begin_layout LyX-Code
HelpTextEnd
\end_layout

\begin_layout LyX-Code
InputFormat fig
\end_layout

\begin_layout LyX-Code
FileFilter "*.fig"
\end_layout

\begin_layout LyX-Code
AutomaticProduction true
\end_layout

\begin_layout LyX-Code
Transform Rotate
\end_layout

\begin_layout LyX-Code
Transform Resize
\end_layout

\begin_layout LyX-Code
Format LaTeX
\end_layout

\begin_layout LyX-Code
TransformCommand Rotate RotationLatexCommand
\end_layout

\begin_layout LyX-Code
TransformCommand Resize ResizeLatexCommand
\end_layout

\begin_layout LyX-Code
Product "$$RotateFront$$ResizeFront
\end_layout

\begin_layout LyX-Code
         
\backslash

\backslash
input{$$AbsOrRelPathMaster$$Basename.pstex_t}
\end_layout

\begin_layout LyX-Code
         $$ResizeBack$$RotateBack"
\end_layout

\begin_layout LyX-Code
UpdateFormat pstex
\end_layout

\begin_layout LyX-Code
UpdateResult "$$AbsPath$$Basename.pstex_t"
\end_layout

\begin_layout LyX-Code
Requirement "graphicx"
\end_layout

\begin_layout LyX-Code
ReferencedFile latex "$$AbsOrRelPathMaster$$Basename.pstex_t"
\end_layout

\begin_layout LyX-Code
ReferencedFile latex "$$AbsPath$$Basename.eps"
\end_layout

\begin_layout LyX-Code
ReferencedFile dvi "$$AbsPath$$Basename.eps"
\end_layout

\begin_layout LyX-Code
FormatEnd
\end_layout

\begin_layout LyX-Code
Format PDFLaTeX
\end_layout

\begin_layout LyX-Code
TransformCommand Rotate RotationLatexCommand
\end_layout

\begin_layout LyX-Code
TransformCommand Resize ResizeLatexCommand
\end_layout

\begin_layout LyX-Code
Product "$$RotateFront$$ResizeFront
\end_layout

\begin_layout LyX-Code
         
\backslash

\backslash
input{$$AbsOrRelPathMaster$$Basename.pdftex_t}
\end_layout

\begin_layout LyX-Code
         $$ResizeBack$$RotateBack"
\end_layout

\begin_layout LyX-Code
UpdateFormat pdftex
\end_layout

\begin_layout LyX-Code
UpdateResult "$$AbsPath$$Basename.pdftex_t"
\end_layout

\begin_layout LyX-Code
Requirement "graphicx"
\end_layout

\begin_layout LyX-Code
ReferencedFile latex "$$AbsOrRelPathMaster$$Basename.pdftex_t"
\end_layout

\begin_layout LyX-Code
ReferencedFile latex "$$AbsPath$$Basename.pdf"
\end_layout

\begin_layout LyX-Code
FormatEnd
\end_layout

\begin_layout LyX-Code
Format Ascii
\end_layout

\begin_layout LyX-Code
Product "$$Contents(
\backslash
"$$AbsPath$$Basename.asc
\backslash
")"
\end_layout

\begin_layout LyX-Code
UpdateFormat asciixfig
\end_layout

\begin_layout LyX-Code
UpdateResult "$$AbsPath$$Basename.asc"
\end_layout

\begin_layout LyX-Code
FormatEnd
\end_layout

\begin_layout LyX-Code
Format DocBook
\end_layout

\begin_layout LyX-Code
Product "<graphic fileref=
\backslash
"$$AbsOrRelPathMaster$$Basename.eps
\backslash
">
\end_layout

\begin_layout LyX-Code
         </graphic>"
\end_layout

\begin_layout LyX-Code
UpdateFormat eps
\end_layout

\begin_layout LyX-Code
UpdateResult "$$AbsPath$$Basename.eps"
\end_layout

\begin_layout LyX-Code
ReferencedFile docbook "$$AbsPath$$Basename.eps"
\end_layout

\begin_layout LyX-Code
ReferencedFile docbook-xml "$$AbsPath$$Basename.eps"
\end_layout

\begin_layout LyX-Code
FormatEnd
\end_layout

\begin_layout LyX-Code
Product "[XFig: $$FName]"
\end_layout

\begin_layout LyX-Code
FormatEnd
\end_layout

\begin_layout LyX-Code
TemplateEnd
\end_layout

\begin_layout Standard
Wie Sie sehen, ist die Vorlage in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Template
\end_layout

\end_inset

 \SpecialChar ldots
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TemplateEnd
\end_layout

\end_inset

 eingeschlossen.
 Sie enthält einen Kopf, in dem generelle Einstellungen vorgenommen werden
 und Abschnitte 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Format
\end_layout

\end_inset

 \SpecialChar ldots
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FormatEnd
\end_layout

\end_inset

 für jedes unterstützte primäre Zielformat des Dokuments.
\end_layout

\begin_layout Subsection
Der Vorlagenkopf
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
AutomaticProduction
\begin_inset space ~
\end_inset

true|false
\end_layout

\end_inset

 Legt fest, ob die Datei, die von der Vorlagen repräsentiert wird, von \SpecialChar LyX

 erzeugt werden muss.
 Diese Spezifikation darf nur einmal vorkommen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
FileFilter
\begin_inset space ~
\end_inset

<pattern>
\end_layout

\end_inset

 Ein Glob-Muster, das im Datei-Dialog verwendet wird, um die gewünschten
 Dateien zu filtern.
 Wenn es mehr als eine mögliche Dateiendung gibt (tgif etwa hat 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.obj
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.tgo
\end_layout

\end_inset

), verwenden Sie so etwas wie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
"*.{obj,tgo}"
\end_layout

\end_inset

.
 Diese Spezifikation darf nur einmal vorkommen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
GuiName
\begin_inset space ~
\end_inset

<guiname>
\end_layout

\end_inset

 Der Text, der auf dem Knopf der externen Einfügung angezeigt wird.
 Diese Spezifikation darf nur einmal vorkommen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
HelpText
\begin_inset space ~
\end_inset

<text>
\begin_inset space ~
\end_inset

HelpTextEnd
\end_layout

\end_inset

 Der Hilfetext, der im Dialog 
\begin_inset Quotes gld
\end_inset

externes Material
\begin_inset Quotes grd
\end_inset

 angezeigt wird.
 Geben Sie hier genügend Informationen, um den Benutzern zu verdeutlichen,
 was die Vorlage bietet.
 Diese Spezifikation darf nur einmal vorkommen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
InputFormat
\begin_inset space ~
\end_inset

<format>
\end_layout

\end_inset

 Das Format der Quelldatei.
 Das muss der Name eines Formats sein, das \SpecialChar LyX
 kennt (siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Formate"

\end_inset

).
 Verwenden Sie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
*
\end_layout

\end_inset

, wenn die Vorlage Quelldateien von mehr als einem Format bearbeiten kann.
 \SpecialChar LyX
 wird dann versuchen, über die Datei selbst herauszufinden, um welches
 Format es sich aktuell handelt.
 Diese Spezifikation darf nur einmal vorkommen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Template
\begin_inset space ~
\end_inset

<id>
\end_layout

\end_inset

 Ein eindeutiger Name für die Vorlage.
 Er darf keine Ersetzungsmakros (siehe unten) enthalten.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Transform
\begin_inset space ~
\end_inset

Rotate|Resize|Clip|Extra
\end_layout

\end_inset

 Diese Spezifikation legt fest, welche Transformationen von dieser Vorlage
 unterstützt werden.
 Es kann keinmal oder mehrmals vorkommen.
 Dieser Befehl aktiviert die entsprechenden Reiter im Dialog 
\emph on
Externes Material
\emph default
.
 Jede 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Transform
\end_layout

\end_inset

-Spezifikation benötigt eine korrespondierende 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TransformCommand
\end_layout

\end_inset

- oder 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TransformOption
\end_layout

\end_inset

-Spezifikation im 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Format
\end_layout

\end_inset

-Abschnitt.
 Falls dies nicht der Fall ist, wird die Transformation von diesem Format
 nicht unterstützt.
\end_layout

\begin_layout Subsection
Der Format-Abschnitt
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Format
\begin_inset space ~
\end_inset

LaTeX|PDFLaTeX|PlainText|DocBook|XHTML
\end_layout

\end_inset

 Das primäre Dokument-Zielformat, für den diese Formatdefinition gedacht
 ist.
 Nicht jede Vorlage bietet sinnvolle Ausgaben in jedes Zielformat.
 Definieren Sie aber bitte dennoch für alle Zielformat einen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Format
\end_layout

\end_inset

-Abschnitt.
 Verwenden Sie einen Blindtext, wenn keine vernünftige Definition möglich
 ist.
 So können Sie im exportierten Dokument wenigstens einen Hinweis auf die
 externe Vorlage sehen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Option
\begin_inset space ~
\end_inset

<Name>
\begin_inset space ~
\end_inset

<Wert>
\end_layout

\end_inset

 Diese Spezifikation definiert ein zusätzliches Makros 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$<Name>
\end_layout

\end_inset

 zur Ersetzung in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Product
\end_layout

\end_inset

.
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Wert>
\end_layout

\end_inset

 selbst kann Ersetzungsmakros enthalten.
 Der Vorteil gegenüber der Verwendung von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
<Wert>
\end_layout

\end_inset

 direkt in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Product
\end_layout

\end_inset

 ist, dass der ersetzte Wert von
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$<Name>
\end_layout

\end_inset

 validiert wird, so dass es ein gültiges optionales Argument im Dokumentformat
 ist.
 Diese Spezifikation kann keinmal oder mehrmals verwendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Product
\begin_inset space ~
\end_inset

<Text>
\end_layout

\end_inset

 Der Text, der in das exportierte Dokument eingefügt wird.
 Das ist die wichtigste Spezifikation überhaupt, und sie kann sehr komplex
 sein.
 Diese Spezifikation darf nur einmal vorkommen.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Preamble
\begin_inset space ~
\end_inset

<Name>
\end_layout

\end_inset

 spezifiziert einen Textbaustein für den \SpecialChar LaTeX
-Vorspann.
 Er muss mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PreambleDef
\end_layout

\end_inset

 \SpecialChar ldots
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PreambleDefEnd
\end_layout

\end_inset

 definiert werden.
 Diese Spezifikation kann keinmal oder mehrmals verwendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ReferencedFile
\begin_inset space ~
\end_inset

<Format>
\begin_inset space ~
\end_inset

<Dateiname>
\end_layout

\end_inset

 Diese Spezifikation benennt Dateien, die vom Konversionsprozess erzeugt
 werden und die für ein bestimmtes Ausgabeformat benötigt werden.
 Wenn der Dateiname relativ ist, wird er relativ zum Hauptdokument interpretiert.
 Diese Spezifikation kann keinmal oder mehrmals verwendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Requirement
\begin_inset space ~
\end_inset

<Paket>
\end_layout

\end_inset

 Der Name eines benötigten \SpecialChar LaTeX
-Pakets.
 Dieses wird mittels 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout

\backslash
usepackage{}
\end_layout

\end_inset

 in den \SpecialChar LaTeX
-Vorspann eingebunden.
 Diese Spezifikation kann keinmal oder mehrmals verwendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TransformCommand
\begin_inset space ~
\end_inset

Rotate
\begin_inset space ~
\end_inset

RotationLatexCommand
\end_layout

\end_inset

 Diese Spezifikation legt fest, dass der eingebaute \SpecialChar LaTeX
-Befehl für die Drehung
 verwendet werden soll.
 Diese Spezifikation kann keinmal oder einmal verwendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TransformCommand
\begin_inset space ~
\end_inset

Resize
\begin_inset space ~
\end_inset

ResizeLatexCommand
\end_layout

\end_inset

 Diese Spezifikation legt fest, dass der eingebaute \SpecialChar LaTeX
-Befehl für die Skalierung
 verwendet werden soll.
 Diese Spezifikation kann keinmal oder einmal verwendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TransformOption
\begin_inset space ~
\end_inset

Rotate
\begin_inset space ~
\end_inset

RotationLatexOption
\end_layout

\end_inset

 Diese Spezifikation legt fest, dass die Drehung über ein optionales Argument
 erfolgt.
 Diese Spezifikation kann keinmal oder einmal verwendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TransformOption
\begin_inset space ~
\end_inset

Resize
\begin_inset space ~
\end_inset

ResizeLatexOption
\end_layout

\end_inset

 Diese Spezifikation legt fest, dass die Skalierung über ein optionales
 Argument erfolgt.
 Diese Spezifikation kann keinmal oder einmal verwendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TransformOption
\begin_inset space ~
\end_inset

Clip
\begin_inset space ~
\end_inset

ClipLatexOption
\end_layout

\end_inset

 Diese Spezifikation legt fest, dass das Zuschneiden über ein optionales
 Argument erfolgt.
 Diese Spezifikation kann keinmal oder einmal verwendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TransformOption
\begin_inset space ~
\end_inset

Extra
\begin_inset space ~
\end_inset

ExtraLatexOption
\end_layout

\end_inset

 Diese Spezifikation legt fest, dass ein zusätzliches optionales Argument
 verwendet wird.
 Diese Spezifikation kann keinmal oder einmal verwendet werden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UpdateFormat
\begin_inset space ~
\end_inset

<Format>
\end_layout

\end_inset

 Das Dateiformat der konvertierten Datei.
 Das muss der Name eines Formats sein, das \SpecialChar LyX
 kennt (siehe Abschnitt
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Formate"

\end_inset

).
 Diese Spezifikation darf nur einmal vorkommen.
 Soll das Ergebnis eine PDF-Datei sein, müssen Sie das Format 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
pdf6
\end_layout

\end_inset

 wählen.
 Das ist das PDF-Format, das für eingebundene Grafiken verwendet wird.
 Die anderen definierten PDF-Formate sind für die Dokumentausgabe gedacht.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
UpdateResult
\begin_inset space ~
\end_inset

<filename>
\end_layout

\end_inset

 Der Dateiname der konvertierten Datei.
 Der Dateiname muss absolut sein.
 Diese Spezifikation darf nur einmal vorkommen.
\end_layout

\begin_layout Subsection
Vorspann-Definitionen
\end_layout

\begin_layout Standard
Die Konfigurationsdatei für externe Vorlagen kann zusätzliche Vorspann-Definitio
nen enthalten, die in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PreambleDef
\end_layout

\end_inset

 \SpecialChar ldots
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
PreambleDefEnd
\end_layout

\end_inset

 eingeschlossen sind.
 Sie können von den Vorlagen im jeweiligen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Format
\end_layout

\end_inset

-Abschnitt verwendet werden.
\end_layout

\begin_layout Section
Der Ersetzungsmechanismus
\end_layout

\begin_layout Standard
Wenn über die externe Einfügung ein externes Programm gestartet wird, geschieht
 dies anhand eines Befehls, der in der Vorlage festgelegt wurde.
 Ein solcher Befehl kann diverse Makros enthalten, die vor dem eigentlichen
 Aufruf ausgewertet und ersetzt werden.
 Die Ausführung erfolgt dabei immer in demjenigen Verzeichnis, das auch
 das \SpecialChar LyX
-Dokument enthält.
\end_layout

\begin_layout Standard
Außerdem wird der Name des externen Materials für die Ausgabe durch den
 Ersetzungsmechanismus generiert; auch die meisten anderen Spezifikationen
 in der Vorlage können den Ersetzungsmechanismus nutzen.
\end_layout

\begin_layout Standard
Hier finden Sie eine Liste der Makros für die Ersetzung:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$AbsOrRelPathMaster
\end_layout

\end_inset

 Der absolute oder relative Dateipfad zum \SpecialChar LyX
-Hauptdokument.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$AbsOrRelPathParent
\end_layout

\end_inset

 Der absolute oder relative Dateipfad zum \SpecialChar LyX
-Dokument.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$AbsPath
\end_layout

\end_inset

 Der absolute Dateipfad.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$Basename
\end_layout

\end_inset

 Der Dateiname ohne Pfad und Endung.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$Contents(
\begin_inset Quotes qld
\end_inset

Dateiname.ext
\begin_inset Quotes qld
\end_inset

)
\end_layout

\end_inset

 Dieses Makro gibt den Inhalt der Datei mit dem Namen 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Dateiname.ext
\end_layout

\end_inset

 aus.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$Extension
\end_layout

\end_inset

 Die Dateiendung (inklusive Punkt).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$pngOrjpg
\end_layout

\end_inset

 Die Zeichenkette 
\begin_inset Quotes gld
\end_inset

jpg
\begin_inset Quotes grd
\end_inset

, wenn die Datei das JPEG-Format hat, sonst 
\begin_inset Quotes gld
\end_inset

png
\begin_inset Quotes grd
\end_inset

.
 Das ist hilfreich, um unnötige Konversionen für solche Ausgabeformate zu
 vermeiden, die sowohl PNG als auch JPEG unterstützen.
 Die vordefinierte Rastergrafik-Vorlage verwendet dies für die Ausgabe in
 das PDF\SpecialChar TeX
-Format.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$FName
\end_layout

\end_inset

 Der Name der Datei, die im Dialog 
\emph on
Externes Material
\emph default
 ausgewählt wurde.
 Das ist entweder ein absoluter Dateiname oder ein zum \SpecialChar LyX
-Dokument relativer.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$FPath
\end_layout

\end_inset

 Der Pfad-Teil von 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$FName
\end_layout

\end_inset

 (absoluter Dateipfad oder ein zum \SpecialChar LyX
-Dokument relativer).
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$RelPathMaster
\end_layout

\end_inset

 Der Dateipfad, relativ zum \SpecialChar LyX
-Hauptdokument.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$RelPathParent
\end_layout

\end_inset

 Der Dateipfad, relativ zum \SpecialChar LyX
-Dokument.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$Sysdir
\end_layout

\end_inset

 Der absolute Pfad zum Systemverzeichnis.
 Das wird üblicherweise verwendet, um auf die Hilfsskripte zu verweisen,
 die \SpecialChar LyX
 selbst enthält.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$Tempname
\end_layout

\end_inset

 Voller Dateiname (mit Pfad) im temporären Verzeichnis, das automatisch
 gelöscht wird, wenn das entsprechende Dokument geschlossen oder das externe
 Material entfernt wird.
\end_layout

\begin_layout Standard
Alle Pfad-Makros enthalten einen angehängten Verzeichnis-Trenner, so dass
 Sie z.
\begin_inset space \thinspace{}
\end_inset

B.
 einen absoluten Dateipfad mittels 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$AbsPath$$Basename$$Extension
\end_layout

\end_inset

 generieren können.
\end_layout

\begin_layout Standard
Die obigen Makros werden in allen Spezifikationen ersetzt, sollte dies nicht
 explizit anders vermerkt worden sein.
 Die Spezifikation 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Product
\end_layout

\end_inset

 unterstützt zusätzlich noch die folgenden Ersetzungen, sofern sie durch
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Transform
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TransformCommand
\end_layout

\end_inset

 aktiviert wurden:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$ResizeFront
\end_layout

\end_inset

 Der vordere Teil des Skalierungsbefehls.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$ResizeBack
\end_layout

\end_inset

 Der hintere Teil des Skalierungsbefehls.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$RotateFront
\end_layout

\end_inset

 Der vordere Teil des Drehungsbefehls.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$RotateBack
\end_layout

\end_inset

 Der hintere Teil des Drehungsbefehls.
\end_layout

\begin_layout Standard
Die Spezifikation 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Option
\end_layout

\end_inset

 unterstützt zusätzlich noch die folgenden Ersetzungen, sofern sie durch
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Transform
\end_layout

\end_inset

 und 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
TransformCommand
\end_layout

\end_inset

 aktiviert wurden:
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$Clip
\end_layout

\end_inset

 Die Option für das Zuschneiden.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$Extra
\end_layout

\end_inset

 Die zusätzliche Option.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$Resize
\end_layout

\end_inset

 Die Option für das Skalieren.
\end_layout

\begin_layout Description
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$Rotate
\end_layout

\end_inset

 Die Option für die Drehung.
\end_layout

\begin_layout Standard
Sie fragen sich vielleicht, warum es so viele Pfad-Makros gibt.
 Vor allem gibt es dafür zwei Gründe:
\end_layout

\begin_layout Enumerate
Relative und absolute sollten jeweils relativ oder absolut bleiben, denn
 die Anwender haben vermutlich Gründe, warum sie diese oder jene Form verwenden.
 Relative Pfade sind bspw.
 hilfreich für Dokumente, die weitergegeben werden und die auf verschiedenen
 Geräten funktionieren sollten.
 Absolute Pfade werden von manchen Programmen vorausgesetzt.
\end_layout

\begin_layout Enumerate
\SpecialChar LaTeX
 behandelt relative Dateinamen anders als \SpecialChar LyX
 und andere Programme in eingebetteten
 eingebundenen Dateien.
 Für \SpecialChar LyX
 ist ein relativer Dateiname immer relativ zum Dokument, das den Dateinamen
 enthält.
 Für \SpecialChar LaTeX
 ist er immer relativ zum Hauptdokument.
 Diese zwei Angaben sind identisch, wenn sie keine Unterdokumente haben,
 aber sie unterscheiden sich, wenn Sie ein Hauptdokument mit Unterdokumenten
 haben.
 Das heißt, dass relative Dateinamen umgewandelt werden müssen, wenn Sie
 für \SpecialChar LaTeX
 aufbereitet werden.
 Zum Glück macht \SpecialChar LyX
 das automatisch für Sie, wenn Sie die richtigen Makros
 verwenden.
\end_layout

\begin_layout Standard
Welche Pfad-Makros sollten Sie also in neuen Vorlagen-Definitionen verwenden?
 Die Regel ist nicht schwer:
\end_layout

\begin_layout Itemize
Verwenden Sie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$AbsPath
\end_layout

\end_inset

, wenn ein absoluter Pfad benötigt wird.
\end_layout

\begin_layout Itemize
Verwenden Sie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$AbsOrRelPathMaster
\end_layout

\end_inset

, wenn die ersetzte Zeichenkette eine Form von if \SpecialChar LaTeX
-Eingabe ist.
\end_layout

\begin_layout Itemize
Sonst verwenden Sie 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
$$AbsOrRelPathParent
\end_layout

\end_inset

, um die Präferenzen der Anwender zu erhalten.
\end_layout

\begin_layout Standard
Es gibt Spezialfälle, bei denen diese Regel nicht funktioniert und bei denen
 bspw.
 relative Namen gebraucht werden, aber der Normalfall ist das nicht.
 Ein Beispiel für einen solchen Ausnahmefall isz die Spezifikation
\end_layout

\begin_layout Quote
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
ReferencedFile latex "$$AbsOrRelPathMaster$$Basename.pstex_t"
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
in der XFig-Vorlage oben.
 Wir können hier keinen absoluten Namen verwenden, weil der Kopierer für
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.pstex_t
\end_layout

\end_inset

-Dateien relative Namen braucht, um den Dateiinhalt bearbeiten zu können.
\end_layout

\begin_layout Section
Sicherheitshinweise
\begin_inset CommandInset label
LatexCommand label
name "sec:Sicherheitshinweise"

\end_inset


\end_layout

\begin_layout Standard
Das Feature für externes Material interagiert viel mit externen Programmen,
 und zwar automatisch.
 Das bringt potentielle Sicherheitsprobleme mit sich, die zu beachten sind.
 Da die Möglichkeit besteht, in den Vorlagen beliebige Dateinamen und\SpecialChar breakableslash
oder
 Parameter zu definieren, und da diese in Befehlsdeklarationen eingefügt
 werden, ist es theoretisch möglich, bösartige Dokumente zu erzeugen, die
 beliebige Befehle ausführen können, wenn jemand das Dokument exportiert
 oder ansieht.
 Das wollen wir definitiv verhindern.
\end_layout

\begin_layout Standard
Da nun aber die externen Programmbefehle ausschließlich in den Konfigurationsdat
eien für die Vorlagen spezifiziert sind, gibt es keine Sicherheitsprobleme,
 wenn \SpecialChar LyX
 richtig konfiguriert wurde und nur sichere Vorlagen verwendet werden.
 Denn externe Programme werden mit dem Systembefehl 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
execvp
\end_layout

\end_inset

 und nicht mit 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
system
\end_layout

\end_inset

 aufgerufen.
 Das verunmöglicht die Ausführung beliebiger Befehle über die Shell mithilfe
 von Dateinamen oder \SpecialChar nobreakdash
parametern.
\end_layout

\begin_layout Standard
Das heißt aber auch, dass die Auswahl der Befehle, die Sie in den Vorlagendefini
tionen verwenden können, beschränkt ist.
 Insbesondere 
\emph on
\lang english
Pipes
\emph default
\lang ngerman
 und 
\emph on
Weiterleitungen
\emph default
 sind nicht ohne Weiteres verfügbar.
 Das ist der Preis für die Sicherheit.
 Wenn Sie Shell-Features verwenden wollen, sollten Sie ein sicheres Skript
 schreiben, um dies in einer kontrollierten Art und Weise zu tun, und dann
 dieses Skript über die Befehlsspezifikation aufrufen.
\end_layout

\begin_layout Standard
Es ist zwar möglich eine Vorlage zu entwerfen, die direkt mit der Shell
 interagiert, aber da dies bösartigen Anwendern erlauben würde, über clevere
 Dateinamen und\SpecialChar breakableslash
oder Parameter beliebige Befehle auszuführen, empfehlen wir
 grundsätzlich, dass Sie sichere Skripte verwenden, die den Systembefehl
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
execvp
\end_layout

\end_inset

 in kontrollierter Form einsetzen.
 Wir verstehen, dass es innerhalb kontrollierter Umgebungen verlockend sein
 kann, einfach normale Shell-Skripte zu verwenden.
 Aber seien Sie sich bewusst, dass Sie, wenn Sie dies tun, eine leicht ausnutzba
re Sicherheitslücke in ihr System einfügen.
 Natürlich werden solche unsicheren Vorlagen niemals in die \SpecialChar LyX
-Distribution
 aufgenommen, auch wenn wir immer dazu ermuntern, neue Vorlagen in der Open-Sour
ce-Tradition beizusteuern.
\end_layout

\begin_layout Standard
Die Einbindung von externem Material ist ein mächtiges Werkzeug, und Sie
 müssen aufpassen, dass Sie diese Macht nicht unterschätzen und Sicherheitsprobl
eme schaffen.
 Ein subtiler Fehler in einer einzigen Zeile in einem unschuldig aussehenden
 Skript kann die Tür für riesige Sicherheitsprobleme öffnen.
 Wenn Sie also etwas nicht vollständig verstehen, empfehlen wir, dass Sie
 einen Sicherheitsexperten oder das \SpecialChar LyX
-Team konsultieren, sobald sie nicht
 sicher sind, ob eine externe Vorlage sicher ist oder nicht.
 Und tun Sie dies, bevor Sie die vorlage in einer unkontrollierten Umgebung
 verwenden!
\end_layout

\begin_layout Chapter
\start_of_appendix
Liste der Funktionen für die Verwendung in Layout-Dateien
\begin_inset CommandInset label
LatexCommand label
name "chap:Liste-von-Funktionen"

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="8">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
accents
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
booktabs
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
feyn
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
listings
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
natbib
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rotfloat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tfrupee
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wasysym
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
amsbsy
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
calc
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
fixltx2e
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
longtable
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
nomencl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rsphrase
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tipa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wrapfig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
amscd
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CJK
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
float
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lyxskak
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pdfcolmk
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
setspace
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tipx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
xargs
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
amsmath
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
color
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
framed
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
makeidx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pdfpages
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
shapepar
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tone
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
xcolor
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
amssymb
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
covington
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
graphicx
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
marvosym
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pifont
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
slashed
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
txfonts
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
xy
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
amstext
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
csquotes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hhline
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mathdesign
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pmboxdraw
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
soul
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ulem
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yhmath
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
amsthm
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dvipost
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hyperref
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mathdots
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
polyglossia
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
splitidx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
undertilde
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
array
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
endnotes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ifsym
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mathrsfs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
prettyref
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
subfig
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
units
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ascii
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
enumitem
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ifthen
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mhchem
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
pxfonts
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
subscript
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
url
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bbding
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
esint
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
jurabib
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
multicol
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
refstyle
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
textcomp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
varioref
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
fancybox
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
latexsym
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
multirow
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rotating
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
textgreek
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
verbatim
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Chapter
Namen von verfügbaren Farben für die Verwendung in Layout-Dateien
\begin_inset CommandInset label
LatexCommand label
name "chap:Namen-von-Farben"

\end_inset


\end_layout

\begin_layout Standard
Im Folgenden sind die Standardfarben und die Farben, die man in den \SpecialChar LyX
-Voreinstell
ungen festlegen kann, aufgelistet.
\end_layout

\begin_layout Section
Farbfunktionen
\end_layout

\begin_layout Standard
Das folgende sind keine echten Farben, sondern eher Funktionen, die Farbdefiniti
onen betreffen.
\end_layout

\begin_layout Description

\lang english
ignore
\lang ngerman
 Die Farbe wird ignoriert
\end_layout

\begin_layout Description

\lang english
inherit
\lang ngerman
 Die Farbe wird vom Kontext geerbt
\end_layout

\begin_layout Description

\lang english
none
\lang ngerman
 Keine spezielle Farbe – setzt definierte Farben zurück.
\end_layout

\begin_layout Section
Statische Farben
\end_layout

\begin_layout Standard
Die folgenden Farben sind fest definiert und können nicht verändert werden:
\end_layout

\begin_layout Description

\lang english
black
\lang ngerman
 Schwarz
\end_layout

\begin_layout Description

\lang english
white
\lang ngerman
 Weiß
\end_layout

\begin_layout Description

\lang english
blue
\lang ngerman
 Blau
\end_layout

\begin_layout Description

\lang english
brown
\lang ngerman
 Braun
\end_layout

\begin_layout Description

\lang english
cyan
\lang ngerman
 Cyan
\end_layout

\begin_layout Description

\lang english
darkgray
\lang ngerman
 Dunkelgrau
\end_layout

\begin_layout Description

\lang english
gray
\lang ngerman
 Grau
\end_layout

\begin_layout Description

\lang english
green
\lang ngerman
 Grün
\end_layout

\begin_layout Description

\lang english
lightgray
\lang ngerman
 Hellgrau
\end_layout

\begin_layout Description

\lang english
lime
\lang ngerman
 Neongrün
\end_layout

\begin_layout Description

\lang english
magenta
\lang ngerman
 Magenta
\end_layout

\begin_layout Description

\lang english
olive
\lang ngerman
 Olivgrün
\end_layout

\begin_layout Description

\lang english
orange
\lang ngerman
 Orange
\end_layout

\begin_layout Description

\lang english
pink
\lang ngerman
 Pink
\end_layout

\begin_layout Description

\lang english
purple
\lang ngerman
 Purpur
\end_layout

\begin_layout Description

\lang english
red
\lang ngerman
 Rot
\end_layout

\begin_layout Description

\lang english
teal
\lang ngerman
 Blaugrün
\end_layout

\begin_layout Description

\lang english
violet
\lang ngerman
 Violett
\end_layout

\begin_layout Description

\lang english
yellow
\lang ngerman
 Gelb
\end_layout

\begin_layout Section
Dynamische Farben
\end_layout

\begin_layout Standard
Dies sind die Farben, die in 
\family sans
Werkzeuge\SpecialChar menuseparator
Einstellungen
\family default
 spezifischen Elementen zugeordnet werden:
\end_layout

\begin_layout Description

\lang english
added_space
\lang ngerman
 Farbe der Markierung von eingefügten Leerzeichen (in der Änderungsmarkierung)
\end_layout

\begin_layout Description

\lang english
addedtext
\lang ngerman
 Farbe von eingefügtem Text (in der Änderungsmarkierung)
\end_layout

\begin_layout Description

\lang english
appendix
\lang ngerman
 Farbe der Anhangmarkierung
\end_layout

\begin_layout Description

\lang english
background
\lang ngerman
 Generelle Farbe des Hintergrunds
\end_layout

\begin_layout Description

\lang english
bottomarea
\lang ngerman
 Farbe des Bereichs nach dem Ende von \SpecialChar LyX
-Dokumenten
\end_layout

\begin_layout Description

\lang english
branchlabel
\lang ngerman
 Farbe der Marke von Zweigen
\end_layout

\begin_layout Description

\lang english
buttonbg
\lang ngerman
 Farbe des Hintergrund von (Einfügungs-)Knöpfen
\end_layout

\begin_layout Description

\lang english
buttonframe
\lang ngerman
 Farbe des Rahmens von (Einfügungs-)Knöpfen
\end_layout

\begin_layout Description

\lang english
buttonhoverbg
\lang ngerman
 Farbe des Hintergrund von (Einfügungs-)Knöpfen, wenn die Maus darüberfährt
\end_layout

\begin_layout Description

\lang english
changebar
\lang ngerman
 Farbe des Änderungsbalkens
\end_layout

\begin_layout Description

\lang english
changedtextauthor1
\lang ngerman
 Geänderter Text des 1.
\begin_inset space \space{}
\end_inset

Autors
\end_layout

\begin_layout Description

\lang english
changedtextauthor2
\lang ngerman
 Geänderter Text des 2.
\begin_inset space \space{}
\end_inset

Autors
\end_layout

\begin_layout Description

\lang english
changedtextauthor3
\lang ngerman
 Geänderter Text des 3.
\begin_inset space \space{}
\end_inset

Autors
\end_layout

\begin_layout Description

\lang english
changedtextauthor4
\lang ngerman
 Geänderter Text des 4.
\begin_inset space \space{}
\end_inset

Autors
\end_layout

\begin_layout Description

\lang english
changedtextauthor5
\lang ngerman
 Geänderter Text des 5.
\begin_inset space \space{}
\end_inset

Autors
\end_layout

\begin_layout Description

\lang english
collapsable
\lang ngerman
 Textfarbe in einklappbaren Einfügungen
\end_layout

\begin_layout Description

\lang english
collapsableframe
\lang ngerman
 Rahmenfarbe in einklappbaren Einfügungen
\end_layout

\begin_layout Description

\lang english
command
\lang ngerman
 Textfarbe in Befehls-Einfügungen
\end_layout

\begin_layout Description

\lang english
commandbg
\lang ngerman
 Hintergrundfarbe in Befehls-Einfügungen
\end_layout

\begin_layout Description

\lang english
commandframe
\lang ngerman
 Rahmenfarbe in Befehls-Einfügungen
\end_layout

\begin_layout Description

\lang english
commentbg
\lang ngerman
 Hintergrundfarbe von Kommentaren
\end_layout

\begin_layout Description

\lang english
commentlabel
\lang ngerman
 Farbe der Marke von Kommentaren
\end_layout

\begin_layout Description

\lang english
cursor
\lang ngerman
 Farbe des Cursors
\end_layout

\begin_layout Description

\lang english
deletedtext
\lang ngerman
 Farbe von gelöschtem Text (im Änderungsmodus)
\end_layout

\begin_layout Description

\lang english
deletedtextmodifier
\lang ngerman
 Modifizierungsfarbe für gelöschten Text
\end_layout

\begin_layout Description

\lang english
depthbar
\lang ngerman
 Farbe der Einrückungsmarkierung am Rand
\end_layout

\begin_layout Description

\lang english
eolmarker
\lang ngerman
 Farbe der Zeilenendemarkierung
\end_layout

\begin_layout Description

\lang english
error
\lang ngerman
 Farbe der \SpecialChar LaTeX
-Fehler-Box
\end_layout

\begin_layout Description

\lang english
footlabel
\lang ngerman
 Farbe der Marke für Fußnoten
\end_layout

\begin_layout Description

\lang english
foreground
\lang ngerman
 generelle Vordergrundfarbe
\end_layout

\begin_layout Description

\lang english
graphicsbg
\lang ngerman
 Hintergrundfarbe von Grafik-Einfügungen
\end_layout

\begin_layout Description

\lang english
greyedoutbg
\lang ngerman
 Hintergrundfarbe für Grauschrift-Einfügungen
\end_layout

\begin_layout Description

\lang english
greyedoutlabel
\lang ngerman
 Farbe der Marke für Grauschrift-Einfügungen
\end_layout

\begin_layout Description

\lang english
greyedouttext
\lang ngerman
 Textfarbe für Grauschrift-Einfügungen
\end_layout

\begin_layout Description

\lang english
indexlabel
\lang ngerman
 Farbe der Marke für Stichworteinfügungen
\end_layout

\begin_layout Description

\lang english
inlinecompletion
\lang ngerman
 Farbe der Wortvervollständigung
\end_layout

\begin_layout Description

\lang english
insetbg
\lang ngerman
 Hintergrundfarbe von Einfügungen
\end_layout

\begin_layout Description

\lang english
insetframe
\lang ngerman
 Rahmenfarbe von Einfügungen
\end_layout

\begin_layout Description

\lang english
language
\lang ngerman
 Farbe zur Markierung fremdsprachigen Texts,
\end_layout

\begin_layout Description

\lang english
latex
\lang ngerman
 Textfarbe im \SpecialChar LaTeX
-Modus
\end_layout

\begin_layout Description

\lang english
listingsbg
\lang ngerman
 Hintergrundfarbe von Programmlisting-Einfügungen
\end_layout

\begin_layout Description

\lang english
marginlabel
\lang ngerman
 Farbe der Marke von Randnotiz-Einfügungen
\end_layout

\begin_layout Description

\lang english
math
\lang ngerman
 Textfarbe von Mathe-Einfügungen
\end_layout

\begin_layout Description

\lang english
mathbg
\lang ngerman
 Hintergrundfarbe von Mathe-Einfügungen
\end_layout

\begin_layout Description

\lang english
mathcorners
\lang ngerman
 Rahmenfarbe von Mathe-Einfügungen, die nicht ediert werden
\end_layout

\begin_layout Description

\lang english
mathframe
\lang ngerman
 Rahmenfarbe von Mathe-Einfügungen, die ediert werden
\end_layout

\begin_layout Description

\lang english
mathline
\lang ngerman
 Linienfarbe im Mathe-Modus
\end_layout

\begin_layout Description

\lang english
mathmacrobg
\lang ngerman
 Hintergrundfarbe der Mathe-Makro-Einfügung
\end_layout

\begin_layout Description

\lang english
mathmacroblend
\lang ngerman
 Ausgeblendete Farbe der Mathe-Makro-Einfügung
\end_layout

\begin_layout Description

\lang english
mathmacroframe
\lang ngerman
 Rahmenfarbe der Mathe-Makro-Einfügung
\end_layout

\begin_layout Description

\lang english
mathmacrohoverbg
\lang ngerman
 Hintergrundfarbe der Mathe-Makro-Einfügung, wenn die Maus darüberfährt
\end_layout

\begin_layout Description

\lang english
mathmacrolabel
\lang ngerman
 Farbe der Marke der Mathe-Makro-Einfügung
\end_layout

\begin_layout Description

\lang english
mathmacronewarg
\lang ngerman
 Farbe für neue Parameter der Mathe-Makro-Definition
\end_layout

\begin_layout Description

\lang english
mathmacrooldarg
\lang ngerman
 Farbe für alte Parameter der Mathe-Makro-Definition
\end_layout

\begin_layout Description

\lang english
newpage
\lang ngerman
 Farbe der Seitenumbruchsmarkierung (neue Seite)
\end_layout

\begin_layout Description

\lang english
nonunique_inlinecompletion
\lang ngerman
 Farbe der Wortvervollständigung (nicht-eindeutiger Teil)
\end_layout

\begin_layout Description

\lang english
notebg
\lang ngerman
 Hintergrundfarbe von Notiz-Einfügungen
\end_layout

\begin_layout Description

\lang english
notelabel
\lang ngerman
 Farbe der Marke von Notiz-Einfügungen
\end_layout

\begin_layout Description

\lang english
pagebreak
\lang ngerman
 Farbe der Seitenumbruchsmarkierung (Seitenumbruch) und von Zeilenumbrüchen
\end_layout

\begin_layout Description

\lang english
paragraphmarker
\lang ngerman
 Farbe für die Absatzmarkierung
\end_layout

\begin_layout Description

\lang english
phantomtext
\lang ngerman
 Textfarbe für Phantom-Einfügungen
\end_layout

\begin_layout Description

\lang english
preview
\lang ngerman
 Farbe für den Hintergrund der sofortigen Vorschau
\end_layout

\begin_layout Description

\lang english
previewframe
\lang ngerman
 Rahmenfarbe der sofortigen Vorschau
\end_layout

\begin_layout Description

\lang english
regexpframe
\lang ngerman
 Rahmenfarbe für die Einfügung für reguläre Ausdrücke
\end_layout

\begin_layout Description

\lang english
scroll
\lang ngerman
 Farbe, die anzeigt, dass eine Tabellenspalte gescrollt werden kann
\end_layout

\begin_layout Description

\lang english
selection
\lang ngerman
 Hintergrundfarbe des ausgewählten Texts
\end_layout

\begin_layout Description

\lang english
selectiontext
\lang ngerman
 Vordergrundfarbe des ausgewählten Texts
\end_layout

\begin_layout Description

\lang english
shadedbg
\lang ngerman
 Hintergrundfarbe einer schattierten Box
\end_layout

\begin_layout Description

\lang english
special
\lang ngerman
 Textfarbe von Sonderzeichen
\end_layout

\begin_layout Description

\lang english
tabularline
\lang ngerman
 Farbe von Tabellenlinien
\end_layout

\begin_layout Description

\lang english
tabularonoffline
\lang ngerman
 Farbe von Tabellenlinien
\end_layout

\begin_layout Description

\lang english
urllabel
\lang ngerman
 Farbe der Marke von URL-Einfügungen
\end_layout

\begin_layout Description

\lang english
urltext
\lang ngerman
 Textfarbe in URL-Einfügungen
\end_layout

\end_body
\end_document
